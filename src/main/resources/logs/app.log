2023-11-23 21:41:42,137 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 21:41:42,213 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-23 21:41:42,217 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-23 21:41:42,641 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 21:41:42,649 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 21:41:42,649 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 21:41:42,649 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 21:41:42,650 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 21:41:42,655 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 21:41:43,778 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 21:41:45,050 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 21:41:45,565 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-23 21:41:50,928 INFO mainLogger [main] Application closed
2023-11-23 22:10:49,186 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:10:49,302 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-23 22:10:49,306 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-23 22:10:49,774 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:10:49,785 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:10:49,785 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:10:49,786 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:10:49,786 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:10:49,791 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:10:51,145 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:10:52,645 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:10:52,722 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-23 22:10:53,116 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-23 22:10:53,116 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-23 22:11:00,566 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-23 22:11:44,681 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:11:44,716 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:11:44,717 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:11:44,717 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:11:44,717 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:11:44,717 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:11:44,717 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:11:44,788 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:11:44,919 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:11:50,213 INFO mainLogger [JavaFX Application Thread] Group info successfully edited
2023-11-23 22:11:50,236 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:11:50,276 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:11:50,276 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:11:50,277 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:11:50,277 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:11:50,277 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:11:50,277 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:11:50,341 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:11:50,437 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:11:50,437 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-23 22:11:50,451 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-23 22:11:50,451 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-23 22:12:03,848 INFO mainLogger [JavaFX Application Thread] Started adding band
2023-11-23 22:12:05,959 INFO mainLogger [JavaFX Application Thread] Started adding band
2023-11-23 22:12:49,479 ERROR mainLogger [JavaFX Application Thread] Field Year of foundation should be an integer!
java.lang.NumberFormatException: Field Year of foundation should be an integer!
	at AppController.validateInput(AppController.java:316) ~[classes/:?]
	at AppController.lambda$addGroup$9(AppController.java:147) ~[classes/:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49) ~[javafx.base.jar:?]
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base.jar:?]
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8875) ~[javafx.graphics.jar:?]
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203) ~[javafx.controls.jar:?]
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207) ~[javafx.controls.jar:?]
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274) ~[javafx.controls.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54) ~[javafx.base.jar:?]
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base.jar:?]
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3984) ~[javafx.graphics.jar:?]
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1890) ~[javafx.graphics.jar:?]
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:551) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:937) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-23 22:13:04,186 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:13:04,221 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:13:04,221 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:13:04,221 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:13:04,221 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:13:04,221 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:13:04,222 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:13:04,278 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:13:04,361 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:13:04,362 INFO mainLogger [JavaFX Application Thread] Saving new band to DataBase
2023-11-23 22:13:10,248 INFO mainLogger [JavaFX Application Thread] Group lxkgjdlfgk successfully saved to DB
2023-11-23 22:13:10,255 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:13:10,292 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:13:10,292 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:13:10,292 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:13:10,292 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:13:10,292 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:13:10,292 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:13:10,354 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:13:10,443 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:13:10,443 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-23 22:13:10,457 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-23 22:13:10,457 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-23 22:13:14,125 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:13:14,155 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:13:14,156 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:13:14,156 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:13:14,156 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:13:14,156 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:13:14,156 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:13:14,212 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:13:14,285 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:13:14,285 INFO mainLogger [JavaFX Application Thread] Trying to delete group
2023-11-23 22:13:15,222 INFO mainLogger [JavaFX Application Thread] Group lxkgjdlfgk deleted successfully
2023-11-23 22:13:15,228 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:13:15,261 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:13:15,261 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:13:15,261 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:13:15,261 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:13:15,261 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:13:15,261 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:13:15,328 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:13:15,415 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:13:15,416 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-23 22:13:15,430 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-23 22:13:15,431 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-23 22:13:29,759 INFO mainLogger [JavaFX Application Thread] XML file exported
2023-11-23 22:14:24,677 INFO mainLogger [JavaFX Application Thread] Report created
2023-11-23 22:15:02,234 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-23 22:15:02,263 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-23 22:15:02,263 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-23 22:15:02,263 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-23 22:15:02,263 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-23 22:15:02,263 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-23 22:15:02,263 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-23 22:15:02,312 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-23 22:15:02,400 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-23 22:15:02,400 INFO mainLogger [JavaFX Application Thread] Trying to select specified data from DB
2023-11-23 22:15:02,463 INFO mainLogger [JavaFX Application Thread] Selecting specified data from DB success
2023-11-23 22:15:02,463 INFO mainLogger [JavaFX Application Thread] Group found
2023-11-23 22:15:02,464 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-23 22:15:08,145 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-23 22:15:10,109 INFO mainLogger [main] Application closed
2023-11-24 00:20:06,294 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 00:20:06,405 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-24 00:20:06,410 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-24 00:20:06,966 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 00:20:06,976 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 00:20:06,976 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 00:20:06,977 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 00:20:06,977 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 00:20:06,981 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 00:20:08,244 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 00:20:09,677 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 00:20:09,751 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 00:20:10,129 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 00:20:10,130 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 00:20:22,838 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-24 00:20:29,331 ERROR mainLogger [JavaFX Application Thread] No selected group
2023-11-24 00:20:30,216 INFO mainLogger [JavaFX Application Thread] Started adding band
2023-11-24 00:20:36,429 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 00:20:36,466 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 00:20:36,467 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 00:20:36,467 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 00:20:36,467 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 00:20:36,467 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 00:20:36,467 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 00:20:36,543 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 00:20:36,659 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 00:20:36,660 INFO mainLogger [JavaFX Application Thread] Saving new band to DataBase
2023-11-24 00:20:42,078 INFO mainLogger [JavaFX Application Thread] Group чавпва successfully saved to DB
2023-11-24 00:20:42,084 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 00:20:42,124 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 00:20:42,124 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 00:20:42,124 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 00:20:42,125 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 00:20:42,125 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 00:20:42,125 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 00:20:42,195 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 00:20:42,302 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 00:20:42,302 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 00:20:42,315 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 00:20:42,316 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 00:20:56,050 INFO mainLogger [main] Application closed
2023-11-24 10:18:57,152 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 10:18:57,258 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-24 10:18:57,262 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-24 10:18:57,738 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 10:18:57,748 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 10:18:57,749 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 10:18:57,749 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 10:18:57,749 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 10:18:57,753 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 10:18:58,921 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 10:19:00,350 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 10:19:00,424 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 10:19:00,787 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 10:19:00,788 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 10:19:07,608 WARN mainLogger [JavaFX Application Thread] Trying to edit group, but no group was selected
2023-11-24 10:19:12,203 WARN mainLogger [JavaFX Application Thread] Trying to delete group, bot no group was selected
2023-11-24 10:19:46,011 INFO mainLogger [JavaFX Application Thread] Report created
2023-11-24 10:20:00,751 INFO mainLogger [JavaFX Application Thread] Started adding band
2023-11-24 10:20:16,280 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-24 10:20:17,741 INFO mainLogger [main] Application closed
2023-11-24 10:21:13,809 INFO mainLogger [main] Application started
2023-11-24 10:21:14,524 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 10:21:14,609 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-24 10:21:14,613 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-24 10:21:15,062 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 10:21:15,069 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 10:21:15,070 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 10:21:15,070 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 10:21:15,071 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 10:21:15,077 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 10:21:16,267 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 10:21:17,593 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 10:21:17,667 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 10:21:18,083 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 10:21:18,084 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 10:21:39,021 INFO mainLogger [main] Application closed
2023-11-24 10:28:17,001 INFO mainLogger [main] Application started
2023-11-24 10:28:17,889 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 10:28:17,989 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-24 10:28:17,993 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-24 10:28:18,533 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 10:28:18,543 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 10:28:18,544 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 10:28:18,544 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 10:28:18,544 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 10:28:18,549 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 10:28:19,891 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 10:28:21,338 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 10:28:21,412 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 10:28:21,925 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 10:28:21,926 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 10:28:28,697 INFO mainLogger [JavaFX Application Thread] Report ./reports/report.pdf successfully created
2023-11-24 10:28:38,128 INFO mainLogger [main] Application closed
2023-11-24 10:33:40,889 INFO mainLogger [main] Application started
2023-11-24 10:33:41,677 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 10:33:41,777 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-24 10:33:41,781 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-24 10:33:42,318 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 10:33:42,328 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 10:33:42,329 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 10:33:42,329 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 10:33:42,329 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 10:33:42,333 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 10:33:43,634 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 10:33:45,112 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 10:33:45,190 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 10:33:45,595 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 10:33:45,596 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 10:33:51,360 INFO mainLogger [JavaFX Application Thread] Report ./reports/report.pdf successfully created
2023-11-24 10:33:59,813 INFO mainLogger [JavaFX Application Thread] XML file exported
2023-11-24 10:34:04,822 INFO mainLogger [main] Application closed
2023-11-24 11:56:49,601 INFO mainLogger [main] Application started
2023-11-24 11:56:50,427 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 11:56:50,535 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-24 11:56:50,539 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-24 11:56:51,098 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 11:56:51,108 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 11:56:51,109 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 11:56:51,109 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 11:56:51,109 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 11:56:51,114 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 11:56:52,419 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 11:56:53,997 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 11:56:54,092 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 11:56:54,555 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 11:56:54,556 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 11:57:06,198 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-24 11:57:15,195 WARN mainLogger [JavaFX Application Thread] Trying to delete group, but no group was selected
2023-11-24 11:57:34,667 INFO mainLogger [JavaFX Application Thread] XML file exported
2023-11-24 11:57:50,029 INFO mainLogger [JavaFX Application Thread] Report ./reports/report.pdf successfully created
2023-11-24 11:58:09,894 INFO mainLogger [JavaFX Application Thread] Started adding band
2023-11-24 11:58:19,524 ERROR mainLogger [JavaFX Application Thread] Field Year of foundation should be an integer!
java.lang.NumberFormatException: Field Year of foundation should be an integer!
	at AppController.validateInput(AppController.java:315) ~[classes/:?]
	at AppController.lambda$addGroup$9(AppController.java:146) ~[classes/:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49) ~[javafx.base.jar:?]
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base.jar:?]
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8875) ~[javafx.graphics.jar:?]
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203) ~[javafx.controls.jar:?]
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207) ~[javafx.controls.jar:?]
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274) ~[javafx.controls.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54) ~[javafx.base.jar:?]
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base.jar:?]
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3984) ~[javafx.graphics.jar:?]
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1890) ~[javafx.graphics.jar:?]
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:551) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:937) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-24 11:58:51,384 ERROR mainLogger [JavaFX Application Thread] Field Place in chart is empty. Try again.
AppController$IllegalArgumentException: Field Place in chart is empty. Try again.
	at AppController.validateInput(AppController.java:312) ~[classes/:?]
	at AppController.lambda$addGroup$9(AppController.java:148) ~[classes/:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49) ~[javafx.base.jar:?]
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base.jar:?]
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8875) ~[javafx.graphics.jar:?]
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203) ~[javafx.controls.jar:?]
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:207) ~[javafx.controls.jar:?]
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274) ~[javafx.controls.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:232) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:189) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74) ~[javafx.base.jar:?]
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54) ~[javafx.base.jar:?]
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198) ~[javafx.base.jar:?]
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3984) ~[javafx.graphics.jar:?]
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1890) ~[javafx.graphics.jar:?]
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2708) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:551) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:937) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-24 11:58:59,578 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 11:58:59,621 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 11:58:59,621 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 11:58:59,621 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 11:58:59,621 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 11:58:59,622 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 11:58:59,622 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 11:58:59,702 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 11:58:59,832 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 11:58:59,833 INFO mainLogger [JavaFX Application Thread] Saving new band to DataBase
2023-11-24 11:59:00,926 INFO mainLogger [JavaFX Application Thread] Group sdkfjlskdf successfully saved to DB
2023-11-24 11:59:00,933 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-24 11:59:00,979 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-24 11:59:00,980 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-24 11:59:00,980 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-24 11:59:00,980 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-24 11:59:00,980 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-24 11:59:00,980 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-24 11:59:01,046 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-24 11:59:01,146 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-24 11:59:01,147 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-24 11:59:01,160 INFO mainLogger [JavaFX Application Thread] Fetching data from DB success
2023-11-24 11:59:01,160 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-24 11:59:13,624 INFO mainLogger [main] Application closed
2023-11-25 19:07:10,717 INFO mainLogger [main] Application started
2023-11-25 19:07:11,638 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:07:11,751 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:07:11,755 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:07:12,273 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:07:12,282 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:07:12,282 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:07:12,282 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:07:12,282 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:07:12,288 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:07:13,591 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:07:15,094 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:07:15,180 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:07:15,621 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:07:15,622 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:07:17,758 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:25:53,305 INFO mainLogger [main] Application started
2023-11-25 19:25:54,085 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:25:54,194 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:25:54,197 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:25:54,703 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:25:54,714 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:25:54,714 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:25:54,714 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:25:54,714 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:25:54,719 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:25:56,072 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:25:57,487 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:25:57,559 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:25:57,954 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:25:57,955 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:26:00,583 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:27:22,370 INFO mainLogger [main] Application started
2023-11-25 19:27:23,012 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:27:23,102 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:27:23,106 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:27:23,619 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:27:23,627 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:27:23,627 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:27:23,627 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:27:23,627 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:27:23,633 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:27:24,808 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:27:26,142 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:27:26,229 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:27:26,665 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:27:26,666 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:27:28,890 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:27:37,205 INFO mainLogger [main] Application closed
2023-11-25 19:27:53,394 INFO mainLogger [main] Application started
2023-11-25 19:27:54,088 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:27:54,178 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:27:54,181 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:27:54,626 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:27:54,633 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:27:54,633 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:27:54,633 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:27:54,634 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:27:54,640 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:27:55,729 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:27:57,297 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:27:57,373 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:27:57,787 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:27:57,788 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:27:59,855 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:28:17,158 INFO mainLogger [main] Application closed
2023-11-25 19:31:54,009 INFO mainLogger [main] Application started
2023-11-25 19:31:54,694 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:31:54,769 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:31:54,773 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:31:55,225 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:31:55,233 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:31:55,234 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:31:55,234 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:31:55,235 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:31:55,240 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:31:56,310 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:31:57,643 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:31:57,717 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:31:58,173 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:31:58,174 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:31:59,828 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:32:06,788 INFO mainLogger [main] Application closed
2023-11-25 19:33:09,144 INFO mainLogger [main] Application started
2023-11-25 19:33:09,844 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:33:09,921 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:33:09,926 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:33:10,367 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:33:10,374 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:33:10,374 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:33:10,374 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:33:10,374 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:33:10,378 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:33:11,500 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:33:12,793 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:33:12,879 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:33:13,296 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:33:13,297 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:33:15,367 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:33:39,504 INFO mainLogger [main] Application closed
2023-11-25 19:36:20,648 INFO mainLogger [main] Application started
2023-11-25 19:36:21,306 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:36:21,383 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:36:21,387 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:36:21,839 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:36:21,847 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:36:21,848 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:36:21,848 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:36:21,848 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:36:21,854 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:36:22,984 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:36:24,348 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:36:24,431 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:36:24,882 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:36:24,883 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:36:26,951 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:38:25,865 INFO mainLogger [main] Application started
2023-11-25 19:38:26,592 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:38:26,676 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:38:26,679 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:38:27,170 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:38:27,178 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:38:27,178 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:38:27,178 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:38:27,178 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:38:27,185 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:38:28,270 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:38:29,568 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:38:29,649 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:38:30,080 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:38:30,080 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:38:31,666 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:39:36,394 INFO mainLogger [main] Application closed
2023-11-25 19:40:09,558 INFO mainLogger [main] Application started
2023-11-25 19:40:10,214 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:40:10,288 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:40:10,293 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:40:10,745 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:40:10,754 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:40:10,755 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:40:10,755 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:40:10,755 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:40:10,760 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:40:11,801 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:40:13,102 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:40:13,183 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:40:13,609 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:40:13,610 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:40:15,290 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:41:32,368 INFO mainLogger [main] Application started
2023-11-25 19:41:33,078 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:41:33,159 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:41:33,162 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:41:33,615 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:41:33,622 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:41:33,622 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:41:33,622 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:41:33,622 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:41:33,627 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:41:34,707 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:41:36,068 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:41:36,141 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:41:36,597 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:41:36,598 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:42:06,480 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:44:42,921 INFO mainLogger [main] Application started
2023-11-25 19:44:43,644 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:44:43,717 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:44:43,722 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:44:44,184 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:44:44,191 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:44:44,191 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:44:44,191 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:44:44,191 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:44:44,196 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:44:45,268 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:44:46,588 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:44:46,666 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:44:47,109 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:44:47,110 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:44:51,094 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:45:41,072 INFO mainLogger [main] Application closed
2023-11-25 19:48:50,088 INFO mainLogger [main] Application started
2023-11-25 19:48:50,794 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:48:50,877 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:48:50,881 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:48:51,351 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:48:51,358 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:48:51,358 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:48:51,359 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:48:51,359 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:48:51,362 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:48:52,477 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:48:53,871 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:48:53,955 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:48:54,356 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:48:54,357 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:48:56,173 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:55:27,080 INFO mainLogger [main] Application started
2023-11-25 19:55:27,866 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:55:27,984 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:55:27,988 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:55:28,482 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:55:28,491 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:55:28,491 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:55:28,491 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:55:28,491 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:55:28,496 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:55:29,714 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:55:31,167 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:55:31,241 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:55:31,673 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:55:31,674 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:55:34,231 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:57:45,541 INFO mainLogger [main] Application started
2023-11-25 19:57:46,230 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:57:46,306 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:57:46,309 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:57:46,772 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:57:46,780 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:57:46,780 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:57:46,781 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:57:46,781 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:57:46,786 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:57:47,886 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:57:49,185 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:57:49,248 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:57:49,695 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:57:49,695 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:57:51,405 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 19:57:58,058 INFO mainLogger [main] Application closed
2023-11-25 19:58:18,849 INFO mainLogger [main] Application started
2023-11-25 19:58:19,565 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 19:58:19,641 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 19:58:19,646 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 19:58:20,093 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 19:58:20,101 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 19:58:20,101 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 19:58:20,101 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 19:58:20,102 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 19:58:20,107 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 19:58:21,153 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 19:58:22,399 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 19:58:22,497 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 19:58:22,907 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 19:58:22,908 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 19:58:24,428 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 20:00:23,339 INFO mainLogger [main] Application started
2023-11-25 20:00:24,111 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 20:00:24,197 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 20:00:24,200 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 20:00:24,697 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 20:00:24,707 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 20:00:24,708 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 20:00:24,708 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 20:00:24,708 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 20:00:24,715 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 20:00:25,930 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 20:00:27,226 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 20:00:27,301 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 20:00:27,740 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 20:00:27,741 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 20:00:29,342 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:00:55,354 INFO mainLogger [main] Application closed
2023-11-25 21:06:23,442 INFO mainLogger [main] Application started
2023-11-25 21:06:24,385 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:06:24,509 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:06:24,514 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:06:25,092 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:06:25,103 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:06:25,103 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:06:25,103 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:06:25,103 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:06:25,108 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:06:26,338 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:06:27,661 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:06:27,736 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:06:28,164 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:06:28,165 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:06:30,001 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:07:19,226 INFO mainLogger [main] Application started
2023-11-25 21:07:19,869 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:07:19,940 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:07:19,944 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:07:20,379 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:07:20,387 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:07:20,387 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:07:20,388 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:07:20,388 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:07:20,393 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:07:21,442 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:07:22,674 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:07:22,750 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:07:23,157 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:07:23,158 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:07:25,033 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:08:20,294 INFO mainLogger [main] Application started
2023-11-25 21:08:20,947 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:08:21,018 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:08:21,022 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:08:21,447 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:08:21,456 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:08:21,456 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:08:21,457 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:08:21,457 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:08:21,464 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:08:22,543 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:08:23,791 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:08:23,861 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:08:24,288 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:08:24,289 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:08:27,233 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:09:59,403 INFO mainLogger [main] Application started
2023-11-25 21:10:00,079 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:10:00,179 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:10:00,183 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:10:00,690 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:10:00,699 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:10:00,699 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:10:00,699 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:10:00,700 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:10:00,704 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:10:01,740 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:10:03,031 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:10:03,123 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:10:03,589 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:10:03,590 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:10:05,637 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:10:38,675 INFO mainLogger [main] Application started
2023-11-25 21:10:39,326 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:10:39,402 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:10:39,406 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:10:39,838 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:10:39,847 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:10:39,848 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:10:39,848 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:10:39,848 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:10:39,855 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:10:40,883 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:10:42,096 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:10:42,166 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:10:42,577 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:10:42,578 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:10:44,307 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:11:22,998 INFO mainLogger [main] Application started
2023-11-25 21:11:23,734 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:11:23,818 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:11:23,822 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:11:24,281 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:11:24,288 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:11:24,289 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:11:24,289 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:11:24,289 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:11:24,294 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:11:25,398 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:11:26,729 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:11:26,840 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:11:27,299 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:11:27,300 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:11:29,168 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:11:56,978 INFO mainLogger [main] Application started
2023-11-25 21:11:57,675 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:11:57,756 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:11:57,760 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:11:58,214 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:11:58,222 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:11:58,222 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:11:58,222 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:11:58,222 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:11:58,227 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:11:59,263 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:12:00,526 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:12:00,605 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:12:01,008 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:12:01,009 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:12:03,074 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:12:09,581 INFO mainLogger [main] Application closed
2023-11-25 21:12:52,522 INFO mainLogger [main] Application started
2023-11-25 21:12:53,263 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:12:53,364 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:12:53,369 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:12:53,828 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:12:53,836 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:12:53,836 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:12:53,836 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:12:53,837 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:12:53,841 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:12:54,896 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:12:56,105 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:12:56,178 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 21:12:56,588 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 21:12:56,589 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:12:56,589 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 21:12:59,673 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:13:00,596 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:13:01,564 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:13:11,026 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:13:11,065 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:13:11,065 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:13:11,065 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:13:11,065 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:13:11,065 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:13:11,065 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:13:11,136 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 21:13:11,242 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 21:13:11,243 INFO mainLogger [JavaFX Application Thread] Trying to select specified data from DB
2023-11-25 21:13:11,399 INFO mainLogger [JavaFX Application Thread] Selecting specified data from DB success
2023-11-25 21:13:11,399 INFO mainLogger [JavaFX Application Thread] Group found
2023-11-25 21:13:11,400 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:13:12,589 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 21:13:16,278 INFO mainLogger [main] Application closed
2023-11-25 21:32:49,407 INFO mainLogger [main] Application started
2023-11-25 21:32:50,122 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:32:50,220 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:32:50,224 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:32:50,701 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:32:50,712 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:32:50,712 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:32:50,712 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:32:50,712 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:32:50,717 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:32:51,687 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:37:05,562 INFO mainLogger [main] Application started
2023-11-25 21:37:06,210 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:37:06,288 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:37:06,291 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:37:06,715 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:37:06,722 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:37:06,722 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:37:06,723 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:37:06,723 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:37:06,728 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:37:07,663 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:41:34,178 INFO mainLogger [main] Application started
2023-11-25 21:41:35,011 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:41:35,128 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:41:35,133 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:41:35,644 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:41:35,655 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:41:35,655 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:41:35,655 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:41:35,655 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:41:35,661 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:41:36,786 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:43:39,331 INFO mainLogger [main] Application started
2023-11-25 21:43:39,981 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:43:40,055 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:43:40,058 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:43:40,498 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:43:40,505 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:43:40,505 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:43:40,506 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:43:40,506 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:43:40,512 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:43:41,387 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:50:09,132 INFO mainLogger [main] Application started
2023-11-25 21:50:09,835 INFO o.h.j.i.u.LogHelper [JavaFX Application Thread] HHH000204: Processing PersistenceUnitInfo [name: test]
2023-11-25 21:50:09,904 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:50:09,909 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:50:10,353 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:50:10,361 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:50:10,361 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:50:10,361 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=****, user=root}
2023-11-25 21:50:10,361 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:50:10,367 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:50:11,237 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:54:03,709 INFO mainLogger [main] Application started
2023-11-25 21:54:04,363 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 21:54:04,363 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 21:54:04,364 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 21:54:04,370 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 21:54:04,375 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 21:54:04,380 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 21:54:04,442 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:54:04,444 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 21:54:04,446 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:54:04,477 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 21:54:04,486 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 21:54:04,487 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 21:54:04,488 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 21:54:04,488 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 21:54:04,489 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 21:54:04,490 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 21:54:04,491 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 21:54:04,492 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 21:54:04,493 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 21:54:04,494 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 21:54:04,494 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 21:54:04,495 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 21:54:04,508 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 21:54:04,510 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 21:54:04,711 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 21:54:04,711 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 21:54:04,711 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6ce63fb8
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6ce63fb8
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6a8d55b4
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6a8d55b4
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@613d7d71
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@613d7d71
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 21:54:04,712 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b17fb59
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b17fb59
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@114bcbbf
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@59fd5e98
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59fd5e98
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7b035414
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5feab51e
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 21:54:04,713 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2ff65465
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2ff65465
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@374ac848
2023-11-25 21:54:04,714 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@374ac848
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b96c06e
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@65eea05
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65eea05
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@67377a0e
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@48c28066
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@39bd55b9
2023-11-25 21:54:04,715 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6506af8a
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@550490bc
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@550490bc
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@919ebca
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@919ebca
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a5a77cd
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@af0e9f3
2023-11-25 21:54:04,716 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7b001961
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d01ea70
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@34ec1602
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@39dede1d
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@426e1356
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@426e1356
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@700e3301
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@700e3301
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@24067704
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@24067704
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b677baf
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b677baf
2023-11-25 21:54:04,717 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@59213136
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@59213136
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58369728
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f1f657d
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1f75d532
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1f75d532
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f8def6b
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@236eae65
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ee03f8
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26039872
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26039872
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@655dd6e
2023-11-25 21:54:04,718 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@509e5647
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@37086e6f
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37086e6f
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@df2a0f4
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@df2a0f4
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 21:54:04,719 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@73e58988
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b886200
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b786502
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b786502
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6494c1c8
2023-11-25 21:54:04,720 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4c243738
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@64dc1bcb
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@64dc1bcb
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@87f5eb6
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@87f5eb6
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@658f2576
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@658f2576
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6189784f
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6189784f
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@11bbb251
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@11bbb251
2023-11-25 21:54:04,721 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@6343c43e
2023-11-25 21:54:04,722 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6343c43e
2023-11-25 21:54:04,722 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f7be9b5
2023-11-25 21:54:04,727 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@7a04e8d2
2023-11-25 21:54:04,727 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a04e8d2
2023-11-25 21:54:04,728 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@4f0809c9
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a39f4e5
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b2d577f
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@71bc0c79
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7ef505c6
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6bfe4821
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7af96c8e
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6bb7786c
2023-11-25 21:54:04,729 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dba8be9
2023-11-25 21:54:04,737 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1c17b530] into BootstrapContext; was [null]
2023-11-25 21:54:04,737 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3521f556] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1379b570]
2023-11-25 21:54:04,854 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 21:54:04,854 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 21:54:04,889 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:54:04,896 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:54:04,896 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:54:04,897 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 21:54:04,897 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:54:04,900 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 21:54:04,901 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:54:05,378 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 21:54:05,378 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 21:54:05,378 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 21:54:05,434 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 21:54:05,445 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 21:54:05,445 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 21:54:05,469 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53e96f56) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b26b26)
2023-11-25 21:54:05,469 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42a7f55b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@267f9fce)
2023-11-25 21:54:05,469 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ef4d788) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a8b602b)
2023-11-25 21:54:05,469 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@577b550c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d2031c2)
2023-11-25 21:54:05,470 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15f0ff79) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@648b4fd4)
2023-11-25 21:54:05,470 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@69d5b57c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65f737a5)
2023-11-25 21:54:05,470 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@776e1755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49250383)
2023-11-25 21:54:05,470 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d9f318e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51896587)
2023-11-25 21:54:05,470 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@565a045c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@37822c0f)
2023-11-25 21:54:05,471 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 21:54:05,471 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 21:54:05,471 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 21:54:05,475 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 21:54:05,475 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 21:54:05,479 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@53a8c6e9
2023-11-25 21:54:05,479 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4f0809c9`
2023-11-25 21:54:05,485 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 21:54:05,485 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 21:54:05,486 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 21:54:05,488 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c142752] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6640d19d]
2023-11-25 21:54:05,542 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 21:54:05,547 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 21:54:05,571 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 21:54:05,582 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 21:54:05,592 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 21:54:05,604 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:54:05,637 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 21:54:05,638 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 21:54:05,639 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 21:54:05,645 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:54:05,651 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 21:54:05,657 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:54:05,662 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 21:54:05,663 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:54:05,667 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 21:54:05,670 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:54:05,671 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property listOfMembers with lazy=false
2023-11-25 21:54:05,671 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:listOfMembers]
2023-11-25 21:54:05,672 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for listOfMembers
2023-11-25 21:54:05,672 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.listOfMembers
2023-11-25 21:54:05,673 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 21:54:05,674 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 21:54:05,674 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 21:54:05,675 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 21:54:05,675 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 21:54:05,675 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 21:54:05,675 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 21:54:05,675 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:54:05,675 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property membersAsString with lazy=false
2023-11-25 21:54:05,676 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:membersAsString]
2023-11-25 21:54:05,676 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for membersAsString
2023-11-25 21:54:05,676 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.membersAsString
2023-11-25 21:54:05,676 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property membersAsString
2023-11-25 21:54:05,676 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 21:54:05,676 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:54:05,676 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 21:54:05,677 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:54:05,677 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 21:54:05,677 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:54:05,677 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 21:54:05,677 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 21:54:05,677 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 21:54:05,677 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 21:54:05,678 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 21:54:05,678 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 21:54:05,681 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 21:54:05,681 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:54:05,693 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 21:54:05,697 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:54:05,698 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 21:54:05,699 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 21:54:05,700 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:54:05,701 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:54:05,703 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 21:54:05,706 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 21:54:05,706 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 21:54:05,707 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:54:05,707 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='upcomingTours_ORDER')
2023-11-25 21:54:05,707 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:54:05,708 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='upcomingTours_KEY')
2023-11-25 21:54:05,708 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='upcomingTours_KEY')
2023-11-25 21:54:05,708 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:54:05,708 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:54:05,708 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.upcomingTours
2023-11-25 21:54:05,708 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property upcomingTours
2023-11-25 21:54:05,709 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 21:54:05,709 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 21:54:05,709 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 21:54:05,709 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 21:54:05,709 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 21:54:05,709 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 21:54:05,716 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 21:54:05,716 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 21:54:05,716 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 21:54:05,717 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:54:05,719 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 21:54:05,720 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 21:54:05,720 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 21:54:05,720 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:54:05,720 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 21:54:05,720 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:54:05,720 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 21:54:05,720 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:54:05,720 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 21:54:05,721 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:54:05,721 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:54:05,722 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 21:54:05,722 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 21:54:05,722 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 21:54:05,723 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 21:54:05,723 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 21:54:05,724 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 21:54:05,724 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:54:05,725 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 21:54:05,726 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 21:54:05,726 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 21:54:05,726 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:54:05,726 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 21:54:05,726 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:54:05,726 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 21:54:05,726 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:54:05,726 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 21:54:05,726 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 21:54:05,727 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 21:54:05,727 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:54:05,727 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 21:54:05,728 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:54:05,728 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 21:54:05,728 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 21:54:05,730 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 21:54:05,730 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:54:05,731 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 21:54:05,731 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 21:54:05,731 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 21:54:05,731 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:54:05,732 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 21:54:05,732 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:54:05,732 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 21:54:05,732 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:54:05,732 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 21:54:05,732 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 21:54:05,733 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 21:54:05,733 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 21:54:05,733 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 21:54:05,733 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 21:54:05,733 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 21:54:05,733 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 21:54:05,734 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 21:54:05,734 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 21:54:05,734 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 21:54:05,735 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 21:54:05,735 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 21:54:05,735 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 21:54:05,736 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 21:54:05,736 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 21:54:05,736 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:54:05,738 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 21:54:05,739 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 21:54:05,739 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 21:54:05,739 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 21:54:05,739 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 21:54:05,739 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 21:54:05,739 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 21:54:05,739 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 21:54:05,739 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 21:54:05,740 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 21:54:05,740 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 21:54:05,740 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 21:54:05,740 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 21:54:05,740 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 21:54:05,740 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 21:54:05,741 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 21:54:05,741 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 21:54:05,741 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 21:54:05,741 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 21:54:05,741 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 21:54:05,742 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 21:54:05,742 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 21:54:05,742 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:54:05,742 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 21:54:05,742 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:54:05,742 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 21:54:05,743 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:54:05,745 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:54:05,747 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for listOfMembers
2023-11-25 21:54:05,747 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for membersAsString
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:54:05,748 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:54:05,749 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 21:54:05,749 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 21:54:05,749 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 21:54:05,749 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 21:54:05,749 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 21:54:05,749 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:54:05,752 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 21:54:05,753 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 21:54:05,753 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 21:54:05,753 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 21:54:05,753 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 21:54:05,753 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.upcomingTours
2023-11-25 21:54:05,753 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.upcomingTours through a foreign key
2023-11-25 21:54:05,755 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.upcomingTours -> tours
2023-11-25 21:54:05,758 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 21:54:05,758 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 21:54:05,758 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 21:54:05,758 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 21:54:05,759 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 21:54:05,761 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 21:54:05,764 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 21:54:05,773 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:54:05,778 DEBUG o.h.s.s.ServiceBinding [JavaFX Application Thread] Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2023-11-25 21:59:21,805 INFO mainLogger [main] Application started
2023-11-25 21:59:22,518 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 21:59:22,519 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 21:59:22,519 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 21:59:22,526 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 21:59:22,530 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 21:59:22,534 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 21:59:22,594 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 21:59:22,597 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 21:59:22,599 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 21:59:22,623 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 21:59:22,629 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 21:59:22,630 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 21:59:22,631 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 21:59:22,632 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 21:59:22,632 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 21:59:22,634 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 21:59:22,634 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 21:59:22,636 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 21:59:22,637 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 21:59:22,637 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 21:59:22,637 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 21:59:22,638 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 21:59:22,651 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 21:59:22,653 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 21:59:22,877 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 21:59:22,877 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 21:59:22,877 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 21:59:22,877 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6ce63fb8
2023-11-25 21:59:22,877 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6ce63fb8
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6a8d55b4
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6a8d55b4
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@613d7d71
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@613d7d71
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 21:59:22,878 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 21:59:22,879 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 21:59:22,879 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 21:59:22,879 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 21:59:22,879 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b17fb59
2023-11-25 21:59:22,880 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b17fb59
2023-11-25 21:59:22,880 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@114bcbbf
2023-11-25 21:59:22,880 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@59fd5e98
2023-11-25 21:59:22,880 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59fd5e98
2023-11-25 21:59:22,880 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7b035414
2023-11-25 21:59:22,880 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5feab51e
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 21:59:22,881 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 21:59:22,882 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 21:59:22,883 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 21:59:22,883 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2ff65465
2023-11-25 21:59:22,883 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2ff65465
2023-11-25 21:59:22,883 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@374ac848
2023-11-25 21:59:22,883 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@374ac848
2023-11-25 21:59:22,884 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 21:59:22,884 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 21:59:22,884 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 21:59:22,884 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b96c06e
2023-11-25 21:59:22,884 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@65eea05
2023-11-25 21:59:22,884 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65eea05
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@67377a0e
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@48c28066
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@39bd55b9
2023-11-25 21:59:22,885 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6506af8a
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@550490bc
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@550490bc
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@919ebca
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@919ebca
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a5a77cd
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@af0e9f3
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7b001961
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d01ea70
2023-11-25 21:59:22,886 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@34ec1602
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@39dede1d
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@426e1356
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@426e1356
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@700e3301
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@700e3301
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@24067704
2023-11-25 21:59:22,887 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@24067704
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b677baf
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b677baf
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@59213136
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@59213136
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58369728
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f1f657d
2023-11-25 21:59:22,888 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1f75d532
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1f75d532
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f8def6b
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@236eae65
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ee03f8
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26039872
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26039872
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@655dd6e
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@509e5647
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@37086e6f
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37086e6f
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@df2a0f4
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@df2a0f4
2023-11-25 21:59:22,889 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@73e58988
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b886200
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b786502
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b786502
2023-11-25 21:59:22,890 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6494c1c8
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4c243738
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@64dc1bcb
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@64dc1bcb
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 21:59:22,891 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@87f5eb6
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@87f5eb6
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@658f2576
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@658f2576
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6189784f
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6189784f
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@11bbb251
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@11bbb251
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@6343c43e
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6343c43e
2023-11-25 21:59:22,892 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f7be9b5
2023-11-25 21:59:22,900 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@7a04e8d2
2023-11-25 21:59:22,900 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a04e8d2
2023-11-25 21:59:22,902 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@4f0809c9
2023-11-25 21:59:22,902 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a39f4e5
2023-11-25 21:59:22,902 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b2d577f
2023-11-25 21:59:22,902 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@71bc0c79
2023-11-25 21:59:22,903 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7ef505c6
2023-11-25 21:59:22,903 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6bfe4821
2023-11-25 21:59:22,903 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7af96c8e
2023-11-25 21:59:22,903 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6bb7786c
2023-11-25 21:59:22,903 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dba8be9
2023-11-25 21:59:22,911 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1c17b530] into BootstrapContext; was [null]
2023-11-25 21:59:22,911 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3521f556] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1379b570]
2023-11-25 21:59:23,029 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 21:59:23,029 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 21:59:23,061 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 21:59:23,067 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 21:59:23,067 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:59:23,067 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 21:59:23,068 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 21:59:23,071 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 21:59:23,071 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 21:59:23,557 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 21:59:23,558 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 21:59:23,558 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 21:59:23,617 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 21:59:23,630 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 21:59:23,631 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 21:59:23,662 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76e666c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2588368f)
2023-11-25 21:59:23,662 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53e96f56) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b26b26)
2023-11-25 21:59:23,662 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42a7f55b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@267f9fce)
2023-11-25 21:59:23,663 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ef4d788) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a8b602b)
2023-11-25 21:59:23,663 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@577b550c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d2031c2)
2023-11-25 21:59:23,663 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15f0ff79) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@648b4fd4)
2023-11-25 21:59:23,663 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@69d5b57c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@65f737a5)
2023-11-25 21:59:23,663 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@776e1755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49250383)
2023-11-25 21:59:23,663 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@d9f318e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51896587)
2023-11-25 21:59:23,665 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 21:59:23,666 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 21:59:23,666 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 21:59:23,670 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 21:59:23,670 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 21:59:23,675 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@21db9563
2023-11-25 21:59:23,675 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4f0809c9`
2023-11-25 21:59:23,685 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 21:59:23,685 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 21:59:23,685 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 21:59:23,685 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 21:59:23,685 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 21:59:23,685 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 21:59:23,687 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 21:59:23,687 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 21:59:23,687 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 21:59:23,689 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@756988cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66a82c0]
2023-11-25 21:59:23,751 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 21:59:23,759 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 21:59:23,789 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 21:59:23,800 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 21:59:23,808 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 21:59:23,820 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:59:23,858 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 21:59:23,861 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 21:59:23,861 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 21:59:23,868 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:59:23,874 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 21:59:23,880 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:59:23,885 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 21:59:23,886 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:59:23,889 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 21:59:23,892 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:59:23,893 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property listOfMembers with lazy=false
2023-11-25 21:59:23,893 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:listOfMembers]
2023-11-25 21:59:23,894 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for listOfMembers
2023-11-25 21:59:23,894 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.listOfMembers
2023-11-25 21:59:23,894 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 21:59:23,896 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 21:59:23,897 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 21:59:23,897 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 21:59:23,897 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 21:59:23,897 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 21:59:23,897 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 21:59:23,897 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:59:23,897 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property membersAsString with lazy=false
2023-11-25 21:59:23,898 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:membersAsString]
2023-11-25 21:59:23,898 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for membersAsString
2023-11-25 21:59:23,898 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.membersAsString
2023-11-25 21:59:23,898 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property membersAsString
2023-11-25 21:59:23,898 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 21:59:23,898 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:59:23,898 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 21:59:23,899 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:59:23,899 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 21:59:23,899 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:59:23,899 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 21:59:23,899 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 21:59:23,899 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 21:59:23,899 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 21:59:23,899 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 21:59:23,900 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 21:59:23,903 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 21:59:23,903 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:59:23,919 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 21:59:23,923 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:59:23,925 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 21:59:23,926 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 21:59:23,927 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:59:23,928 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:59:23,931 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 21:59:23,933 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 21:59:23,933 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 21:59:23,934 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:59:23,934 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='upcomingTours_ORDER')
2023-11-25 21:59:23,934 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='upcomingTours_KEY')
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='upcomingTours_KEY')
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.upcomingTours
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property upcomingTours
2023-11-25 21:59:23,935 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 21:59:23,936 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 21:59:23,936 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 21:59:23,936 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 21:59:23,936 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 21:59:23,936 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 21:59:23,944 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 21:59:23,944 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 21:59:23,944 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 21:59:23,945 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:59:23,947 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 21:59:23,947 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 21:59:23,947 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 21:59:23,947 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:59:23,947 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 21:59:23,947 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:59:23,947 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 21:59:23,947 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:59:23,947 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 21:59:23,948 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 21:59:23,948 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 21:59:23,948 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 21:59:23,948 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 21:59:23,948 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 21:59:23,948 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:59:23,949 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 21:59:23,949 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 21:59:23,950 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 21:59:23,950 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 21:59:23,950 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 21:59:23,950 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 21:59:23,951 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 21:59:23,951 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 21:59:23,951 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:59:23,952 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 21:59:23,952 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 21:59:23,952 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 21:59:23,952 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:59:23,952 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 21:59:23,952 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:59:23,953 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 21:59:23,953 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 21:59:23,953 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 21:59:23,954 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 21:59:23,954 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:59:23,954 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 21:59:23,954 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:59:23,954 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 21:59:23,954 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:59:23,955 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 21:59:23,955 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 21:59:23,957 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 21:59:23,957 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:59:23,958 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 21:59:23,959 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 21:59:23,959 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 21:59:23,959 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 21:59:23,959 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 21:59:23,959 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 21:59:23,959 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 21:59:23,959 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 21:59:23,959 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 21:59:23,959 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 21:59:23,960 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 21:59:23,960 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 21:59:23,961 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 21:59:23,961 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 21:59:23,961 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 21:59:23,961 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 21:59:23,961 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 21:59:23,962 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 21:59:23,965 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 21:59:23,965 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 21:59:23,965 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 21:59:23,965 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 21:59:23,965 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 21:59:23,965 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 21:59:23,965 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 21:59:23,965 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 21:59:23,966 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 21:59:23,966 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 21:59:23,966 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 21:59:23,966 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 21:59:23,966 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 21:59:23,967 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 21:59:23,967 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 21:59:23,967 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 21:59:23,967 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 21:59:23,967 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 21:59:23,967 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 21:59:23,967 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 21:59:23,968 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 21:59:23,968 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 21:59:23,968 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 21:59:23,968 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 21:59:23,968 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 21:59:23,968 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 21:59:23,968 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 21:59:23,971 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:59:23,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for listOfMembers
2023-11-25 21:59:23,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 21:59:23,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for membersAsString
2023-11-25 21:59:23,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:59:23,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 21:59:23,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 21:59:23,975 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 21:59:23,976 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 21:59:23,976 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 21:59:23,976 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 21:59:23,980 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 21:59:23,980 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 21:59:23,980 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 21:59:23,980 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 21:59:23,980 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 21:59:23,980 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.upcomingTours
2023-11-25 21:59:23,980 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.upcomingTours through a foreign key
2023-11-25 21:59:23,982 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.upcomingTours -> tours
2023-11-25 21:59:23,985 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 21:59:23,985 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 21:59:23,985 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 21:59:23,986 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 21:59:23,986 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 21:59:23,988 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 21:59:23,992 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 21:59:24,001 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 21:59:24,006 DEBUG o.h.s.s.ServiceBinding [JavaFX Application Thread] Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2023-11-25 22:07:31,272 INFO mainLogger [main] Application started
2023-11-25 22:07:32,015 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 22:07:32,016 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 22:07:32,017 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 22:07:32,025 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 22:07:32,032 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 22:07:32,038 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 22:07:32,121 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 22:07:32,124 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 22:07:32,126 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 22:07:32,159 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 22:07:32,167 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 22:07:32,168 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 22:07:32,170 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:07:32,170 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:07:32,170 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 22:07:32,172 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 22:07:32,173 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 22:07:32,175 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:07:32,176 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 22:07:32,176 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 22:07:32,176 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:07:32,178 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 22:07:32,194 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 22:07:32,196 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 22:07:32,435 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 22:07:32,436 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f464c14
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:07:32,437 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:07:32,438 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@3ffd0514
2023-11-25 22:07:32,439 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b4ca7fd
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@de97e22
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4354532d
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6028c7e0
2023-11-25 22:07:32,440 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 22:07:32,441 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3cb6a3fa
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64866098
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec7a8f2
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49929912
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 22:07:32,442 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 22:07:32,443 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:07:32,443 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:07:32,443 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:07:32,443 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:07:32,444 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:07:32,444 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:07:32,444 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:07:32,445 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b703d77
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 22:07:32,446 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 22:07:32,447 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 22:07:32,455 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 22:07:32,456 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 22:07:32,457 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@165eb05
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1783524e
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@11444a5a
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@736a7fbd
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5df98f16
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@50e5a7c5
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@63c03119
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43772d4b
2023-11-25 22:07:32,458 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52e78b0c
2023-11-25 22:07:32,468 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1dfd30ab] into BootstrapContext; was [null]
2023-11-25 22:07:32,468 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c4cf803] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@10fe3347]
2023-11-25 22:07:32,590 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 22:07:32,591 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 22:07:32,625 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 22:07:32,636 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 22:07:32,636 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 22:07:32,636 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 22:07:32,636 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 22:07:32,642 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 22:07:32,642 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 22:07:33,163 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 22:07:33,164 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 22:07:33,164 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 22:07:33,227 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 22:07:33,242 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 22:07:33,242 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 22:07:33,282 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75f4071d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@995b58)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31b9c405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e021833)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b9b2801) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@192e9b1)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e748c6a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7039d017)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62f02531) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@743997bf)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e74528e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1073863f)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7349e0ad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b750514)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4719ded6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b57ea74)
2023-11-25 22:07:33,283 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7727273b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1419d16e)
2023-11-25 22:07:33,285 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 22:07:33,285 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 22:07:33,286 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 22:07:33,289 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:07:33,289 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:07:33,294 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@77351a23
2023-11-25 22:07:33,294 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@165eb05`
2023-11-25 22:07:33,306 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:07:33,307 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:07:33,307 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:07:33,307 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:07:33,307 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:07:33,307 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:07:33,309 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:07:33,309 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:07:33,309 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:07:33,311 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@186720f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4287cadc]
2023-11-25 22:07:33,375 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 22:07:33,381 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 22:07:33,415 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 22:07:33,427 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 22:07:33,436 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 22:07:33,449 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:07:33,484 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 22:07:33,486 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 22:07:33,486 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 22:07:33,493 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:07:33,502 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 22:07:33,510 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:07:33,516 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 22:07:33,517 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:07:33,520 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 22:07:33,523 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:07:33,524 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property listOfMembers with lazy=false
2023-11-25 22:07:33,524 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:listOfMembers]
2023-11-25 22:07:33,525 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for listOfMembers
2023-11-25 22:07:33,525 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.listOfMembers
2023-11-25 22:07:33,526 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 22:07:33,527 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 22:07:33,527 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 22:07:33,528 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property membersAsString with lazy=false
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:membersAsString]
2023-11-25 22:07:33,528 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for membersAsString
2023-11-25 22:07:33,528 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.membersAsString
2023-11-25 22:07:33,529 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property membersAsString
2023-11-25 22:07:33,529 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 22:07:33,529 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:07:33,529 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 22:07:33,529 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:07:33,529 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 22:07:33,529 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:07:33,530 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 22:07:33,530 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 22:07:33,530 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 22:07:33,530 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 22:07:33,530 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 22:07:33,530 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 22:07:33,534 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:07:33,535 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:07:33,547 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 22:07:33,552 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:07:33,553 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 22:07:33,554 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 22:07:33,555 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:07:33,555 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:07:33,559 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 22:07:33,561 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 22:07:33,562 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:07:33,562 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tours with lazy=false
2023-11-25 22:07:33,562 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:tours]
2023-11-25 22:07:33,562 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tours
2023-11-25 22:07:33,562 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.tours
2023-11-25 22:07:33,563 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 22:07:33,563 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 22:07:33,563 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 22:07:33,563 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 22:07:33,563 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 22:07:33,563 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 22:07:33,563 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 22:07:33,570 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 22:07:33,571 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 22:07:33,571 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 22:07:33,571 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:07:33,573 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 22:07:33,573 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 22:07:33,573 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 22:07:33,574 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:07:33,574 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 22:07:33,574 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:07:33,574 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 22:07:33,574 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:07:33,574 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 22:07:33,574 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 22:07:33,575 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 22:07:33,575 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:07:33,576 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 22:07:33,576 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:07:33,576 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 22:07:33,576 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 22:07:33,576 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 22:07:33,576 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 22:07:33,576 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 22:07:33,576 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 22:07:33,577 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 22:07:33,577 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 22:07:33,577 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 22:07:33,578 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:07:33,579 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 22:07:33,579 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 22:07:33,579 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 22:07:33,579 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:07:33,579 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 22:07:33,579 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:07:33,579 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 22:07:33,579 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:07:33,580 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 22:07:33,580 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 22:07:33,580 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 22:07:33,580 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 22:07:33,580 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 22:07:33,580 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 22:07:33,580 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 22:07:33,581 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 22:07:33,581 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:07:33,581 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 22:07:33,581 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:07:33,581 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 22:07:33,581 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:07:33,582 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 22:07:33,582 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 22:07:33,583 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 22:07:33,584 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:07:33,586 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 22:07:33,586 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 22:07:33,586 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 22:07:33,586 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:07:33,586 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 22:07:33,587 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:07:33,587 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 22:07:33,587 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:07:33,587 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 22:07:33,587 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 22:07:33,587 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 22:07:33,588 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 22:07:33,588 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 22:07:33,588 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 22:07:33,588 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 22:07:33,588 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 22:07:33,588 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 22:07:33,589 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 22:07:33,589 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 22:07:33,589 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 22:07:33,589 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 22:07:33,590 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 22:07:33,590 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 22:07:33,590 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 22:07:33,591 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:07:33,594 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 22:07:33,594 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 22:07:33,594 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 22:07:33,594 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 22:07:33,594 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 22:07:33,594 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 22:07:33,594 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 22:07:33,595 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 22:07:33,595 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 22:07:33,595 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 22:07:33,596 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 22:07:33,596 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 22:07:33,596 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 22:07:33,596 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 22:07:33,596 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 22:07:33,597 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 22:07:33,597 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 22:07:33,597 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 22:07:33,597 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 22:07:33,597 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 22:07:33,597 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 22:07:33,598 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 22:07:33,598 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:07:33,598 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 22:07:33,598 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:07:33,598 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 22:07:33,598 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:07:33,600 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:07:33,602 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for listOfMembers
2023-11-25 22:07:33,602 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 22:07:33,602 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for membersAsString
2023-11-25 22:07:33,602 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tours
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 22:07:33,603 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 22:07:33,604 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:07:33,608 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 22:07:33,608 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 22:07:33,608 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 22:07:33,608 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 22:07:33,608 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 22:07:33,609 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 22:07:33,609 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 22:07:33,610 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 22:07:33,614 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 22:07:33,617 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:07:33,628 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 22:07:33,633 DEBUG o.h.s.s.ServiceBinding [JavaFX Application Thread] Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2023-11-25 22:11:09,924 INFO mainLogger [main] Application started
2023-11-25 22:11:10,617 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 22:11:10,617 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 22:11:10,619 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 22:11:10,626 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 22:11:10,632 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 22:11:10,637 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 22:11:10,700 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 22:11:10,703 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 22:11:10,705 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 22:11:10,732 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 22:11:10,740 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 22:11:10,740 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 22:11:10,742 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:11:10,742 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:11:10,743 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 22:11:10,745 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 22:11:10,746 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 22:11:10,748 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:11:10,748 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 22:11:10,749 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 22:11:10,750 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:11:10,751 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 22:11:10,765 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 22:11:10,766 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 22:11:10,976 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 22:11:10,977 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 22:11:10,978 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f464c14
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:11:10,979 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:11:10,980 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:11:10,980 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:11:10,980 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:11:10,980 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:11:10,980 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:11:10,981 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:11:10,982 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@3ffd0514
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b4ca7fd
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 22:11:10,983 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@de97e22
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4354532d
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6028c7e0
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 22:11:10,984 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 22:11:10,985 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3cb6a3fa
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64866098
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 22:11:10,986 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec7a8f2
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49929912
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:11:10,987 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:11:10,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b703d77
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 22:11:10,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 22:11:10,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 22:11:10,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 22:11:10,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 22:11:10,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 22:11:10,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 22:11:10,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 22:11:10,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 22:11:10,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@165eb05
2023-11-25 22:11:10,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1783524e
2023-11-25 22:11:10,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@11444a5a
2023-11-25 22:11:11,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@736a7fbd
2023-11-25 22:11:11,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5df98f16
2023-11-25 22:11:11,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@50e5a7c5
2023-11-25 22:11:11,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@63c03119
2023-11-25 22:11:11,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43772d4b
2023-11-25 22:11:11,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52e78b0c
2023-11-25 22:11:11,009 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1dfd30ab] into BootstrapContext; was [null]
2023-11-25 22:11:11,009 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c4cf803] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@10fe3347]
2023-11-25 22:11:11,145 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 22:11:11,145 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 22:11:11,178 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 22:11:11,187 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 22:11:11,187 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 22:11:11,188 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 22:11:11,188 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 22:11:11,192 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 22:11:11,193 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 22:11:11,781 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 22:11:11,781 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 22:11:11,781 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 22:11:11,847 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 22:11:11,859 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 22:11:11,859 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 22:11:11,887 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1aa6a65f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@75f4071d)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@995b58) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@31b9c405)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e021833) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b9b2801)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@192e9b1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e748c6a)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7039d017) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62f02531)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@743997bf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e74528e)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1073863f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7349e0ad)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b750514) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4719ded6)
2023-11-25 22:11:11,888 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b57ea74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7727273b)
2023-11-25 22:11:11,890 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 22:11:11,890 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 22:11:11,890 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 22:11:11,893 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:11:11,893 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:11:11,898 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@6ab7a651
2023-11-25 22:11:11,898 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@165eb05`
2023-11-25 22:11:11,905 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:11:11,905 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:11:11,905 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:11:11,905 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:11:11,905 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:11:11,905 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:11:11,906 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:11:11,907 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:11:11,907 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:11:11,909 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c88588f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@186720f7]
2023-11-25 22:11:11,972 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 22:11:11,979 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 22:11:12,004 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 22:11:12,013 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 22:11:12,020 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 22:11:12,031 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:11:12,065 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 22:11:12,067 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 22:11:12,067 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 22:11:12,073 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:11:12,079 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 22:11:12,085 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:11:12,091 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 22:11:12,091 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:11:12,095 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 22:11:12,099 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,101 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,114 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 22:11:12,118 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,118 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 22:11:12,119 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 22:11:12,121 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,121 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,123 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 22:11:12,125 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 22:11:12,127 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 22:11:12,127 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 22:11:12,127 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 22:11:12,127 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 22:11:12,127 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 22:11:12,127 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 22:11:12,127 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:11:12,128 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 22:11:12,128 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 22:11:12,129 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 22:11:12,129 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 22:11:12,129 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 22:11:12,131 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:11:12,132 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,132 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 22:11:12,133 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,134 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 22:11:12,134 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 22:11:12,134 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,134 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,134 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 22:11:12,134 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 22:11:12,135 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,135 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,136 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 22:11:12,136 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,137 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 22:11:12,137 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 22:11:12,137 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,137 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:11:12,137 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 22:11:12,137 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 22:11:12,138 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 22:11:12,138 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 22:11:12,138 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 22:11:12,138 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 22:11:12,138 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 22:11:12,138 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 22:11:12,146 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 22:11:12,147 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 22:11:12,147 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 22:11:12,148 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:11:12,150 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 22:11:12,150 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 22:11:12,150 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 22:11:12,150 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:11:12,150 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 22:11:12,150 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:11:12,150 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 22:11:12,151 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:11:12,151 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 22:11:12,151 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 22:11:12,151 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 22:11:12,151 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 22:11:12,151 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 22:11:12,151 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 22:11:12,152 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 22:11:12,152 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:11:12,153 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:11:12,157 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 22:11:12,158 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 22:11:12,158 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:11:12,158 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 22:11:12,158 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:11:12,158 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 22:11:12,159 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:11:12,159 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 22:11:12,159 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 22:11:12,159 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 22:11:12,159 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 22:11:12,159 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 22:11:12,160 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 22:11:12,160 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 22:11:12,161 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 22:11:12,161 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 22:11:12,161 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:11:12,163 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 22:11:12,163 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 22:11:12,163 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 22:11:12,163 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:11:12,163 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 22:11:12,163 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:11:12,163 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 22:11:12,164 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:11:12,164 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 22:11:12,164 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 22:11:12,164 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 22:11:12,164 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 22:11:12,164 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 22:11:12,165 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 22:11:12,165 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 22:11:12,165 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 22:11:12,166 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:11:12,166 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 22:11:12,166 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:11:12,166 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 22:11:12,166 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:11:12,167 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 22:11:12,167 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 22:11:12,168 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 22:11:12,169 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:11:12,171 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 22:11:12,171 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 22:11:12,171 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 22:11:12,171 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:11:12,171 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 22:11:12,171 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:11:12,171 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 22:11:12,171 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:11:12,171 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 22:11:12,172 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 22:11:12,172 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 22:11:12,172 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 22:11:12,172 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 22:11:12,172 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 22:11:12,172 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 22:11:12,173 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 22:11:12,173 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 22:11:12,173 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 22:11:12,173 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 22:11:12,173 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 22:11:12,173 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 22:11:12,174 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 22:11:12,174 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 22:11:12,174 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 22:11:12,174 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:11:12,176 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 22:11:12,177 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 22:11:12,177 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 22:11:12,177 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 22:11:12,177 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 22:11:12,177 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 22:11:12,177 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 22:11:12,177 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 22:11:12,177 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 22:11:12,178 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 22:11:12,178 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 22:11:12,178 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 22:11:12,178 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 22:11:12,179 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 22:11:12,179 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 22:11:12,179 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 22:11:12,179 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 22:11:12,179 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 22:11:12,179 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 22:11:12,179 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 22:11:12,179 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 22:11:12,180 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 22:11:12,180 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:11:12,180 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 22:11:12,180 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:11:12,180 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 22:11:12,180 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:11:12,182 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:11:12,185 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:11:12,186 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 22:11:12,186 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 22:11:12,186 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 22:11:12,186 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 22:11:12,186 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 22:11:12,186 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:11:12,192 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 22:11:12,192 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 22:11:12,192 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 22:11:12,192 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 22:11:12,192 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 22:11:12,192 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 22:11:12,193 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 22:11:12,194 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 22:11:12,196 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 22:11:12,197 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 22:11:12,199 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 22:11:12,199 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 22:11:12,199 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 22:11:12,199 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 22:11:12,199 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 22:11:12,200 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 22:11:12,205 DEBUG o.h.s.s.ServiceBinding [JavaFX Application Thread] Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2023-11-25 22:12:18,331 INFO mainLogger [main] Application started
2023-11-25 22:12:19,015 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 22:12:19,015 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 22:12:19,016 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 22:12:19,023 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 22:12:19,028 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 22:12:19,033 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 22:12:19,091 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 22:12:19,094 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 22:12:19,095 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 22:12:19,118 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 22:12:19,123 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 22:12:19,124 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 22:12:19,125 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:12:19,126 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:12:19,126 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 22:12:19,127 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 22:12:19,128 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 22:12:19,130 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:12:19,130 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 22:12:19,131 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 22:12:19,131 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:12:19,132 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 22:12:19,146 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 22:12:19,148 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 22:12:19,340 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 22:12:19,340 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 22:12:19,340 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3349bfa
2023-11-25 22:12:19,340 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6ce63fb8
2023-11-25 22:12:19,340 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6ce63fb8
2023-11-25 22:12:19,340 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6a8d55b4
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6a8d55b4
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@613d7d71
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@613d7d71
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@46f1d1e7
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1b373d7e
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1b17fb59
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1b17fb59
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@114bcbbf
2023-11-25 22:12:19,341 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@59fd5e98
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59fd5e98
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7b035414
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5feab51e
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@10b38b6f
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@23890e7f
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@42cb4dee
2023-11-25 22:12:19,342 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@480342ec
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@44e74070
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2ff65465
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2ff65465
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@374ac848
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@374ac848
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@658cf86f
2023-11-25 22:12:19,343 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1b96c06e
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@65eea05
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65eea05
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@67377a0e
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@65faa907
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@48c28066
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@39bd55b9
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6506af8a
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@550490bc
2023-11-25 22:12:19,344 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@550490bc
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@919ebca
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@919ebca
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5a5a77cd
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@af0e9f3
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7b001961
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3d01ea70
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@34ec1602
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@39dede1d
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@426e1356
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@426e1356
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@700e3301
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@700e3301
2023-11-25 22:12:19,345 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@24067704
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@24067704
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6b677baf
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6b677baf
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@59213136
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@59213136
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@58369728
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f1f657d
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1f75d532
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1f75d532
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f8def6b
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@236eae65
2023-11-25 22:12:19,346 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ee03f8
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@26039872
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@26039872
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@655dd6e
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@509e5647
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@37086e6f
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@37086e6f
2023-11-25 22:12:19,347 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@df2a0f4
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@df2a0f4
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@2564b289
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7eaf40c
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@73e58988
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6b886200
2023-11-25 22:12:19,348 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@6b786502
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6b786502
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3be2b6f5
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6494c1c8
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4c243738
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@64dc1bcb
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@64dc1bcb
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 22:12:19,349 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a274cbb
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@87f5eb6
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@87f5eb6
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@658f2576
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@658f2576
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6189784f
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6189784f
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@11bbb251
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@11bbb251
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@6343c43e
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6343c43e
2023-11-25 22:12:19,350 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f7be9b5
2023-11-25 22:12:19,357 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@7a04e8d2
2023-11-25 22:12:19,357 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a04e8d2
2023-11-25 22:12:19,358 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@4f0809c9
2023-11-25 22:12:19,358 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a39f4e5
2023-11-25 22:12:19,358 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b2d577f
2023-11-25 22:12:19,359 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@71bc0c79
2023-11-25 22:12:19,359 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7ef505c6
2023-11-25 22:12:19,359 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6bfe4821
2023-11-25 22:12:19,359 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7af96c8e
2023-11-25 22:12:19,359 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6bb7786c
2023-11-25 22:12:19,359 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dba8be9
2023-11-25 22:12:19,366 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1c17b530] into BootstrapContext; was [null]
2023-11-25 22:12:19,366 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3521f556] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1379b570]
2023-11-25 22:12:19,500 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 22:12:19,501 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 22:12:19,536 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 22:12:19,545 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 22:12:19,545 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 22:12:19,546 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 22:12:19,546 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 22:12:19,551 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 22:12:19,552 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 22:12:20,072 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 22:12:20,072 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 22:12:20,072 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 22:12:20,132 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 22:12:20,145 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 22:12:20,145 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 22:12:20,180 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d53cbdf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45a91d96)
2023-11-25 22:12:20,181 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34a224f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f44815f)
2023-11-25 22:12:20,181 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4c2aaa5b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41e25be5)
2023-11-25 22:12:20,181 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64c24ab2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f07610c)
2023-11-25 22:12:20,181 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76e666c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2588368f)
2023-11-25 22:12:20,181 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53e96f56) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b26b26)
2023-11-25 22:12:20,181 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42a7f55b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@267f9fce)
2023-11-25 22:12:20,182 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ef4d788) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a8b602b)
2023-11-25 22:12:20,182 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@577b550c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d2031c2)
2023-11-25 22:12:20,183 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 22:12:20,183 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 22:12:20,184 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 22:12:20,188 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:12:20,188 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:12:20,193 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@4f5f372b
2023-11-25 22:12:20,193 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4f0809c9`
2023-11-25 22:12:20,201 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:12:20,201 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:12:20,201 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:12:20,201 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:12:20,201 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:12:20,201 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:12:20,202 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:12:20,203 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:12:20,203 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:12:20,204 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4875e337] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@73295396]
2023-11-25 22:12:20,273 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 22:12:20,280 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 22:12:20,311 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 22:12:20,323 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 22:12:20,332 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 22:12:20,345 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:12:20,377 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 22:12:20,379 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 22:12:20,379 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 22:12:20,385 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:12:20,392 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 22:12:20,399 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:12:20,404 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 22:12:20,405 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:12:20,408 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 22:12:20,411 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,413 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,427 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 22:12:20,432 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,433 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 22:12:20,434 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 22:12:20,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,440 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 22:12:20,442 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 22:12:20,444 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 22:12:20,444 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 22:12:20,444 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 22:12:20,444 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 22:12:20,444 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 22:12:20,444 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:12:20,445 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 22:12:20,445 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 22:12:20,446 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 22:12:20,446 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 22:12:20,446 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 22:12:20,447 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:12:20,448 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,448 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 22:12:20,448 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 22:12:20,449 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,450 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,450 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 22:12:20,450 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,451 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 22:12:20,451 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 22:12:20,451 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,451 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:12:20,451 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 22:12:20,451 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 22:12:20,452 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 22:12:20,452 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 22:12:20,452 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 22:12:20,452 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 22:12:20,452 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 22:12:20,452 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 22:12:20,459 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 22:12:20,460 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 22:12:20,460 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 22:12:20,460 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:12:20,462 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 22:12:20,463 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 22:12:20,463 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 22:12:20,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:12:20,463 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 22:12:20,463 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:12:20,463 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 22:12:20,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:12:20,463 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 22:12:20,464 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 22:12:20,464 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 22:12:20,464 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 22:12:20,464 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 22:12:20,464 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 22:12:20,464 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 22:12:20,464 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:12:20,465 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,468 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 22:12:20,469 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 22:12:20,469 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:12:20,469 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 22:12:20,469 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:12:20,470 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 22:12:20,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:12:20,470 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 22:12:20,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 22:12:20,470 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 22:12:20,470 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 22:12:20,470 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 22:12:20,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 22:12:20,471 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 22:12:20,471 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 22:12:20,472 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 22:12:20,472 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:12:20,473 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 22:12:20,473 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 22:12:20,473 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 22:12:20,473 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:12:20,473 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 22:12:20,473 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:12:20,473 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 22:12:20,473 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:12:20,473 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 22:12:20,474 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 22:12:20,474 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 22:12:20,474 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 22:12:20,474 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 22:12:20,474 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 22:12:20,474 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 22:12:20,475 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 22:12:20,475 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:12:20,475 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 22:12:20,475 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:12:20,475 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 22:12:20,475 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:12:20,476 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 22:12:20,476 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 22:12:20,478 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 22:12:20,478 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:12:20,480 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 22:12:20,480 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 22:12:20,480 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 22:12:20,480 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:12:20,480 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:12:20,481 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 22:12:20,481 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 22:12:20,481 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 22:12:20,482 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 22:12:20,482 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 22:12:20,482 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 22:12:20,482 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 22:12:20,482 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 22:12:20,482 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 22:12:20,483 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 22:12:20,483 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 22:12:20,483 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 22:12:20,483 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:12:20,485 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 22:12:20,486 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 22:12:20,486 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 22:12:20,486 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 22:12:20,486 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 22:12:20,486 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 22:12:20,486 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 22:12:20,486 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 22:12:20,486 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 22:12:20,487 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 22:12:20,487 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 22:12:20,488 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 22:12:20,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 22:12:20,488 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 22:12:20,488 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 22:12:20,488 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:12:20,488 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:12:20,488 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 22:12:20,489 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 22:12:20,489 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:12:20,489 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 22:12:20,489 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:12:20,489 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 22:12:20,489 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:12:20,491 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:12:20,493 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:12:20,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 22:12:20,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 22:12:20,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 22:12:20,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 22:12:20,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 22:12:20,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:12:20,500 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 22:12:20,501 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 22:12:20,501 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 22:12:20,501 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 22:12:20,501 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 22:12:20,501 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 22:12:20,501 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 22:12:20,503 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 22:12:20,504 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 22:12:20,505 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 22:12:20,507 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 22:12:20,507 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 22:12:20,507 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 22:12:20,507 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 22:12:20,507 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 22:12:20,508 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 22:12:20,508 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 22:12:20,508 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 22:12:20,508 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 22:12:20,509 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:12:20,511 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:12:20,511 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:12:20,527 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:12:20,527 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:12:20,527 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:12:20,714 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 22:12:20,941 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 22:12:21,013 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 22:12:21,014 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1a486192, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 22:12:21,020 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 22:12:21,028 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 22:12:21,084 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 22:12:21,084 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 22:12:21,086 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 22:12:21,087 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 22:12:21,089 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2ba08b5b] under count; prior registration was null
2023-11-25 22:12:21,090 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2d2b2e39] under every; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@72447a59] under any; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 22:12:21,091 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 22:12:21,092 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 22:12:21,095 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1992eb16] under sinh; prior registration was null
2023-11-25 22:12:21,095 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@284e61cb] under cosh; prior registration was null
2023-11-25 22:12:21,095 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ae1226e] under tanh; prior registration was null
2023-11-25 22:12:21,095 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@685dd62] under pi; prior registration was null
2023-11-25 22:12:21,095 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8415cff] under log; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 22:12:21,096 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 22:12:21,097 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 22:12:21,097 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 22:12:21,097 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 22:12:21,098 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@74bd7bee] under position; prior registration was null
2023-11-25 22:12:21,100 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4f385698] under overlay; prior registration was null
2023-11-25 22:12:21,101 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@71a61638] under trim; prior registration was null
2023-11-25 22:12:21,103 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@759b88a9] under cast; prior registration was null
2023-11-25 22:12:21,103 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5858ebb3] under collate; prior registration was null
2023-11-25 22:12:21,104 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7cd08d1e] under extract; prior registration was null
2023-11-25 22:12:21,104 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 22:12:21,104 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 22:12:21,105 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4eb17fb7] under ifnull; prior registration was null
2023-11-25 22:12:21,105 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 22:12:21,105 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 22:12:21,106 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@71e1134b] under pad; prior registration was null
2023-11-25 22:12:21,106 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@63b5ca6c] under str; prior registration was null
2023-11-25 22:12:21,108 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3f522a0c] under format; prior registration was null
2023-11-25 22:12:21,109 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b166cb8] under timestampadd; prior registration was null
2023-11-25 22:12:21,111 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@40229069] under timestampdiff; prior registration was null
2023-11-25 22:12:21,111 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 22:12:21,111 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c2bf809] under current_date; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@771f4f65] under current_time; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@338777ba] under current_timestamp; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2fa0deed] under local_date; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4ca890a0] under local_time; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@41c19a37] under local_datetime; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49730f12] under offset_datetime; prior registration was null
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 22:12:21,112 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 22:12:21,113 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@608df767] under instant; prior registration was null
2023-11-25 22:12:21,113 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7b961e48] under sql; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8415cff
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 22:12:21,114 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 22:12:21,115 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 22:12:21,115 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 22:12:21,115 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 22:12:21,115 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 22:12:21,115 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 22:12:21,116 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1fd71f7e] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 22:12:21,116 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@797f7f23] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 22:12:21,116 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 22:12:21,116 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 22:12:21,116 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 22:12:21,117 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 22:12:21,118 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a8267a4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@74bd7bee
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 22:12:21,119 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@59607c6b] under trunc; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5de9d1b4] under bitand; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9059b96] under bitor; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d766770] under bitxor; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@572fd191] under bitnot; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 22:12:21,126 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44d8ceb1] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3f522a0c
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4ca890a0
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@41c19a37
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61242497] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@685dd62
2023-11-25 22:12:21,127 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f579224] under chr; prior registration was null
2023-11-25 22:12:21,128 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 22:12:21,128 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76dd7306] under sysdate; prior registration was null
2023-11-25 22:12:21,128 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 22:12:21,128 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 22:12:21,129 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 22:12:21,129 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 22:12:21,129 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 22:12:21,129 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 22:12:21,131 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2c629da8] under rank; prior registration was null
2023-11-25 22:12:21,131 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@68829570] under dense_rank; prior registration was null
2023-11-25 22:12:21,131 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1a53afef] under percent_rank; prior registration was null
2023-11-25 22:12:21,131 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@25c6b9ad] under cume_dist; prior registration was null
2023-11-25 22:12:21,132 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7694e11a] under listagg; prior registration was null
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 22:12:21,134 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 22:12:21,135 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 22:12:21,136 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 22:12:21,137 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 22:12:21,138 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 22:12:21,139 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 22:12:21,140 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 22:12:21,141 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 22:12:21,142 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 22:12:21,142 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 22:12:21,142 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 22:12:21,142 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 22:12:21,149 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 22:12:21,335 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 22:12:21,336 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 22:12:21,609 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:12:21,668 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:12:21,668 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:12:21,668 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 22:12:21,668 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 22:12:21,690 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:12:21,691 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:12:21,692 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 22:12:21,692 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 22:12:21,741 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 22:12:21,741 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 22:12:21,764 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:12:21,768 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:12:21,768 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:12:21,768 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 22:12:21,768 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 22:12:21,786 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:12:21,787 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:12:21,820 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 22:12:21,824 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 22:12:21,824 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 22:12:21,833 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 22:12:21,833 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 22:12:21,833 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 22:12:21,872 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 22:12:21,872 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 22:12:21,872 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 22:12:21,872 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 22:12:21,877 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 22:12:21,878 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 22:12:21,950 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 22:12:21,951 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 22:12:21,951 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 22:12:21,951 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 22:12:21,951 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 22:12:21,968 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:12:21,970 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 22:12:21,981 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:12:21,985 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7b231b0c] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 22:12:21,987 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 22:12:22,005 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-DelayedCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 22:12:22,009 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 22:12:22,022 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 22:12:22,022 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 22:12:22,022 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 22:12:22,022 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 22:12:22,022 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 22:12:22,022 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:12:22,023 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 22:12:22,027 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f65516b] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 22:12:22,028 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 22:12:22,029 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 22:12:22,029 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7bb0e7da] with identifierForTableGroup [GroupMember.group.tours] for NavigablePath [GroupMember.group.tours] 
2023-11-25 22:12:22,029 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.tours.{element})] with identifierForTableGroup [GroupMember.group.tours.{element}] for NavigablePath [GroupMember.group.tours.{element}] 
2023-11-25 22:12:22,029 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 22:12:22,030 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (t1 : GroupMember.group.tours) {
                  primaryTableReference : tours as t1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 22:12:22,030 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 22:12:22,030 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 22:12:22,030 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_duration,song_name) values (?,?)
2023-11-25 22:12:22,030 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_duration=?,song_name=? where song_id=?
2023-11-25 22:12:22,030 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 22:12:22,031 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 22:12:22,031 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 22:12:22,031 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.duration]
 |  \-BasicFetch [Song.name]

2023-11-25 22:12:22,031 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
        }
      }
    }

2023-11-25 22:12:22,031 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 22:12:22,031 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 22:12:22,032 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 22:12:22,032 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 22:12:22,032 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 22:12:22,032 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 22:12:22,032 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 22:12:22,032 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 22:12:22,032 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 22:12:22,033 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 22:12:22,033 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 22:12:22,033 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 22:12:22,033 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 22:12:22,033 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7caacd20] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@42ea7b1e] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 22:12:22,033 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 22:12:22,034 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 22:12:22,034 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 22:12:22,036 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:12:22,036 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@645706f0] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 22:12:22,036 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 22:12:22,038 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7a1f9084] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 22:12:22,040 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 22:12:22,040 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 22:12:22,040 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@26346fd7] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 22:12:22,041 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 22:12:22,041 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 22:12:22,041 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  Row insert: update songs set group_id=? where song_id=?
2023-11-25 22:12:22,041 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  Row delete: update songs set group_id=null where group_id=? and song_id=?
2023-11-25 22:12:22,042 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  One-shot delete: update songs set group_id=null where group_id=?
2023-11-25 22:12:22,042 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 22:12:22,042 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@743bcc5a] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 22:12:22,042 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 22:12:22,042 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6eb26b71] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 22:12:22,042 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 22:12:22,082 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 22:12:22,082 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 22:12:22,092 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 22:12:22,093 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 22:12:22,099 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 22:12:22,100 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 22:12:22,101 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4875e337] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43b02b61]
2023-11-25 22:12:22,103 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 22:12:22,104 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 22:12:22,105 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 22:12:22,105 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 22:12:22,110 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@49f0f2de
2023-11-25 22:12:22,110 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: 73c2b1e5-2cd4-41fe-a5fe-9c9472e8753e (<unnamed>)
2023-11-25 22:12:22,110 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 22:12:22,110 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 22:12:22,173 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 22:12:22,176 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 22:12:22,179 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 22:12:22,179 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 22:12:22,184 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 22:12:22,373 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 22:12:22,420 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 22:12:22,432 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 22:12:22,453 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(35389370672800)`
            <- [root] - `Group(35389370672800)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(35389370672800)`
          <- [root] - `Group(35389370672800)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 22:12:22,517 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:12:22,518 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(35389370672800))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 22:12:22,529 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(35389370672800)]
 |  +-SelectEagerCollectionFetch [Group(35389370672800).listOfMembers]
 |  +-BasicFetch [Group(35389370672800).mainGenre]
 |  +-BasicFetch [Group(35389370672800).name]
 |  +-BasicFetch [Group(35389370672800).placeInChart]
 |  +-DelayedCollectionFetch [Group(35389370672800).repertoire]
 |  +-SelectEagerCollectionFetch [Group(35389370672800).tours]
 |  \-BasicFetch [Group(35389370672800).yearOfFoundation]

2023-11-25 22:12:22,529 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(35389370672800)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 22:12:22,547 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 22:12:22,568 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,568 DEBUG o.h.o.results [JavaFX Application Thread]     Group(35389370672800).listOfMembers -> SelectEagerCollectionInitializer(Group(35389370672800).listOfMembers)@630738525 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,569 DEBUG o.h.o.results [JavaFX Application Thread]     Group(35389370672800).repertoire -> DelayedCollectionInitializer(Group(35389370672800).repertoire)@1426439285 (PluralAttribute(Group.repertoire))
2023-11-25 22:12:22,570 DEBUG o.h.o.results [JavaFX Application Thread]     Group(35389370672800).tours -> SelectEagerCollectionInitializer(Group(35389370672800).tours)@1709996406 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,570 DEBUG o.h.o.results [JavaFX Application Thread]     Group(35389370672800) -> EntityResultInitializer(Group(35389370672800))@421863464 (SingleTableEntityPersister(Group))
2023-11-25 22:12:22,580 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 22:12:22,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 22:12:22,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 1
2023-11-25 22:12:22,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#1
2023-11-25 22:12:22,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 22:12:22,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#1
2023-11-25 22:12:22,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#1
2023-11-25 22:12:22,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#1] : 2097586494
2023-11-25 22:12:22,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:12:22,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 22:12:22,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 22:12:22,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 22:12:22,618 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#1
2023-11-25 22:12:22,618 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,619 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 22:12:22,619 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 2
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#2
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#2
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#2
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#2] : 290090210
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#2
2023-11-25 22:12:22,620 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 3
2023-11-25 22:12:22,620 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#3
2023-11-25 22:12:22,620 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,621 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#3
2023-11-25 22:12:22,621 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#3
2023-11-25 22:12:22,621 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#3] : 314674441
2023-11-25 22:12:22,621 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:12:22,621 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 22:12:22,621 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 22:12:22,621 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 22:12:22,621 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#3
2023-11-25 22:12:22,621 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,622 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 22:12:22,622 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 4
2023-11-25 22:12:22,622 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#4
2023-11-25 22:12:22,622 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 22:12:22,622 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#4
2023-11-25 22:12:22,622 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#4
2023-11-25 22:12:22,622 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#4] : 2082727644
2023-11-25 22:12:22,622 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:12:22,622 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 22:12:22,622 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 22:12:22,622 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 22:12:22,622 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#4
2023-11-25 22:12:22,622 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,623 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 22:12:22,623 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 5
2023-11-25 22:12:22,623 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#5
2023-11-25 22:12:22,623 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 22:12:22,623 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#5
2023-11-25 22:12:22,623 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#5
2023-11-25 22:12:22,623 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#5] : 1256788213
2023-11-25 22:12:22,623 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 22:12:22,623 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 22:12:22,623 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 22:12:22,623 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 22:12:22,623 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#5
2023-11-25 22:12:22,623 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,624 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 22:12:22,624 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 6
2023-11-25 22:12:22,624 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#6
2023-11-25 22:12:22,624 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 22:12:22,624 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#6
2023-11-25 22:12:22,624 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#6
2023-11-25 22:12:22,624 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#6] : 1214982927
2023-11-25 22:12:22,624 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 22:12:22,624 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 22:12:22,624 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 22:12:22,625 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 22:12:22,625 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#6
2023-11-25 22:12:22,625 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,625 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 22:12:22,625 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 7
2023-11-25 22:12:22,625 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#7
2023-11-25 22:12:22,625 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 22:12:22,625 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#7
2023-11-25 22:12:22,625 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#7
2023-11-25 22:12:22,625 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#7] : 465356529
2023-11-25 22:12:22,626 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 22:12:22,626 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 22:12:22,626 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 22:12:22,626 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 22:12:22,626 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#7
2023-11-25 22:12:22,626 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,626 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 22:12:22,626 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 8
2023-11-25 22:12:22,626 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#8
2023-11-25 22:12:22,626 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 22:12:22,626 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#8
2023-11-25 22:12:22,626 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#8
2023-11-25 22:12:22,626 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#8] : 934604904
2023-11-25 22:12:22,627 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 22:12:22,627 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 22:12:22,627 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 22:12:22,627 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 22:12:22,627 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#8
2023-11-25 22:12:22,627 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,627 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 22:12:22,627 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 9
2023-11-25 22:12:22,627 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#9
2023-11-25 22:12:22,627 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 22:12:22,627 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#9
2023-11-25 22:12:22,627 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#9
2023-11-25 22:12:22,627 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#9] : 1068466008
2023-11-25 22:12:22,628 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 22:12:22,628 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 22:12:22,628 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 22:12:22,628 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 22:12:22,628 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#9
2023-11-25 22:12:22,628 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,628 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 22:12:22,628 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 11
2023-11-25 22:12:22,628 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#11
2023-11-25 22:12:22,628 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 22:12:22,628 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#11
2023-11-25 22:12:22,628 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#11
2023-11-25 22:12:22,629 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#11] : 955589380
2023-11-25 22:12:22,629 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 22:12:22,629 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 22:12:22,629 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 22:12:22,629 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 22:12:22,629 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#11
2023-11-25 22:12:22,629 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,629 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 22:12:22,629 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 12
2023-11-25 22:12:22,629 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#12
2023-11-25 22:12:22,629 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 22:12:22,629 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#12
2023-11-25 22:12:22,629 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#12
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#12] : 232696230
2023-11-25 22:12:22,630 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 22:12:22,630 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 22:12:22,630 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 22:12:22,630 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#12
2023-11-25 22:12:22,630 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,630 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 13
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#13
2023-11-25 22:12:22,630 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#13
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#13
2023-11-25 22:12:22,630 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#13] : 94944304
2023-11-25 22:12:22,631 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 22:12:22,631 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 22:12:22,631 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 22:12:22,631 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 22:12:22,631 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#13
2023-11-25 22:12:22,631 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,631 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 22:12:22,631 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 14
2023-11-25 22:12:22,631 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#14
2023-11-25 22:12:22,631 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 22:12:22,631 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#14
2023-11-25 22:12:22,631 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#14
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#14] : 1471213389
2023-11-25 22:12:22,632 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 22:12:22,632 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 22:12:22,632 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 22:12:22,632 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#14
2023-11-25 22:12:22,632 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,632 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 15
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#15
2023-11-25 22:12:22,632 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#15
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#15
2023-11-25 22:12:22,632 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#15] : 106525025
2023-11-25 22:12:22,633 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 22:12:22,633 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 22:12:22,633 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 22:12:22,633 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 22:12:22,633 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#15
2023-11-25 22:12:22,633 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,633 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 22:12:22,633 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 16
2023-11-25 22:12:22,633 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#16
2023-11-25 22:12:22,633 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 22:12:22,633 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#16
2023-11-25 22:12:22,633 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#16
2023-11-25 22:12:22,633 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#16] : 1907678128
2023-11-25 22:12:22,634 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 22:12:22,634 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 22:12:22,634 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 22:12:22,634 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 22:12:22,634 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#16
2023-11-25 22:12:22,634 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,634 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 22:12:22,634 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 17
2023-11-25 22:12:22,634 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#17
2023-11-25 22:12:22,634 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 22:12:22,634 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#17
2023-11-25 22:12:22,634 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#17
2023-11-25 22:12:22,634 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#17] : 1339414913
2023-11-25 22:12:22,635 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 22:12:22,635 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 22:12:22,635 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 22:12:22,635 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 22:12:22,635 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#17
2023-11-25 22:12:22,635 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,635 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 22:12:22,635 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 21
2023-11-25 22:12:22,635 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#21
2023-11-25 22:12:22,635 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 22:12:22,635 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#21
2023-11-25 22:12:22,635 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#21
2023-11-25 22:12:22,635 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#21] : 1810536477
2023-11-25 22:12:22,636 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 22:12:22,636 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 22:12:22,636 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 22:12:22,637 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 22:12:22,637 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#21
2023-11-25 22:12:22,637 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,637 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 22:12:22,637 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(35389370672800)): 22
2023-11-25 22:12:22,638 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).listOfMembers#22
2023-11-25 22:12:22,638 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 22:12:22,638 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(35389370672800).repertoire#22
2023-11-25 22:12:22,638 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(35389370672800).tours#22
2023-11-25 22:12:22,638 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(35389370672800)#22] : 1558461652
2023-11-25 22:12:22,638 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 22:12:22,639 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 22:12:22,639 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 22:12:22,639 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 22:12:22,639 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(35389370672800)#22
2023-11-25 22:12:22,639 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe93209
2023-11-25 22:12:22,648 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,648 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,649 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,658 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,658 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1646329815 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,658 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@511625949 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,659 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1940964082 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,659 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,665 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 22:12:22,665 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,665 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,665 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,666 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,666 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1230327205 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,666 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@116488915 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,666 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1617262657 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,666 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,668 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 22:12:22,669 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,669 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,669 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,670 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,670 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1362873838 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,670 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@441913592 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,670 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@611572846 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,670 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,672 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 22:12:22,673 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,673 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,673 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,673 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1820879467 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1445092152 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@467250653 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,674 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,676 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 22:12:22,676 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,677 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,677 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,677 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,677 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1835620141 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,677 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@998811672 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,677 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@727959507 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,677 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,679 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 22:12:22,680 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,680 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,680 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,680 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,680 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1794725893 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1603356630 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@751215462 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,681 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,683 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 22:12:22,683 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,683 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,683 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,683 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,684 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@852930911 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,684 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@731052528 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,684 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1097669998 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,684 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,686 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 22:12:22,686 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,687 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,687 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,687 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,687 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2060913025 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,687 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1400438232 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,687 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@2071645522 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,687 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,689 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 22:12:22,689 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,689 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,689 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,690 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,690 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1515075096 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,690 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2004050014 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,690 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1396387241 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,690 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,692 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 22:12:22,692 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,692 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,692 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,692 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,692 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1043628548 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,692 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@879273486 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,693 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@779890883 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,693 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,694 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 22:12:22,694 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,695 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,695 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,695 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,695 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1553455803 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,695 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@329384898 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,695 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@580869365 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,695 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,697 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 22:12:22,697 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,697 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,697 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,697 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,697 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@477100607 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,698 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1154446771 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,698 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@965395512 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,698 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,699 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 22:12:22,700 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,700 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,700 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,700 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,700 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2029517427 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,700 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@389237329 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,700 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@225777985 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,702 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,704 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 22:12:22,704 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,704 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,704 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,704 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,704 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1403653236 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,704 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1991288913 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,705 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1076570796 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,705 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,706 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 22:12:22,706 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,707 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,707 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,707 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,707 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1542209050 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,707 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1108021633 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,707 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1433741779 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,707 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,709 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 22:12:22,709 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,709 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,709 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,709 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,709 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@841951210 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,709 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1315486669 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,709 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@2116721694 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,709 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,711 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 22:12:22,711 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,711 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,711 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,712 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,712 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@52483531 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,712 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@700478429 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,712 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1543673728 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,712 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,713 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 22:12:22,713 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,714 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,714 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,714 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,714 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@378230902 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,714 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1585279920 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,714 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1130519582 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,714 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,716 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 22:12:22,716 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,717 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,717 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,717 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,717 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2061055586 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,717 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@730466187 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,717 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1814339505 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,717 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,719 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 22:12:22,719 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,720 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,720 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,720 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,720 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@175404978 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,720 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1122351194 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,720 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@115568339 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,720 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,722 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 22:12:22,722 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,723 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,723 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,723 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,723 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2102212877 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,723 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1623545217 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,723 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1901800354 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,724 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,725 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 22:12:22,726 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,726 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,726 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,726 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@376896872 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1046008383 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1452225857 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,726 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,729 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 22:12:22,729 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,730 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,730 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,730 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,730 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2100567675 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,731 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1379797409 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,731 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@941707219 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,731 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,734 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 22:12:22,734 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,734 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,735 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,735 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,735 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1839945402 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,735 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1598472971 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,735 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1279608569 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,735 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,737 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 22:12:22,737 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,738 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,738 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,738 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,738 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@206603352 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,738 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1791256997 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,738 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1314264379 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,738 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,740 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 22:12:22,741 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,741 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,742 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,742 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,742 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1354699295 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,742 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@784218878 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,742 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@275445868 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,742 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,744 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 22:12:22,744 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,745 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,745 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,745 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,745 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@9294109 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,745 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1206116600 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,745 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1432027274 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,745 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,747 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 22:12:22,748 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,748 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,749 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,749 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,749 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1736278983 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,749 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1781498098 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,749 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1748031111 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,750 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,752 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 22:12:22,752 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,752 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,753 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,753 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,753 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1083511933 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,753 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@780101126 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,753 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1817315650 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,753 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,755 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 22:12:22,756 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,756 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,756 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,756 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,756 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1585493310 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,757 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@585416629 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,757 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1648323398 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,757 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,759 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 22:12:22,759 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,759 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,760 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,760 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,760 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1618983406 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,760 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2038668284 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,760 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1529879949 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,760 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,762 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 22:12:22,762 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,762 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,763 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,763 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,763 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1232264437 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,763 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@309685283 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,763 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@387515916 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,763 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,765 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 22:12:22,765 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 22:12:22,765 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,765 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 22:12:22,765 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,766 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 45192205
2023-11-25 22:12:22,767 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1051064916
2023-11-25 22:12:22,767 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,767 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 22:12:22,767 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 22:12:22,767 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 22:12:22,768 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 22:12:22,768 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1051064916
2023-11-25 22:12:22,768 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@29be5db0
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 1728904451
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1051064916
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1051064916
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 22:12:22,769 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 22:12:22,769 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1051064916
2023-11-25 22:12:22,769 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@29be5db0
2023-11-25 22:12:22,770 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 22:12:22,770 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,770 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,770 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,770 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,770 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@620642140 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,771 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1882676879 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,771 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@733994724 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,771 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,772 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 22:12:22,772 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,772 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,773 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,773 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,773 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@881061605 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,773 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1637764719 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,773 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@350435403 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,773 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,775 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 22:12:22,775 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:12:22,775 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,775 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,775 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,775 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@46306487 (ToOneAttributeMapping(NavigableRole[Tour.group])@82666992)
2023-11-25 22:12:22,776 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@258921924 (EntityCollectionPart(Group.tours#{element})@378227123)
2023-11-25 22:12:22,776 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@787069655 (PluralAttribute(Group.tours))
2023-11-25 22:12:22,776 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:12:22,777 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 22:12:22,777 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:12:22,777 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:12:22,778 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:12:22,778 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:12:22,778 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@838898850 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@517607524)
2023-11-25 22:12:22,778 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1365028663 (EntityCollectionPart(Group.listOfMembers#{element})@62793206)
2023-11-25 22:12:22,778 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1271427842 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:12:22,778 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:12:22,780 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 22:12:22,780 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 22:12:22,781 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 22:12:22,791 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 22:12:22,800 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 22:12:22,800 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (uninitialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (uninitialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (uninitialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (uninitialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (uninitialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (uninitialized)
2023-11-25 22:12:22,801 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (uninitialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (uninitialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (uninitialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (uninitialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (uninitialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (uninitialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 22:12:22,802 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (uninitialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (uninitialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (uninitialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (uninitialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (uninitialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (uninitialized)
2023-11-25 22:12:22,803 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 22:12:22,807 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 20 objects
2023-11-25 22:12:22,807 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 22:12:22,809 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 22:12:22,809 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,809 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,809 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,810 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,810 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,810 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,810 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,810 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,810 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,811 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1968, name=Led Zepellin, mainGenre=Rock, id=4, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:12:22,814 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 22:12:22,816 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 22:12:22,816 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 22:12:22,818 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 22:12:22,818 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 22:12:50,070 DEBUG o.h.o.c.pooling [Hibernate Connection Pool Validation Thread] Connection pool now considered primed; min-size will be maintained
2023-11-25 22:40:30,761 INFO mainLogger [main] Application started
2023-11-25 22:40:31,535 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 22:40:31,535 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 22:40:31,536 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 22:40:31,547 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 22:40:31,554 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 22:40:31,562 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 22:40:31,654 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 22:40:31,656 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 22:40:31,658 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 22:40:31,692 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 22:40:31,700 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 22:40:31,700 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 22:40:31,702 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:40:31,702 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 22:40:31,702 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 22:40:31,705 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 22:40:31,705 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 22:40:31,708 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:40:31,709 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 22:40:31,709 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 22:40:31,710 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 22:40:31,711 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 22:40:31,729 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 22:40:31,731 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 22:40:31,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:40:31,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:40:31,988 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 22:40:31,989 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f464c14
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:40:31,990 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:40:31,991 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 22:40:31,992 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@3ffd0514
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b4ca7fd
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@de97e22
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4354532d
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6028c7e0
2023-11-25 22:40:31,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 22:40:31,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3cb6a3fa
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64866098
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec7a8f2
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49929912
2023-11-25 22:40:31,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 22:40:31,997 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b703d77
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 22:40:31,998 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 22:40:31,999 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 22:40:32,009 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 22:40:32,009 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 22:40:32,011 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@165eb05
2023-11-25 22:40:32,011 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1783524e
2023-11-25 22:40:32,011 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@11444a5a
2023-11-25 22:40:32,012 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@736a7fbd
2023-11-25 22:40:32,012 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5df98f16
2023-11-25 22:40:32,012 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@50e5a7c5
2023-11-25 22:40:32,012 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@63c03119
2023-11-25 22:40:32,012 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43772d4b
2023-11-25 22:40:32,012 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52e78b0c
2023-11-25 22:40:32,023 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1dfd30ab] into BootstrapContext; was [null]
2023-11-25 22:40:32,023 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c4cf803] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@10fe3347]
2023-11-25 22:40:32,153 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 22:40:32,155 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 22:40:32,200 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 22:40:32,212 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 22:40:32,213 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 22:40:32,213 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 22:40:32,213 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 22:40:32,219 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 22:40:32,220 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 22:40:32,814 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 22:40:32,815 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 22:40:32,815 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 22:40:32,891 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 22:40:32,904 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 22:40:32,904 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1073863f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7349e0ad)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b750514) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4719ded6)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b57ea74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7727273b)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1419d16e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d7f5255)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@698f0fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27dfe331)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d97d405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a1ddc18)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bfd11b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53e3ad95)
2023-11-25 22:40:32,934 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10976c10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@641e8f06)
2023-11-25 22:40:32,935 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70d62a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49cce8d5)
2023-11-25 22:40:32,937 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 22:40:32,937 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 22:40:32,938 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 22:40:32,941 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:40:32,941 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 22:40:32,948 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@64ab5601
2023-11-25 22:40:32,948 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@165eb05`
2023-11-25 22:40:32,958 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:40:32,959 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:40:32,959 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 22:40:32,959 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:40:32,959 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:40:32,959 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 22:40:32,961 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:40:32,961 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:40:32,961 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 22:40:32,963 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f55ae9a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@617c7772]
2023-11-25 22:40:33,039 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 22:40:33,048 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 22:40:33,084 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 22:40:33,098 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 22:40:33,108 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 22:40:33,124 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:40:33,157 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 22:40:33,161 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 22:40:33,161 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 22:40:33,167 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:40:33,175 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 22:40:33,183 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:40:33,190 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 22:40:33,191 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:40:33,194 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 22:40:33,198 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,200 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,214 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 22:40:33,219 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,220 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 22:40:33,222 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 22:40:33,225 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,225 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,228 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 22:40:33,231 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 22:40:33,231 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 22:40:33,232 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 22:40:33,232 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 22:40:33,233 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 22:40:33,233 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 22:40:33,233 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 22:40:33,234 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 22:40:33,234 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:40:33,234 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 22:40:33,234 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:40:33,234 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 22:40:33,234 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:40:33,236 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 22:40:33,236 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 22:40:33,236 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 22:40:33,236 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 22:40:33,236 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 22:40:33,236 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 22:40:33,238 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:40:33,238 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,239 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 22:40:33,239 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,240 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 22:40:33,240 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 22:40:33,240 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,240 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,240 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 22:40:33,240 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 22:40:33,241 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,241 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,241 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 22:40:33,242 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,242 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 22:40:33,243 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 22:40:33,243 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,243 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 22:40:33,243 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 22:40:33,243 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 22:40:33,244 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 22:40:33,244 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 22:40:33,244 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 22:40:33,244 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 22:40:33,244 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 22:40:33,244 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 22:40:33,252 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 22:40:33,253 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 22:40:33,253 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 22:40:33,254 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:40:33,256 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 22:40:33,256 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 22:40:33,257 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 22:40:33,257 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:40:33,257 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 22:40:33,257 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:40:33,257 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 22:40:33,257 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:40:33,257 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 22:40:33,258 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 22:40:33,258 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 22:40:33,258 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 22:40:33,258 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 22:40:33,258 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 22:40:33,258 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 22:40:33,259 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:40:33,259 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,265 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 22:40:33,266 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 22:40:33,266 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:40:33,266 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 22:40:33,266 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:40:33,266 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 22:40:33,266 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:40:33,266 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 22:40:33,267 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 22:40:33,267 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 22:40:33,267 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 22:40:33,267 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 22:40:33,267 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 22:40:33,268 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 22:40:33,268 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 22:40:33,269 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 22:40:33,269 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:40:33,270 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 22:40:33,270 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 22:40:33,270 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 22:40:33,270 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:40:33,270 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 22:40:33,271 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:40:33,271 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 22:40:33,271 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:40:33,271 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 22:40:33,271 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_album')
2023-11-25 22:40:33,272 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property album with lazy=false
2023-11-25 22:40:33,272 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:album]
2023-11-25 22:40:33,272 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for album
2023-11-25 22:40:33,272 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_album
2023-11-25 22:40:33,272 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property album
2023-11-25 22:40:33,273 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 22:40:33,273 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 22:40:33,273 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 22:40:33,273 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 22:40:33,273 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 22:40:33,273 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 22:40:33,273 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:40:33,275 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,275 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 22:40:33,276 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 22:40:33,276 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:40:33,276 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 22:40:33,277 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:40:33,277 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 22:40:33,277 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:40:33,278 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 22:40:33,278 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 22:40:33,279 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 22:40:33,280 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:40:33,282 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 22:40:33,282 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 22:40:33,282 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 22:40:33,283 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 22:40:33,283 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 22:40:33,284 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 22:40:33,284 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 22:40:33,285 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 22:40:33,285 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 22:40:33,285 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 22:40:33,286 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 22:40:33,286 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 22:40:33,286 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 22:40:33,288 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 22:40:33,288 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 22:40:33,288 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 22:40:33,288 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 22:40:33,288 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 22:40:33,289 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 22:40:33,289 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 22:40:33,289 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 22:40:33,289 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 22:40:33,289 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 22:40:33,290 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 22:40:33,290 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 22:40:33,290 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 22:40:33,290 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 22:40:33,290 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 22:40:33,291 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 22:40:33,291 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 22:40:33,291 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 22:40:33,291 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 22:40:33,291 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 22:40:33,291 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 22:40:33,292 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 22:40:33,292 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 22:40:33,292 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 22:40:33,292 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 22:40:33,293 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 22:40:33,293 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 22:40:33,293 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 22:40:33,293 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 22:40:33,293 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 22:40:33,296 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for album
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 22:40:33,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 22:40:33,300 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 22:40:33,300 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 22:40:33,300 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 22:40:33,300 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 22:40:33,307 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 22:40:33,307 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 22:40:33,307 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 22:40:33,307 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 22:40:33,307 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 22:40:33,308 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 22:40:33,308 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 22:40:33,310 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 22:40:33,313 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 22:40:33,313 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 22:40:33,316 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 22:40:33,316 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 22:40:33,316 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 22:40:33,317 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 22:40:33,317 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 22:40:33,317 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 22:40:33,317 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 22:40:33,317 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 22:40:33,317 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 22:40:33,318 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:40:33,321 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:40:33,321 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:40:33,342 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:40:33,342 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:40:33,342 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 22:40:33,538 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 22:40:33,807 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 22:40:33,887 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 22:40:33,888 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77666dff, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 22:40:33,894 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 22:40:33,909 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 22:40:33,967 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 22:40:33,967 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 22:40:33,969 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 22:40:33,970 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 22:40:33,972 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4970a585] under count; prior registration was null
2023-11-25 22:40:33,974 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@48c81014] under every; prior registration was null
2023-11-25 22:40:33,974 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@20c41ffc] under any; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 22:40:33,975 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 22:40:33,976 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 22:40:33,976 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 22:40:33,976 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 22:40:33,977 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 22:40:33,977 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 22:40:33,977 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 22:40:33,977 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 22:40:33,977 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 22:40:33,981 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@451fda7f] under sinh; prior registration was null
2023-11-25 22:40:33,981 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5dd229] under cosh; prior registration was null
2023-11-25 22:40:33,981 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@133425c6] under tanh; prior registration was null
2023-11-25 22:40:33,981 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f] under pi; prior registration was null
2023-11-25 22:40:33,981 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9] under log; prior registration was null
2023-11-25 22:40:33,982 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 22:40:33,982 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 22:40:33,982 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 22:40:33,982 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 22:40:33,982 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 22:40:33,982 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 22:40:33,983 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 22:40:33,983 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 22:40:33,983 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 22:40:33,983 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 22:40:33,983 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 22:40:33,983 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 22:40:33,984 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@21d1d881] under position; prior registration was null
2023-11-25 22:40:33,987 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4a6e5f0c] under overlay; prior registration was null
2023-11-25 22:40:33,987 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@8b713c] under trim; prior registration was null
2023-11-25 22:40:33,988 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1023e1ce] under cast; prior registration was null
2023-11-25 22:40:33,988 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@102a85c] under collate; prior registration was null
2023-11-25 22:40:33,989 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4c22fc36] under extract; prior registration was null
2023-11-25 22:40:33,991 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 22:40:33,991 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 22:40:33,991 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@72a009f0] under ifnull; prior registration was null
2023-11-25 22:40:33,991 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 22:40:33,991 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 22:40:33,992 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@74fe4296] under pad; prior registration was null
2023-11-25 22:40:33,993 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6e2ef709] under str; prior registration was null
2023-11-25 22:40:33,996 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a8e9ad8] under format; prior registration was null
2023-11-25 22:40:33,997 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@213832c8] under timestampadd; prior registration was null
2023-11-25 22:40:33,998 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7e374d91] under timestampdiff; prior registration was null
2023-11-25 22:40:33,998 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 22:40:33,998 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c6ad7fd] under current_date; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@384bc1eb] under current_time; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8ec6d91] under current_timestamp; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4afe40c7] under local_date; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30d1b35a] under local_time; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56f36832] under local_datetime; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d180798] under offset_datetime; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d88084] under instant; prior registration was null
2023-11-25 22:40:33,999 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@49957509] under sql; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 22:40:34,001 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 22:40:34,002 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 22:40:34,002 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 22:40:34,002 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 22:40:34,002 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@546d70b7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@643ebb3d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 22:40:34,003 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 22:40:34,004 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 22:40:34,005 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 22:40:34,005 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 22:40:34,005 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f268d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@21d1d881
2023-11-25 22:40:34,005 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 22:40:34,005 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 22:40:34,005 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@16eaf2dd] under trunc; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a4b9426] under bitand; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17ba2564] under bitor; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9dc1a5] under bitxor; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ba0a631] under bitnot; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 22:40:34,011 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4dcce1c7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@a8e9ad8
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30d1b35a
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@56f36832
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b9b6c1f] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fef1420] under chr; prior registration was null
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 22:40:34,012 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2130b6c2] under sysdate; prior registration was null
2023-11-25 22:40:34,013 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 22:40:34,013 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 22:40:34,013 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 22:40:34,013 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 22:40:34,014 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 22:40:34,014 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 22:40:34,015 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@ea0f425] under rank; prior registration was null
2023-11-25 22:40:34,015 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@29b4fbdf] under dense_rank; prior registration was null
2023-11-25 22:40:34,015 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b7e400f] under percent_rank; prior registration was null
2023-11-25 22:40:34,015 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5bd11341] under cume_dist; prior registration was null
2023-11-25 22:40:34,016 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5602ab1c] under listagg; prior registration was null
2023-11-25 22:40:34,018 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 22:40:34,018 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 22:40:34,018 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 22:40:34,018 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 22:40:34,019 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 22:40:34,020 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 22:40:34,022 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 22:40:34,023 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 22:40:34,024 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 22:40:34,025 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 22:40:34,026 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 22:40:34,027 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 22:40:34,036 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 22:40:34,249 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 22:40:34,249 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 22:40:34,542 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:40:34,608 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,609 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,609 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 22:40:34,609 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 22:40:34,631 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:40:34,632 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,633 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,634 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,634 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 22:40:34,634 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 22:40:34,655 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Song]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [album]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:40:34,656 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,657 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 22:40:34,657 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 22:40:34,683 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:40:34,687 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,687 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,687 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 22:40:34,687 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 22:40:34,706 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 22:40:34,707 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 22:40:34,739 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 22:40:34,742 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 22:40:34,743 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 22:40:34,753 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 22:40:34,753 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 22:40:34,753 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 22:40:34,796 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 22:40:34,796 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 22:40:34,797 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 22:40:34,797 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 22:40:34,803 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Song.group]
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 22:40:34,804 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 22:40:34,883 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 22:40:34,883 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 22:40:34,883 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 22:40:34,884 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 22:40:34,884 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 22:40:34,908 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:40:34,910 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 22:40:34,923 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:40:34,928 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@66baa362] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 22:40:34,931 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 22:40:34,952 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-DelayedCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 22:40:34,956 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 22:40:34,969 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 22:40:34,969 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 22:40:34,969 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 22:40:34,969 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 22:40:34,969 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 22:40:34,969 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:40:34,969 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 22:40:34,973 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e693360] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 22:40:34,974 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 22:40:34,975 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 22:40:34,975 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@c4476af] with identifierForTableGroup [GroupMember.group.tours] for NavigablePath [GroupMember.group.tours] 
2023-11-25 22:40:34,975 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.tours.{element})] with identifierForTableGroup [GroupMember.group.tours.{element}] for NavigablePath [GroupMember.group.tours.{element}] 
2023-11-25 22:40:34,976 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 22:40:34,976 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (t1 : GroupMember.group.tours) {
                  primaryTableReference : tours as t1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 22:40:34,977 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 22:40:34,977 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 22:40:34,977 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_album,song_duration,group_id,song_name) values (?,?,?,?)
2023-11-25 22:40:34,977 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_album=?,song_duration=?,group_id=?,song_name=? where song_id=?
2023-11-25 22:40:34,977 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 22:40:34,977 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 22:40:34,977 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 22:40:34,977 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4634b20f] with identifierForTableGroup [Song.group] for NavigablePath [Song.group] 
2023-11-25 22:40:34,977 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:40:34,978 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:40:34,978 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@424268d3] with identifierForTableGroup [Song.group.listOfMembers] for NavigablePath [Song.group.listOfMembers] 
2023-11-25 22:40:34,978 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song.group.listOfMembers.{element})] with identifierForTableGroup [Song.group.listOfMembers.{element}] for NavigablePath [Song.group.listOfMembers.{element}] 
2023-11-25 22:40:34,978 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.album]
 |  +-BasicFetch [Song.duration]
 |  +-EntityFetchJoinedImpl [Song.group]
 |  \-BasicFetch [Song.name]

2023-11-25 22:40:34,978 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Song.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Song.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 22:40:34,979 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 22:40:34,979 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 22:40:34,980 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 22:40:34,980 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 22:40:34,980 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 22:40:34,980 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 22:40:34,980 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 22:40:34,980 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 22:40:34,980 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 22:40:34,980 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 22:40:34,982 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 22:40:34,982 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 22:40:34,982 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 22:40:34,982 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 22:40:34,982 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 22:40:34,982 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 22:40:34,982 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27b9278e] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 22:40:34,982 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:40:34,983 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:40:34,983 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@e798c4e] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 22:40:34,983 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 22:40:34,983 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 22:40:34,984 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 22:40:34,986 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 22:40:34,986 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7ac5a450] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 22:40:34,986 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 22:40:34,988 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@301a1237] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 22:40:34,990 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 22:40:34,990 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 22:40:34,991 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@32f2a78b] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 22:40:34,991 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 22:40:34,991 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@32776275] with identifierForTableGroup [Group.repertoire.{element}.group] for NavigablePath [Group.repertoire.{element}.group] 
2023-11-25 22:40:34,991 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 22:40:34,991 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  Row insert: update songs set group_id=? where song_id=?
2023-11-25 22:40:34,991 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  Row delete: update songs set group_id=null where group_id=? and song_id=?
2023-11-25 22:40:34,992 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  One-shot delete: update songs set group_id=null where group_id=?
2023-11-25 22:40:34,992 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 22:40:34,992 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4a315ec] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 22:40:34,992 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 22:40:34,992 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6109f9fe] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 22:40:34,993 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 22:40:35,033 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 22:40:35,033 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 22:40:35,042 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 22:40:35,042 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 22:40:35,049 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 22:40:35,050 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 22:40:35,051 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f55ae9a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@470221df]
2023-11-25 22:40:35,053 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 22:40:35,053 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 22:40:35,054 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 22:40:35,054 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 22:40:35,058 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6bda0f08
2023-11-25 22:40:35,059 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: 949145a7-b34c-47ca-8ddf-313f5f398a8e (<unnamed>)
2023-11-25 22:40:35,059 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 22:40:35,059 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 22:40:35,132 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 22:40:35,135 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 22:40:35,138 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 22:40:35,138 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 22:40:35,143 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 22:40:35,356 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 22:40:35,398 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 22:40:35,409 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 22:40:35,428 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(37082347536100)`
            <- [root] - `Group(37082347536100)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(37082347536100)`
          <- [root] - `Group(37082347536100)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 22:40:35,488 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 22:40:35,488 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(37082347536100))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 22:40:35,497 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(37082347536100)]
 |  +-SelectEagerCollectionFetch [Group(37082347536100).listOfMembers]
 |  +-BasicFetch [Group(37082347536100).mainGenre]
 |  +-BasicFetch [Group(37082347536100).name]
 |  +-BasicFetch [Group(37082347536100).placeInChart]
 |  +-DelayedCollectionFetch [Group(37082347536100).repertoire]
 |  +-SelectEagerCollectionFetch [Group(37082347536100).tours]
 |  \-BasicFetch [Group(37082347536100).yearOfFoundation]

2023-11-25 22:40:35,497 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(37082347536100)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 22:40:35,515 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 22:40:35,540 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,541 DEBUG o.h.o.results [JavaFX Application Thread]     Group(37082347536100).listOfMembers -> SelectEagerCollectionInitializer(Group(37082347536100).listOfMembers)@95174353 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,542 DEBUG o.h.o.results [JavaFX Application Thread]     Group(37082347536100).repertoire -> DelayedCollectionInitializer(Group(37082347536100).repertoire)@1884798354 (PluralAttribute(Group.repertoire))
2023-11-25 22:40:35,542 DEBUG o.h.o.results [JavaFX Application Thread]     Group(37082347536100).tours -> SelectEagerCollectionInitializer(Group(37082347536100).tours)@1840452307 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,542 DEBUG o.h.o.results [JavaFX Application Thread]     Group(37082347536100) -> EntityResultInitializer(Group(37082347536100))@975728672 (SingleTableEntityPersister(Group))
2023-11-25 22:40:35,549 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 22:40:35,566 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 22:40:35,567 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 1
2023-11-25 22:40:35,568 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#1
2023-11-25 22:40:35,568 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 22:40:35,568 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#1
2023-11-25 22:40:35,568 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#1
2023-11-25 22:40:35,570 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#1] : 2005633421
2023-11-25 22:40:35,579 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:40:35,579 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 22:40:35,579 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 22:40:35,579 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 22:40:35,584 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#1
2023-11-25 22:40:35,584 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,585 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 22:40:35,585 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 2
2023-11-25 22:40:35,585 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#2
2023-11-25 22:40:35,585 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 22:40:35,585 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#2
2023-11-25 22:40:35,585 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#2
2023-11-25 22:40:35,585 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#2] : 269585798
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 22:40:35,586 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#2
2023-11-25 22:40:35,586 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,586 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 3
2023-11-25 22:40:35,586 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#3
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,586 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#3
2023-11-25 22:40:35,586 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#3
2023-11-25 22:40:35,586 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#3] : 590473226
2023-11-25 22:40:35,586 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#3
2023-11-25 22:40:35,587 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 4
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#4
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#4
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#4
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#4] : 651582571
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 22:40:35,587 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 22:40:35,587 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#4
2023-11-25 22:40:35,587 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 5
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#5
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#5
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#5
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#5] : 1789605372
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#5
2023-11-25 22:40:35,588 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 6
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#6
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#6
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#6
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#6] : 2016258189
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#6
2023-11-25 22:40:35,588 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,588 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 22:40:35,588 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 7
2023-11-25 22:40:35,590 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#7
2023-11-25 22:40:35,590 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 22:40:35,590 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#7
2023-11-25 22:40:35,590 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#7
2023-11-25 22:40:35,590 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#7] : 55224763
2023-11-25 22:40:35,590 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 22:40:35,590 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 22:40:35,590 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 22:40:35,590 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 22:40:35,591 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#7
2023-11-25 22:40:35,591 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,591 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 22:40:35,591 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 8
2023-11-25 22:40:35,591 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#8
2023-11-25 22:40:35,591 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 22:40:35,591 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#8
2023-11-25 22:40:35,591 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#8
2023-11-25 22:40:35,591 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#8] : 2081593411
2023-11-25 22:40:35,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 22:40:35,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 22:40:35,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 22:40:35,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 22:40:35,592 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#8
2023-11-25 22:40:35,592 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 22:40:35,592 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 9
2023-11-25 22:40:35,592 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#9
2023-11-25 22:40:35,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 22:40:35,592 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#9
2023-11-25 22:40:35,592 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#9
2023-11-25 22:40:35,592 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#9] : 822368079
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 22:40:35,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#9
2023-11-25 22:40:35,593 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 22:40:35,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 11
2023-11-25 22:40:35,593 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#11
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 22:40:35,593 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#11
2023-11-25 22:40:35,593 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#11
2023-11-25 22:40:35,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#11] : 482912038
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 22:40:35,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 22:40:35,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 22:40:35,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#11
2023-11-25 22:40:35,594 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 22:40:35,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 12
2023-11-25 22:40:35,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#12
2023-11-25 22:40:35,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 22:40:35,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#12
2023-11-25 22:40:35,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#12
2023-11-25 22:40:35,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#12] : 308835528
2023-11-25 22:40:35,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 22:40:35,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 22:40:35,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 22:40:35,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 22:40:35,595 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#12
2023-11-25 22:40:35,595 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 22:40:35,595 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 13
2023-11-25 22:40:35,595 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#13
2023-11-25 22:40:35,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 22:40:35,595 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#13
2023-11-25 22:40:35,595 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#13
2023-11-25 22:40:35,595 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#13] : 1692959026
2023-11-25 22:40:35,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 22:40:35,596 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#13
2023-11-25 22:40:35,596 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 22:40:35,596 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 14
2023-11-25 22:40:35,596 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#14
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 22:40:35,596 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#14
2023-11-25 22:40:35,596 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#14
2023-11-25 22:40:35,596 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#14] : 1052811040
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 22:40:35,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#14
2023-11-25 22:40:35,597 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 15
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#15
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#15
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#15
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#15] : 1832365344
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#15
2023-11-25 22:40:35,597 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 22:40:35,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 16
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#16
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#16
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#16
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#16] : 1785439727
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#16
2023-11-25 22:40:35,598 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 17
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#17
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#17
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#17
2023-11-25 22:40:35,598 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#17] : 975786221
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 22:40:35,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 22:40:35,599 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#17
2023-11-25 22:40:35,599 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 22:40:35,599 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 21
2023-11-25 22:40:35,599 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#21
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 22:40:35,599 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#21
2023-11-25 22:40:35,599 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#21
2023-11-25 22:40:35,599 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#21] : 1883451310
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 22:40:35,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#21
2023-11-25 22:40:35,600 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(37082347536100)): 22
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).listOfMembers#22
2023-11-25 22:40:35,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(37082347536100).repertoire#22
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(37082347536100).tours#22
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(37082347536100)#22] : 376685163
2023-11-25 22:40:35,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 22:40:35,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 22:40:35,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 22:40:35,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 22:40:35,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(37082347536100)#22
2023-11-25 22:40:35,600 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78145dad
2023-11-25 22:40:35,609 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,610 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,611 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,618 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,618 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@9555485 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,618 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@997246847 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,619 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@827963638 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,619 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,625 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 22:40:35,625 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,625 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,626 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,626 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,626 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@360531684 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,626 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1203703270 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,626 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@499308254 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,626 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,628 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 22:40:35,629 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,629 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,629 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,629 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,629 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1611887187 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,629 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1810640041 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,629 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1492237924 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,630 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,631 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 22:40:35,632 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,632 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,632 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,632 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,632 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1515644179 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,632 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@251753123 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,632 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1604223095 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,632 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,635 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 22:40:35,635 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,635 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,636 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,636 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,636 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1311120119 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,636 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1695590012 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,636 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1844097750 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,636 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,638 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 22:40:35,638 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,638 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,639 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,639 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,639 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@235304464 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,639 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@910297348 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,639 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1949800413 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,639 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,641 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 22:40:35,641 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,641 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,641 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,641 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,641 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@702861645 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,642 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1638216403 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,642 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1323358685 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,642 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,643 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 22:40:35,643 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,643 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,643 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,643 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,643 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1097228482 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,643 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@159409922 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,643 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1852227622 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,643 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,646 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 22:40:35,646 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,646 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,647 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,647 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,647 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1887006159 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,647 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@684127254 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,647 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1840817704 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,647 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,649 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 22:40:35,649 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,649 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,649 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,649 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,649 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1852742964 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,649 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1188032311 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,650 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1370847429 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,650 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,651 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 22:40:35,652 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,652 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,652 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,652 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,652 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1047930524 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,652 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1149174471 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,652 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2052113696 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,652 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,654 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 22:40:35,654 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,654 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,654 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,655 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,655 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@12616296 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,655 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2084912789 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,655 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@223161567 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,655 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,656 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 22:40:35,656 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,657 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,657 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,657 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,657 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1321812012 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,657 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@713467646 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,657 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1719727935 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,657 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,659 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 22:40:35,659 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,659 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,659 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,660 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,660 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@220061484 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,660 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1816520895 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,660 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@80892670 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,660 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,661 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 22:40:35,662 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,662 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,662 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,662 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,662 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@804801216 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,662 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@967551075 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,662 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1452540471 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,662 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,664 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 22:40:35,664 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,664 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,665 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,665 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,665 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1776892539 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,665 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@530188491 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,665 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1270098553 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,665 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,667 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 22:40:35,668 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,668 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,668 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,668 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,668 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@40258889 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,668 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1751861406 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,668 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2105216390 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,668 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,670 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 22:40:35,670 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,670 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,671 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,671 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,671 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@479171712 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,671 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@968732074 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,671 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1469749012 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,671 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,672 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 22:40:35,673 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,673 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,673 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,673 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,673 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1565132031 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1584073333 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@461300671 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,674 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,675 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 22:40:35,675 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,675 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,675 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,676 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,676 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1758613657 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,676 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@81601831 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,676 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@84360335 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,676 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,678 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 22:40:35,678 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,678 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,678 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,679 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,679 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@451549965 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,679 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@641052571 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,679 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1376109573 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,679 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,681 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 22:40:35,681 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,681 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,681 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,681 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2067929589 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@127651700 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@2120446208 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,682 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,683 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 22:40:35,684 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,684 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,684 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,684 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,684 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1023801623 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,684 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1477141702 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,684 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@87419796 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,686 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,687 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 22:40:35,688 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,688 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,688 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,688 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,688 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@321603092 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,688 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@971536046 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,688 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1860783857 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,689 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,690 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 22:40:35,690 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,691 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,691 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,691 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,691 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1682704471 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,691 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1081498857 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,691 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1517046751 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,691 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,693 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 22:40:35,693 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,693 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,693 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,693 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,693 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1747665403 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,694 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1352785298 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,694 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1564327068 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,694 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,695 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 22:40:35,695 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,695 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,695 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,696 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,696 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1830179236 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,696 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1577044422 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,696 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1126183312 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,696 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,698 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 22:40:35,698 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,698 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,698 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,698 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,698 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@651309666 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,699 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1681669017 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,699 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@446522229 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,699 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,700 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 22:40:35,700 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,702 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,702 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,702 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,702 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@782222293 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,702 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1609079736 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,702 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@649398633 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,702 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,704 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 22:40:35,704 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,704 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,705 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,705 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,705 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@274956909 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,705 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@512962377 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,705 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@626367981 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,705 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,707 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 22:40:35,707 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,707 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,707 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,707 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,707 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1241639763 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,707 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1135787275 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,707 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@487326686 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,707 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,708 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 22:40:35,708 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,710 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,710 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,710 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,710 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@941750974 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,710 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1162747031 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,710 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1969448080 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,710 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,712 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 22:40:35,712 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 22:40:35,712 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,712 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 22:40:35,712 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,712 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 1934759222
2023-11-25 22:40:35,714 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@2068047315
2023-11-25 22:40:35,714 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,714 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 22:40:35,714 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 22:40:35,714 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 22:40:35,714 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 22:40:35,714 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@2068047315
2023-11-25 22:40:35,715 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@55d27995
2023-11-25 22:40:35,715 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 22:40:35,715 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 22:40:35,715 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,715 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 22:40:35,715 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,715 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 1687672950
2023-11-25 22:40:35,715 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@2068047315
2023-11-25 22:40:35,715 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@2068047315
2023-11-25 22:40:35,715 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 22:40:35,716 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 22:40:35,716 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 22:40:35,716 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 22:40:35,716 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 22:40:35,716 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@2068047315
2023-11-25 22:40:35,716 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@55d27995
2023-11-25 22:40:35,716 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 22:40:35,716 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,717 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,717 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,717 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,717 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1199179132 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,717 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2083696080 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,717 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@980057362 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,717 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,719 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 22:40:35,719 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,719 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,719 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,720 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,720 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@513249741 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,720 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2013068768 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,720 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@904456960 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,720 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,721 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 22:40:35,722 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 22:40:35,722 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,722 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,722 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,723 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1743060425 (ToOneAttributeMapping(NavigableRole[Tour.group])@1278688956)
2023-11-25 22:40:35,723 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@363244254 (EntityCollectionPart(Group.tours#{element})@1068922939)
2023-11-25 22:40:35,723 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@670402178 (PluralAttribute(Group.tours))
2023-11-25 22:40:35,723 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 22:40:35,725 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 22:40:35,725 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 22:40:35,725 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 22:40:35,725 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 22:40:35,726 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 22:40:35,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@145677560 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@696702880)
2023-11-25 22:40:35,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@56920825 (EntityCollectionPart(Group.listOfMembers#{element})@1652028946)
2023-11-25 22:40:35,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1301724949 (PluralAttribute(Group.listOfMembers))
2023-11-25 22:40:35,726 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 22:40:35,727 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 22:40:35,728 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 22:40:35,728 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 22:40:35,737 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (uninitialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (uninitialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (uninitialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (uninitialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (uninitialized)
2023-11-25 22:40:35,745 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (uninitialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (uninitialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (uninitialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (uninitialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (uninitialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 22:40:35,746 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (uninitialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (uninitialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (uninitialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (uninitialized)
2023-11-25 22:40:35,747 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (uninitialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (uninitialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (uninitialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (uninitialized)
2023-11-25 22:40:35,748 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 22:40:35,752 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 20 objects
2023-11-25 22:40:35,752 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 22:40:35,753 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,754 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,755 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,755 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,755 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,756 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,757 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,757 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1968, name=Led Zepellin, mainGenre=Rock, id=4, repertoire=<uninitialized>, tours=[]}
2023-11-25 22:40:35,759 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 22:40:35,760 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 22:40:35,761 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 22:40:35,766 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 22:40:35,766 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 22:41:02,828 DEBUG o.h.o.c.pooling [Hibernate Connection Pool Validation Thread] Connection pool now considered primed; min-size will be maintained
2023-11-25 23:00:22,325 INFO mainLogger [main] Application closed
2023-11-25 23:00:38,718 INFO mainLogger [main] Application started
2023-11-25 23:00:40,010 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 23:00:40,011 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 23:00:40,012 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 23:00:40,028 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 23:00:40,037 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 23:00:40,047 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 23:00:40,143 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 23:00:40,146 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 23:00:40,148 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 23:00:40,186 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 23:00:40,195 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 23:00:40,196 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 23:00:40,197 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:00:40,197 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:00:40,198 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 23:00:40,200 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 23:00:40,201 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 23:00:40,202 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:00:40,203 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 23:00:40,204 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 23:00:40,205 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:00:40,205 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 23:00:40,225 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 23:00:40,227 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 23:00:40,497 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2264a374
2023-11-25 23:00:40,497 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2264a374
2023-11-25 23:00:40,497 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2264a374
2023-11-25 23:00:40,497 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@18711d7
2023-11-25 23:00:40,497 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@18711d7
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4193ffa
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4193ffa
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@56c25135
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@56c25135
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@513a379a
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@513a379a
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@513a379a
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@680a9dc3
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@680a9dc3
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@680a9dc3
2023-11-25 23:00:40,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@25a199d7
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@25a199d7
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@612e2faf
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@612852f7
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@612852f7
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5df03f94
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@74b67adc
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@647570b2
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@647570b2
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@647570b2
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@47e93921
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@47e93921
2023-11-25 23:00:40,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@47e93921
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@1b39b2d7
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@1b39b2d7
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b39b2d7
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5c9e4bf6
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5c9e4bf6
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c9e4bf6
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@13214037
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@13214037
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@13214037
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1d8f4343
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1d8f4343
2023-11-25 23:00:40,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4bf6e52f
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4bf6e52f
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@6519c65c
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@6519c65c
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6519c65c
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ca00230
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@1b52c3bc
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b52c3bc
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@67f18264
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@4cf183e0
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4cf183e0
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@4cf183e0
2023-11-25 23:00:40,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@303cb9cc
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@3dfed354
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@56f7842d
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@16d9e390
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@16d9e390
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@43feda5e
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@43feda5e
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@8d1c506
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@62edfedd
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3b714473
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@ee85569
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@8975847
2023-11-25 23:00:40,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@501449e
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3462ca91
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3462ca91
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@786d9269
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@786d9269
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4a0aa843
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4a0aa843
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45203028
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45203028
2023-11-25 23:00:40,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@67344c5f
2023-11-25 23:00:40,504 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@67344c5f
2023-11-25 23:00:40,504 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73de640a
2023-11-25 23:00:40,504 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6c899282
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@286c4e4b
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@286c4e4b
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6dffa9ad
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d817e2c
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4dbcec9c
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7e8ed76
2023-11-25 23:00:40,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7e8ed76
2023-11-25 23:00:40,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@174a9ee7
2023-11-25 23:00:40,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@715cf23c
2023-11-25 23:00:40,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@5b2e2887
2023-11-25 23:00:40,509 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5b2e2887
2023-11-25 23:00:40,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@1bededc9
2023-11-25 23:00:40,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1bededc9
2023-11-25 23:00:40,518 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5813e5f5
2023-11-25 23:00:40,522 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5813e5f5
2023-11-25 23:00:40,522 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5813e5f5
2023-11-25 23:00:40,523 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4e4821d9
2023-11-25 23:00:40,523 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4e4821d9
2023-11-25 23:00:40,523 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4e4821d9
2023-11-25 23:00:40,523 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@64885287
2023-11-25 23:00:40,523 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@10ff687a
2023-11-25 23:00:40,524 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@57841bdd
2023-11-25 23:00:40,524 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@57841bdd
2023-11-25 23:00:40,524 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@58cdbe1d
2023-11-25 23:00:40,524 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@58cdbe1d
2023-11-25 23:00:40,525 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@58cdbe1d
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7e77c3e9
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1520d8e5
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@620d736f
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@620d736f
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@57051465
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@57051465
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@57051465
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@172dfde7
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@172dfde7
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d9e817
2023-11-25 23:00:40,526 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d9e817
2023-11-25 23:00:40,527 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@d4675e8
2023-11-25 23:00:40,527 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@d4675e8
2023-11-25 23:00:40,527 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@729fee19
2023-11-25 23:00:40,527 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@729fee19
2023-11-25 23:00:40,527 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@a25e768
2023-11-25 23:00:40,527 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@a25e768
2023-11-25 23:00:40,528 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@41772f6b
2023-11-25 23:00:40,544 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@747be41b
2023-11-25 23:00:40,545 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@747be41b
2023-11-25 23:00:40,547 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@62472c3e
2023-11-25 23:00:40,548 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@72a24eaa
2023-11-25 23:00:40,548 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@73673ce4
2023-11-25 23:00:40,549 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6c41eb0e
2023-11-25 23:00:40,549 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@373c1c64
2023-11-25 23:00:40,549 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@578bd337
2023-11-25 23:00:40,549 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d41453e
2023-11-25 23:00:40,549 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7e3bc403
2023-11-25 23:00:40,549 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2933289c
2023-11-25 23:00:40,577 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24e7f1bf] into BootstrapContext; was [null]
2023-11-25 23:00:40,578 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4987ad4f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4dd19e33]
2023-11-25 23:00:40,751 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 23:00:40,751 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 23:00:40,788 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 23:00:40,798 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 23:00:40,799 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 23:00:40,799 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 23:00:40,799 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 23:00:40,805 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 23:00:40,805 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 23:00:41,707 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 23:00:41,708 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 23:00:41,708 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 23:00:41,833 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 23:00:41,849 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 23:00:41,849 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 23:00:41,882 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e993d33) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1cb2c4c2)
2023-11-25 23:00:41,883 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53bf6690) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a6124b9)
2023-11-25 23:00:41,884 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d66ea63) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2778bfd9)
2023-11-25 23:00:41,884 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@fdbd640) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c4c7fee)
2023-11-25 23:00:41,884 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@46e3a3f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@24875a84)
2023-11-25 23:00:41,884 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@753ff182) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a3343c4)
2023-11-25 23:00:41,884 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1194b567) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@f598eab)
2023-11-25 23:00:41,884 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@560dd23) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@551d8328)
2023-11-25 23:00:41,885 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61162b61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@22f9cd3e)
2023-11-25 23:00:41,886 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 23:00:41,887 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 23:00:41,888 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 23:00:41,893 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:00:41,893 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:00:41,898 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@4b1948a8
2023-11-25 23:00:41,898 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@62472c3e`
2023-11-25 23:00:41,909 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:00:41,909 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:00:41,909 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:00:41,909 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:00:41,910 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:00:41,910 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:00:41,911 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:00:41,911 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:00:41,911 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:00:41,913 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35132ae9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@bc7868f]
2023-11-25 23:00:41,995 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 23:00:42,002 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 23:00:42,043 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 23:00:42,056 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 23:00:42,066 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 23:00:42,085 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:00:42,125 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 23:00:42,128 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:00:42,128 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:00:42,133 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:00:42,141 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 23:00:42,149 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:00:42,157 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 23:00:42,158 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:00:42,161 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 23:00:42,166 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,168 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,190 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 23:00:42,197 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,198 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 23:00:42,200 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 23:00:42,204 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,204 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,209 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 23:00:42,214 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 23:00:42,216 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 23:00:42,217 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 23:00:42,217 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 23:00:42,218 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 23:00:42,218 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 23:00:42,219 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 23:00:42,219 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 23:00:42,220 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:00:42,220 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 23:00:42,220 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:00:42,220 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 23:00:42,221 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:00:42,221 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 23:00:42,222 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 23:00:42,222 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 23:00:42,222 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 23:00:42,222 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 23:00:42,222 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 23:00:42,224 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:00:42,225 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,225 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 23:00:42,226 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,227 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 23:00:42,227 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 23:00:42,228 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,228 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,228 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 23:00:42,228 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 23:00:42,229 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,231 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,231 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 23:00:42,232 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,235 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 23:00:42,236 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 23:00:42,236 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,236 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:00:42,237 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 23:00:42,237 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 23:00:42,237 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 23:00:42,238 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 23:00:42,239 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 23:00:42,240 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 23:00:42,240 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 23:00:42,241 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 23:00:42,262 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 23:00:42,263 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 23:00:42,264 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 23:00:42,265 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:00:42,268 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 23:00:42,268 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:00:42,268 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:00:42,269 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:00:42,269 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 23:00:42,269 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:00:42,269 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 23:00:42,269 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:00:42,269 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 23:00:42,270 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 23:00:42,270 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 23:00:42,270 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 23:00:42,270 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 23:00:42,270 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 23:00:42,270 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 23:00:42,271 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:00:42,272 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,280 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:00:42,281 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 23:00:42,282 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:00:42,283 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 23:00:42,283 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:00:42,283 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 23:00:42,283 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:00:42,284 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 23:00:42,284 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 23:00:42,284 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 23:00:42,284 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 23:00:42,285 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 23:00:42,285 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 23:00:42,286 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 23:00:42,287 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 23:00:42,287 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 23:00:42,288 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:00:42,292 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 23:00:42,293 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:00:42,293 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:00:42,294 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:00:42,294 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 23:00:42,294 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:00:42,294 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 23:00:42,295 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:00:42,295 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 23:00:42,296 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_album')
2023-11-25 23:00:42,296 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property album with lazy=false
2023-11-25 23:00:42,296 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:album]
2023-11-25 23:00:42,296 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for album
2023-11-25 23:00:42,296 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_album
2023-11-25 23:00:42,296 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property album
2023-11-25 23:00:42,298 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 23:00:42,298 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 23:00:42,298 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 23:00:42,298 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 23:00:42,298 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 23:00:42,298 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 23:00:42,299 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:00:42,299 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,300 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:00:42,300 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 23:00:42,300 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:00:42,301 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 23:00:42,301 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:00:42,301 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 23:00:42,301 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:00:42,302 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 23:00:42,302 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 23:00:42,308 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 23:00:42,309 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:00:42,314 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 23:00:42,314 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:00:42,314 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:00:42,315 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:00:42,315 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 23:00:42,315 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:00:42,315 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 23:00:42,315 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:00:42,316 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 23:00:42,316 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 23:00:42,317 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 23:00:42,317 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 23:00:42,317 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 23:00:42,317 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 23:00:42,317 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 23:00:42,318 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 23:00:42,318 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 23:00:42,318 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 23:00:42,318 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 23:00:42,318 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 23:00:42,319 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 23:00:42,320 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 23:00:42,324 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 23:00:42,325 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 23:00:42,327 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:00:42,337 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 23:00:42,338 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:00:42,339 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:00:42,339 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 23:00:42,340 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 23:00:42,341 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 23:00:42,341 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 23:00:42,341 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 23:00:42,341 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 23:00:42,344 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 23:00:42,345 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 23:00:42,346 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 23:00:42,347 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 23:00:42,348 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 23:00:42,348 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 23:00:42,349 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 23:00:42,350 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 23:00:42,350 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 23:00:42,350 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 23:00:42,351 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 23:00:42,355 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 23:00:42,360 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:00:42,362 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:00:42,365 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:00:42,366 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 23:00:42,366 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:00:42,367 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 23:00:42,368 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:00:42,368 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 23:00:42,369 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:00:42,378 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:00:42,382 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 23:00:42,382 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:00:42,382 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for album
2023-11-25 23:00:42,383 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 23:00:42,384 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:00:42,384 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:00:42,384 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 23:00:42,385 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 23:00:42,385 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 23:00:42,385 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 23:00:42,386 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 23:00:42,386 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:00:42,407 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 23:00:42,407 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 23:00:42,407 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 23:00:42,408 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 23:00:42,408 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 23:00:42,408 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 23:00:42,409 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 23:00:42,413 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 23:00:42,417 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 23:00:42,418 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 23:00:42,424 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 23:00:42,426 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 23:00:42,427 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 23:00:42,428 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 23:00:42,428 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 23:00:42,429 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 23:00:42,429 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 23:00:42,430 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 23:00:42,430 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 23:00:42,431 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:00:42,439 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:00:42,441 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:00:42,490 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:00:42,491 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:00:42,491 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:00:42,748 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 23:00:43,060 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 23:00:43,149 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:00:43,150 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@194e4ee, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 23:00:43,156 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 23:00:43,165 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:00:43,226 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 23:00:43,227 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 23:00:43,229 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 23:00:43,230 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 23:00:43,233 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4f270c35] under count; prior registration was null
2023-11-25 23:00:43,235 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7993e50b] under every; prior registration was null
2023-11-25 23:00:43,235 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1dba6c58] under any; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 23:00:43,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 23:00:43,237 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 23:00:43,237 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 23:00:43,237 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 23:00:43,237 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 23:00:43,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 23:00:43,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 23:00:43,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 23:00:43,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 23:00:43,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 23:00:43,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 23:00:43,240 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c5c2ba4] under sinh; prior registration was null
2023-11-25 23:00:43,240 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@791a02b5] under cosh; prior registration was null
2023-11-25 23:00:43,240 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b9ed6f7] under tanh; prior registration was null
2023-11-25 23:00:43,240 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d0c60c4] under pi; prior registration was null
2023-11-25 23:00:43,240 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a063ca] under log; prior registration was null
2023-11-25 23:00:43,241 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 23:00:43,241 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 23:00:43,241 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 23:00:43,241 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 23:00:43,241 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 23:00:43,242 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 23:00:43,243 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 23:00:43,243 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 23:00:43,243 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 23:00:43,243 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 23:00:43,243 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 23:00:43,243 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 23:00:43,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@25244e8f] under position; prior registration was null
2023-11-25 23:00:43,248 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@16a30225] under overlay; prior registration was null
2023-11-25 23:00:43,249 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@50fa76a4] under trim; prior registration was null
2023-11-25 23:00:43,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@c9761d8] under cast; prior registration was null
2023-11-25 23:00:43,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a3146f1] under collate; prior registration was null
2023-11-25 23:00:43,253 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4c3539e] under extract; prior registration was null
2023-11-25 23:00:43,253 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 23:00:43,253 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 23:00:43,254 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7d1172cc] under ifnull; prior registration was null
2023-11-25 23:00:43,254 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 23:00:43,254 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 23:00:43,255 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@479edc47] under pad; prior registration was null
2023-11-25 23:00:43,256 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3bd7eb54] under str; prior registration was null
2023-11-25 23:00:43,259 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20028719] under format; prior registration was null
2023-11-25 23:00:43,260 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@352f23e7] under timestampadd; prior registration was null
2023-11-25 23:00:43,262 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@497deb54] under timestampdiff; prior registration was null
2023-11-25 23:00:43,263 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 23:00:43,263 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ea60c4] under current_date; prior registration was null
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20572ff7] under current_time; prior registration was null
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f89c0ed] under current_timestamp; prior registration was null
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 23:00:43,264 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@45cc992] under local_date; prior registration was null
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5266759d] under local_time; prior registration was null
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b57c0b1] under local_datetime; prior registration was null
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ae8ef9e] under offset_datetime; prior registration was null
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@189aa908] under instant; prior registration was null
2023-11-25 23:00:43,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 23:00:43,266 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7c205f11] under sql; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60a063ca
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 23:00:43,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 23:00:43,268 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 23:00:43,269 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5a1c061] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 23:00:43,269 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@723c4e8a] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 23:00:43,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 23:00:43,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 23:00:43,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 23:00:43,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 23:00:43,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66631ebe] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@25244e8f
2023-11-25 23:00:43,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 23:00:43,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 23:00:43,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 23:00:43,280 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@645eff25] under trunc; prior registration was null
2023-11-25 23:00:43,281 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 23:00:43,281 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 23:00:43,281 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2165b08d] under bitand; prior registration was null
2023-11-25 23:00:43,281 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13a23bb4] under bitor; prior registration was null
2023-11-25 23:00:43,282 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f0a0c1] under bitxor; prior registration was null
2023-11-25 23:00:43,282 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1644c08d] under bitnot; prior registration was null
2023-11-25 23:00:43,282 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 23:00:43,283 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1aa9eb10] under format; prior registration was org.hibernate.dialect.function.FormatFunction@20028719
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5266759d
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4b57c0b1
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18d41c6a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d0c60c4
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18225119] under chr; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28d2aa38] under sysdate; prior registration was null
2023-11-25 23:00:43,284 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 23:00:43,285 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 23:00:43,285 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 23:00:43,285 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 23:00:43,285 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 23:00:43,285 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 23:00:43,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@23e1eb8c] under rank; prior registration was null
2023-11-25 23:00:43,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@471954a3] under dense_rank; prior registration was null
2023-11-25 23:00:43,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6399a4c1] under percent_rank; prior registration was null
2023-11-25 23:00:43,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@12e2f6c9] under cume_dist; prior registration was null
2023-11-25 23:00:43,290 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1882c97b] under listagg; prior registration was null
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 23:00:43,292 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 23:00:43,293 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 23:00:43,294 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 23:00:43,294 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 23:00:43,294 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 23:00:43,294 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 23:00:43,294 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 23:00:43,295 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 23:00:43,296 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 23:00:43,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 23:00:43,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 23:00:43,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 23:00:43,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 23:00:43,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 23:00:43,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 23:00:43,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 23:00:43,314 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 23:00:43,535 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:00:43,536 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:00:43,883 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:00:43,956 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:43,956 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:43,956 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:00:43,956 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:00:43,988 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:00:43,990 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:43,992 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:43,992 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:43,992 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:00:43,992 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:00:44,018 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Song]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [album]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:00:44,020 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:44,021 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:00:44,021 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:00:44,052 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:00:44,057 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:44,057 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:44,058 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:00:44,058 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:00:44,084 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:00:44,086 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:00:44,125 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 23:00:44,129 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 23:00:44,129 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 23:00:44,140 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 23:00:44,140 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 23:00:44,140 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 23:00:44,195 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 23:00:44,195 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:00:44,195 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 23:00:44,195 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 23:00:44,202 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Song.group]
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:00:44,203 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:00:44,298 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 23:00:44,298 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 23:00:44,298 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 23:00:44,298 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 23:00:44,299 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 23:00:44,327 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:00:44,329 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:00:44,342 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:00:44,349 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@580c0340] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:00:44,352 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:00:44,375 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-DelayedCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 23:00:44,379 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 23:00:44,394 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 23:00:44,395 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 23:00:44,395 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 23:00:44,395 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 23:00:44,395 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 23:00:44,395 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:00:44,395 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 23:00:44,400 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@60a17bd6] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 23:00:44,400 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 23:00:44,403 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:00:44,403 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@50448e66] with identifierForTableGroup [GroupMember.group.tours] for NavigablePath [GroupMember.group.tours] 
2023-11-25 23:00:44,403 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.tours.{element})] with identifierForTableGroup [GroupMember.group.tours.{element}] for NavigablePath [GroupMember.group.tours.{element}] 
2023-11-25 23:00:44,403 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 23:00:44,404 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (t1 : GroupMember.group.tours) {
                  primaryTableReference : tours as t1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:00:44,404 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 23:00:44,404 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 23:00:44,404 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_album,song_duration,group_id,song_name) values (?,?,?,?)
2023-11-25 23:00:44,405 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_album=?,song_duration=?,group_id=?,song_name=? where song_id=?
2023-11-25 23:00:44,405 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 23:00:44,405 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 23:00:44,405 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 23:00:44,405 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28501d36] with identifierForTableGroup [Song.group] for NavigablePath [Song.group] 
2023-11-25 23:00:44,405 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:00:44,405 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:00:44,406 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6d5da553] with identifierForTableGroup [Song.group.listOfMembers] for NavigablePath [Song.group.listOfMembers] 
2023-11-25 23:00:44,406 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song.group.listOfMembers.{element})] with identifierForTableGroup [Song.group.listOfMembers.{element}] for NavigablePath [Song.group.listOfMembers.{element}] 
2023-11-25 23:00:44,406 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.album]
 |  +-BasicFetch [Song.duration]
 |  +-EntityFetchJoinedImpl [Song.group]
 |  \-BasicFetch [Song.name]

2023-11-25 23:00:44,406 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Song.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Song.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:00:44,407 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 23:00:44,407 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 23:00:44,407 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 23:00:44,407 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 23:00:44,407 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 23:00:44,407 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 23:00:44,407 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 23:00:44,408 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 23:00:44,408 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 23:00:44,409 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 23:00:44,409 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 23:00:44,409 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 23:00:44,409 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 23:00:44,409 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 23:00:44,409 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:00:44,409 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 23:00:44,409 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@667ad34f] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 23:00:44,409 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:00:44,409 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:00:44,410 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@67eef188] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 23:00:44,410 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 23:00:44,410 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 23:00:44,410 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:00:44,412 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:00:44,412 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3255890e] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:00:44,412 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:00:44,415 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e2300aa] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 23:00:44,417 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 23:00:44,417 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:00:44,417 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@297e303d] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 23:00:44,417 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 23:00:44,418 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2121b2f2] with identifierForTableGroup [Group.repertoire.{element}.group] for NavigablePath [Group.repertoire.{element}.group] 
2023-11-25 23:00:44,418 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 23:00:44,418 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  Row insert: update songs set group_id=? where song_id=?
2023-11-25 23:00:44,419 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  Row delete: update songs set group_id=null where group_id=? and song_id=?
2023-11-25 23:00:44,419 DEBUG o.h.o.j.mutation [JavaFX Application Thread]  One-shot delete: update songs set group_id=null where group_id=?
2023-11-25 23:00:44,419 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:00:44,419 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@12cc04a5] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 23:00:44,419 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 23:00:44,421 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@733cd588] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 23:00:44,421 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 23:00:44,466 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:00:44,466 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 23:00:44,475 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 23:00:44,476 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 23:00:44,484 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:00:44,484 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:00:44,485 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@35132ae9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2473d721]
2023-11-25 23:00:44,487 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 23:00:44,487 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 23:00:44,488 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:00:44,489 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 23:00:44,494 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@a070894
2023-11-25 23:00:44,494 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: cbfe15aa-5862-43d9-8207-6f95c33435f1 (<unnamed>)
2023-11-25 23:00:44,494 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 23:00:44,494 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 23:00:44,564 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 23:00:44,567 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 23:00:44,571 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 23:00:44,571 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 23:00:44,577 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 23:00:44,807 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 23:00:44,857 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 23:00:44,867 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 23:00:44,889 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(38291806110800)`
            <- [root] - `Group(38291806110800)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(38291806110800)`
          <- [root] - `Group(38291806110800)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 23:00:44,974 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:00:44,974 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(38291806110800))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:00:44,986 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(38291806110800)]
 |  +-SelectEagerCollectionFetch [Group(38291806110800).listOfMembers]
 |  +-BasicFetch [Group(38291806110800).mainGenre]
 |  +-BasicFetch [Group(38291806110800).name]
 |  +-BasicFetch [Group(38291806110800).placeInChart]
 |  +-DelayedCollectionFetch [Group(38291806110800).repertoire]
 |  +-SelectEagerCollectionFetch [Group(38291806110800).tours]
 |  \-BasicFetch [Group(38291806110800).yearOfFoundation]

2023-11-25 23:00:44,986 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(38291806110800)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 23:00:45,008 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 23:00:45,033 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,034 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38291806110800).listOfMembers -> SelectEagerCollectionInitializer(Group(38291806110800).listOfMembers)@801985501 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,035 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38291806110800).repertoire -> DelayedCollectionInitializer(Group(38291806110800).repertoire)@1009680988 (PluralAttribute(Group.repertoire))
2023-11-25 23:00:45,035 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38291806110800).tours -> SelectEagerCollectionInitializer(Group(38291806110800).tours)@559441523 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,035 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38291806110800) -> EntityResultInitializer(Group(38291806110800))@796991559 (SingleTableEntityPersister(Group))
2023-11-25 23:00:45,047 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 23:00:45,069 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 23:00:45,070 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 1
2023-11-25 23:00:45,073 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#1
2023-11-25 23:00:45,073 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 23:00:45,073 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#1
2023-11-25 23:00:45,073 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#1
2023-11-25 23:00:45,076 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#1] : 355117979
2023-11-25 23:00:45,091 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:00:45,091 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 23:00:45,091 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:00:45,091 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 23:00:45,099 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#1
2023-11-25 23:00:45,100 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,100 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 2
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#2
2023-11-25 23:00:45,101 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#2
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#2
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#2] : 1396600865
2023-11-25 23:00:45,101 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:00:45,101 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 23:00:45,101 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:00:45,101 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#2
2023-11-25 23:00:45,101 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,101 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,101 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 3
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#3
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#3
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#3
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#3] : 2085223849
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#3
2023-11-25 23:00:45,102 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 4
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#4
2023-11-25 23:00:45,102 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 23:00:45,102 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#4
2023-11-25 23:00:45,103 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#4
2023-11-25 23:00:45,103 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#4] : 428503369
2023-11-25 23:00:45,103 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:00:45,103 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 23:00:45,103 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:00:45,103 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:00:45,103 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#4
2023-11-25 23:00:45,103 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 23:00:45,104 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 5
2023-11-25 23:00:45,104 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#5
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 23:00:45,104 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#5
2023-11-25 23:00:45,104 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#5
2023-11-25 23:00:45,104 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#5] : 698044494
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:00:45,104 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#5
2023-11-25 23:00:45,104 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,104 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 23:00:45,105 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 6
2023-11-25 23:00:45,105 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#6
2023-11-25 23:00:45,105 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 23:00:45,105 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#6
2023-11-25 23:00:45,105 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#6
2023-11-25 23:00:45,105 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#6] : 1118649396
2023-11-25 23:00:45,105 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 23:00:45,105 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 23:00:45,105 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 23:00:45,105 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 23:00:45,105 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#6
2023-11-25 23:00:45,106 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,106 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 23:00:45,106 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 7
2023-11-25 23:00:45,106 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#7
2023-11-25 23:00:45,106 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 23:00:45,106 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#7
2023-11-25 23:00:45,106 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#7
2023-11-25 23:00:45,106 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#7] : 1742270852
2023-11-25 23:00:45,106 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 23:00:45,106 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 23:00:45,106 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:00:45,106 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:00:45,107 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#7
2023-11-25 23:00:45,107 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,107 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 23:00:45,107 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 8
2023-11-25 23:00:45,108 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#8
2023-11-25 23:00:45,108 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 23:00:45,108 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#8
2023-11-25 23:00:45,108 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#8
2023-11-25 23:00:45,108 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#8] : 1586364084
2023-11-25 23:00:45,108 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:00:45,108 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 23:00:45,108 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 23:00:45,108 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:00:45,108 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#8
2023-11-25 23:00:45,108 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,108 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 23:00:45,108 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 9
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#9
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#9
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#9
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#9] : 1458223792
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#9
2023-11-25 23:00:45,109 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 11
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#11
2023-11-25 23:00:45,109 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#11
2023-11-25 23:00:45,109 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#11
2023-11-25 23:00:45,110 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#11] : 1161237604
2023-11-25 23:00:45,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 23:00:45,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 23:00:45,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 23:00:45,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:00:45,110 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#11
2023-11-25 23:00:45,110 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 23:00:45,110 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 12
2023-11-25 23:00:45,110 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#12
2023-11-25 23:00:45,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 23:00:45,110 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#12
2023-11-25 23:00:45,110 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#12
2023-11-25 23:00:45,111 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#12] : 1679170195
2023-11-25 23:00:45,111 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 23:00:45,111 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 23:00:45,111 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:00:45,111 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 23:00:45,111 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#12
2023-11-25 23:00:45,111 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,111 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 23:00:45,111 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 13
2023-11-25 23:00:45,111 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#13
2023-11-25 23:00:45,111 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 23:00:45,111 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#13
2023-11-25 23:00:45,111 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#13
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#13] : 665998977
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#13
2023-11-25 23:00:45,112 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 14
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#14
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#14
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#14
2023-11-25 23:00:45,112 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#14] : 148994824
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 23:00:45,112 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:00:45,114 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:00:45,114 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#14
2023-11-25 23:00:45,114 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,114 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 23:00:45,114 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 15
2023-11-25 23:00:45,114 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#15
2023-11-25 23:00:45,114 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 23:00:45,114 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#15
2023-11-25 23:00:45,114 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#15
2023-11-25 23:00:45,114 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#15] : 2028941947
2023-11-25 23:00:45,115 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 23:00:45,115 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 23:00:45,115 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:00:45,115 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:00:45,115 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#15
2023-11-25 23:00:45,115 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,115 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 23:00:45,115 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 16
2023-11-25 23:00:45,115 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#16
2023-11-25 23:00:45,115 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#16
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#16
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#16] : 898570222
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#16
2023-11-25 23:00:45,116 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 17
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#17
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#17
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#17
2023-11-25 23:00:45,116 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#17] : 223893484
2023-11-25 23:00:45,116 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 23:00:45,117 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 23:00:45,117 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:00:45,117 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 23:00:45,117 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#17
2023-11-25 23:00:45,117 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,117 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 23:00:45,117 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 21
2023-11-25 23:00:45,117 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#21
2023-11-25 23:00:45,117 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 23:00:45,117 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#21
2023-11-25 23:00:45,117 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#21
2023-11-25 23:00:45,117 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#21] : 1969420587
2023-11-25 23:00:45,117 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 23:00:45,118 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 23:00:45,118 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 23:00:45,118 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 23:00:45,118 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#21
2023-11-25 23:00:45,118 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,118 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 23:00:45,118 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38291806110800)): 22
2023-11-25 23:00:45,118 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).listOfMembers#22
2023-11-25 23:00:45,119 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 23:00:45,119 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (DelayedCollectionInitializer) Current row collection key : Group(38291806110800).repertoire#22
2023-11-25 23:00:45,119 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38291806110800).tours#22
2023-11-25 23:00:45,119 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38291806110800)#22] : 175162030
2023-11-25 23:00:45,119 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 23:00:45,119 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 23:00:45,119 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:00:45,119 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:00:45,119 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38291806110800)#22
2023-11-25 23:00:45,119 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7db04235
2023-11-25 23:00:45,130 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,130 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,132 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,141 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,142 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2048257378 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,143 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@341254541 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,144 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@911293499 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,144 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,153 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 23:00:45,154 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,154 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,155 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,155 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,155 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1432514039 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,155 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@512786979 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,155 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1813143652 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,155 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,159 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 23:00:45,159 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,160 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,160 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,160 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,160 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1799162439 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,160 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@349394436 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,160 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@92659109 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,160 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,163 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 23:00:45,163 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,163 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,164 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,164 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,164 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1530948866 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,164 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1887697722 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,164 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@792099495 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,164 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,166 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 23:00:45,166 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,166 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,166 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,166 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,167 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@645280046 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,167 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@973702149 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,167 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@868330596 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,167 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,168 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 23:00:45,170 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,170 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,170 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,170 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,170 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@28211537 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,171 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1068648332 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,171 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@360860160 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,171 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,173 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 23:00:45,174 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,174 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,174 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,175 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,175 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@850286909 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,175 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@897304354 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,175 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@51206834 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,175 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,177 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 23:00:45,177 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,177 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,177 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,178 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,178 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1491422226 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,178 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@835994998 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,178 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@447704156 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,178 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,179 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 23:00:45,179 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,179 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,179 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,179 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,179 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@777076011 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,181 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1342011697 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,181 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1395297238 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,181 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,183 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 23:00:45,183 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,183 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,183 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,183 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,183 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@80537737 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,184 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@62892029 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,184 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@465766314 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,184 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,186 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 23:00:45,186 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,186 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,187 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,187 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,187 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1199657055 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,187 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1149034834 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,187 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@994722583 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,187 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,189 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 23:00:45,189 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,189 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,190 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,190 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,190 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@271433929 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,191 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2031512352 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,191 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@876620531 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,191 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,193 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 23:00:45,193 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,193 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,194 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,194 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,194 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1964063191 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,194 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1077121588 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,194 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@213309996 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,194 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,196 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 23:00:45,196 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,197 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,197 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,197 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,197 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@859023226 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,197 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@158231690 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,197 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1767219215 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,197 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,199 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 23:00:45,199 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,199 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,199 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,201 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,201 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@991750749 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,201 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2139975913 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,201 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1162621580 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,201 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,203 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 23:00:45,204 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,204 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,204 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,204 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,204 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@707617179 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,204 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@248638976 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,204 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1681835745 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,204 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,207 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 23:00:45,208 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,208 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,209 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,209 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,209 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@5092926 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,209 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@316043544 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,209 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@960411909 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,209 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,210 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 23:00:45,211 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,211 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,211 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,211 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,211 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@454870461 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,212 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1462153546 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,212 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@343525917 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,212 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,214 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 23:00:45,214 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,214 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,214 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,214 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,214 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@684843685 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,215 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1914895488 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,215 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1488602359 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,215 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,216 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 23:00:45,217 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,217 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,217 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,217 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,217 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@761269404 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,217 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@662136891 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,217 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1239030530 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,218 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,219 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 23:00:45,219 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,219 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,220 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,220 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,220 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@699705952 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,220 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@816821855 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,220 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@372715333 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,220 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,224 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 23:00:45,224 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,225 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,225 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,226 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,226 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@319067239 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,226 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1013374021 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,226 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@305020523 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,226 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,228 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 23:00:45,228 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,228 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,229 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,229 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,229 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1467600054 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,229 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@885488980 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,229 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1669256371 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,229 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,230 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 23:00:45,231 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,231 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,231 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,231 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,231 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@359886441 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,231 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@4062008 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,231 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@614820376 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,231 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,233 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 23:00:45,233 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,234 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,234 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,234 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,234 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1401612150 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,234 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1559274165 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,234 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@373952151 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,234 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,236 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 23:00:45,236 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,236 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,236 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,237 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,237 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2122902580 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,237 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@955284420 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,237 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@343200099 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,237 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,239 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 23:00:45,240 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,240 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,240 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,240 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,240 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@288978098 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,240 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@594821183 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,240 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1441134693 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,240 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,243 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 23:00:45,243 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,243 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,243 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,243 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,243 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1150420844 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1045363019 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@607846518 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,244 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,245 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 23:00:45,246 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,246 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,246 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,246 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,246 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1250720690 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,247 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@910752293 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,247 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@85027930 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,247 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,248 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 23:00:45,249 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,249 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,249 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,249 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,249 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1412982295 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,249 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1522901878 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,249 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@313599642 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,249 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,251 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 23:00:45,251 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,251 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,252 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,252 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,252 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1455021744 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,252 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1302832907 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,252 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@90153471 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,252 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,254 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 23:00:45,255 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,255 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,256 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,256 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,256 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1282031756 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,256 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@876761255 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,256 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@431151842 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,256 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,259 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:00:45,259 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 23:00:45,259 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,259 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:00:45,259 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,260 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 873260662
2023-11-25 23:00:45,262 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1359542080
2023-11-25 23:00:45,262 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,262 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 23:00:45,262 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 23:00:45,262 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 23:00:45,262 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 23:00:45,263 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1359542080
2023-11-25 23:00:45,264 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@53fdecc9
2023-11-25 23:00:45,265 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:00:45,265 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 23:00:45,265 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,266 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:00:45,266 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,266 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 1542125860
2023-11-25 23:00:45,266 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1359542080
2023-11-25 23:00:45,266 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1359542080
2023-11-25 23:00:45,266 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:00:45,266 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 23:00:45,266 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 23:00:45,266 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 23:00:45,266 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 23:00:45,267 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1359542080
2023-11-25 23:00:45,267 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@53fdecc9
2023-11-25 23:00:45,267 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 23:00:45,267 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,267 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,268 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,268 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,268 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1398999625 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,268 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2140712639 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,268 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1128238625 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,268 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,270 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 23:00:45,270 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,270 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,271 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,271 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,271 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1044233510 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,271 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@21787206 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,272 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1299559264 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,272 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,275 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 23:00:45,275 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:00:45,276 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,276 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,277 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,277 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@675425221 (ToOneAttributeMapping(NavigableRole[Tour.group])@1272787650)
2023-11-25 23:00:45,277 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1212965662 (EntityCollectionPart(Group.tours#{element})@1668985803)
2023-11-25 23:00:45,277 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@516134841 (PluralAttribute(Group.tours))
2023-11-25 23:00:45,277 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:00:45,279 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 23:00:45,279 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:00:45,279 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:00:45,279 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:00:45,279 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:00:45,279 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@866951134 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@1577354112)
2023-11-25 23:00:45,281 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@827373645 (EntityCollectionPart(Group.listOfMembers#{element})@718908701)
2023-11-25 23:00:45,281 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@581961118 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:00:45,281 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:00:45,283 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 23:00:45,283 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 23:00:45,284 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 23:00:45,299 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (uninitialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (uninitialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (uninitialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (uninitialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (uninitialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (uninitialized)
2023-11-25 23:00:45,311 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (uninitialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (uninitialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (uninitialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (uninitialized)
2023-11-25 23:00:45,312 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (uninitialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (uninitialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (uninitialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (uninitialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (uninitialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (uninitialized)
2023-11-25 23:00:45,313 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 23:00:45,314 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 23:00:45,314 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (uninitialized)
2023-11-25 23:00:45,314 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 23:00:45,314 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 23:00:45,314 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (uninitialized)
2023-11-25 23:00:45,314 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 23:00:45,317 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 20 objects
2023-11-25 23:00:45,317 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 23:00:45,318 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 23:00:45,319 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,319 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,319 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,319 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,319 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,320 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,321 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 23:00:45,321 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,321 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,321 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,321 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1968, name=Led Zepellin, mainGenre=Rock, id=4, repertoire=<uninitialized>, tours=[]}
2023-11-25 23:00:45,324 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:00:45,326 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:00:45,326 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 23:00:45,329 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 23:00:45,329 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 23:01:11,710 DEBUG o.h.o.c.pooling [Hibernate Connection Pool Validation Thread] Connection pool now considered primed; min-size will be maintained
2023-11-25 23:01:51,617 INFO mainLogger [main] Application started
2023-11-25 23:01:52,365 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 23:01:52,365 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 23:01:52,366 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 23:01:52,378 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 23:01:52,387 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 23:01:52,393 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 23:01:52,483 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 23:01:52,487 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 23:01:52,488 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 23:01:52,517 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 23:01:52,525 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 23:01:52,526 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 23:01:52,526 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:01:52,527 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:01:52,527 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 23:01:52,529 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 23:01:52,530 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 23:01:52,532 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:01:52,533 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 23:01:52,534 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 23:01:52,535 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:01:52,537 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 23:01:52,553 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 23:01:52,555 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 23:01:52,799 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:01:52,799 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 23:01:52,800 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@2f464c14
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:01:52,801 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:01:52,802 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 23:01:52,803 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3ffd0514
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 23:01:52,804 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2b4ca7fd
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@de97e22
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4354532d
2023-11-25 23:01:52,805 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6028c7e0
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 23:01:52,806 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cb6a3fa
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@64866098
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 23:01:52,807 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec7a8f2
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49929912
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 23:01:52,808 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5b703d77
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:01:52,809 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 23:01:52,810 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4cd5ca1f
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4cd5ca1f
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@14e265f9
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@14e265f9
2023-11-25 23:01:52,811 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5594e476
2023-11-25 23:01:52,818 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@70ced81b
2023-11-25 23:01:52,818 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70ced81b
2023-11-25 23:01:52,819 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@736a7fbd
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5df98f16
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@50e5a7c5
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@63c03119
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@43772d4b
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@52e78b0c
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2fc1c51a
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4d6b7102
2023-11-25 23:01:52,820 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@370c0091
2023-11-25 23:01:52,830 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1f68a1c3] into BootstrapContext; was [null]
2023-11-25 23:01:52,830 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6b64b2ed] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@30b3d362]
2023-11-25 23:01:52,946 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 23:01:52,946 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 23:01:52,980 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 23:01:52,989 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 23:01:52,989 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 23:01:52,989 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 23:01:52,989 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 23:01:52,994 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 23:01:52,994 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 23:01:53,512 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 23:01:53,512 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 23:01:53,512 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 23:01:53,593 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 23:01:53,609 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 23:01:53,609 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 23:01:53,642 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4719ded6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b57ea74)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7727273b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1419d16e)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d7f5255) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@698f0fc4)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27dfe331) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d97d405)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a1ddc18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bfd11b0)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53e3ad95) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10976c10)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@641e8f06) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70d62a4)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49cce8d5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6290fa10)
2023-11-25 23:01:53,643 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72663ffb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e126b51)
2023-11-25 23:01:53,645 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 23:01:53,646 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 23:01:53,646 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 23:01:53,651 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:01:53,651 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:01:53,658 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@384fa119
2023-11-25 23:01:53,658 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@736a7fbd`
2023-11-25 23:01:53,670 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:01:53,670 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:01:53,670 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:01:53,670 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:01:53,670 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:01:53,671 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:01:53,672 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:01:53,672 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:01:53,672 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:01:53,675 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69b301b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bb0436a]
2023-11-25 23:01:53,741 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 23:01:53,748 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 23:01:53,777 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 23:01:53,792 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 23:01:53,804 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 23:01:53,819 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:01:53,851 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 23:01:53,854 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:01:53,854 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:01:53,861 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:01:53,867 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 23:01:53,873 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:01:53,880 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 23:01:53,880 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:01:53,885 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 23:01:53,889 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,891 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,905 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 23:01:53,909 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,910 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 23:01:53,911 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 23:01:53,912 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,914 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,917 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 23:01:53,920 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 23:01:53,921 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 23:01:53,922 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 23:01:53,922 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 23:01:53,922 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 23:01:53,922 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 23:01:53,922 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 23:01:53,923 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 23:01:53,923 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:01:53,923 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 23:01:53,923 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:01:53,923 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 23:01:53,923 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:01:53,923 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 23:01:53,925 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 23:01:53,925 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 23:01:53,925 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 23:01:53,925 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 23:01:53,925 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 23:01:53,926 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,926 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,926 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 23:01:53,927 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 23:01:53,928 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,928 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,928 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 23:01:53,929 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,929 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 23:01:53,930 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 23:01:53,930 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,930 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:01:53,930 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 23:01:53,930 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 23:01:53,930 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 23:01:53,931 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 23:01:53,931 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 23:01:53,931 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 23:01:53,931 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 23:01:53,931 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 23:01:53,938 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 23:01:53,939 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 23:01:53,939 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 23:01:53,939 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:01:53,946 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 23:01:53,946 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:01:53,946 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:01:53,946 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:01:53,946 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:01:53,947 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 23:01:53,947 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 23:01:53,947 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 23:01:53,948 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 23:01:53,949 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:01:53,950 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,955 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:01:53,956 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 23:01:53,957 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:01:53,957 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 23:01:53,957 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:01:53,957 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 23:01:53,957 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:01:53,957 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 23:01:53,958 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 23:01:53,958 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 23:01:53,958 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 23:01:53,958 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 23:01:53,958 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 23:01:53,959 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 23:01:53,960 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 23:01:53,960 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 23:01:53,960 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:01:53,961 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 23:01:53,962 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:01:53,962 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:01:53,962 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:01:53,962 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 23:01:53,962 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:01:53,962 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 23:01:53,963 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:01:53,963 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 23:01:53,963 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_album')
2023-11-25 23:01:53,964 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property album with lazy=false
2023-11-25 23:01:53,964 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:album]
2023-11-25 23:01:53,964 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for album
2023-11-25 23:01:53,964 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_album
2023-11-25 23:01:53,964 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property album
2023-11-25 23:01:53,965 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 23:01:53,965 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 23:01:53,965 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 23:01:53,965 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 23:01:53,965 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 23:01:53,965 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:01:53,966 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 23:01:53,966 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:01:53,967 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 23:01:53,968 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 23:01:53,969 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 23:01:53,969 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:01:53,971 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 23:01:53,971 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:01:53,971 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:01:53,972 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:01:53,972 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 23:01:53,972 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:01:53,972 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 23:01:53,972 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:01:53,972 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 23:01:53,973 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 23:01:53,973 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 23:01:53,973 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 23:01:53,973 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 23:01:53,974 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 23:01:53,974 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 23:01:53,974 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 23:01:53,974 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 23:01:53,974 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 23:01:53,974 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 23:01:53,974 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 23:01:53,975 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 23:01:53,975 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 23:01:53,975 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 23:01:53,976 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 23:01:53,976 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:01:53,979 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 23:01:53,979 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:01:53,979 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:01:53,979 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 23:01:53,979 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 23:01:53,979 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 23:01:53,979 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 23:01:53,979 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 23:01:53,979 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 23:01:53,980 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 23:01:53,980 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 23:01:53,980 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 23:01:53,981 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 23:01:53,981 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 23:01:53,981 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 23:01:53,981 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 23:01:53,981 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 23:01:53,981 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 23:01:53,982 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 23:01:53,982 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 23:01:53,982 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 23:01:53,982 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:01:53,983 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:01:53,984 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:01:53,984 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 23:01:53,984 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:01:53,985 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 23:01:53,985 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:01:53,985 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 23:01:53,985 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:01:53,987 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:01:53,989 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for album
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 23:01:53,990 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 23:01:53,991 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 23:01:53,991 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 23:01:53,991 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 23:01:53,991 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:01:53,997 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 23:01:53,997 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 23:01:53,997 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 23:01:53,997 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 23:01:53,997 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 23:01:53,999 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 23:01:54,002 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 23:01:54,004 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 23:01:54,006 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 23:01:54,007 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 23:01:54,007 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 23:01:54,007 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 23:01:54,007 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 23:01:54,007 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Song.group
2023-11-25 23:01:54,008 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 23:01:54,008 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 23:01:54,008 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 23:01:54,008 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 23:01:54,008 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 23:01:54,008 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 23:01:54,008 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:01:54,012 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:01:54,013 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:01:54,030 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:01:54,030 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:01:54,030 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:01:54,228 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 23:01:54,490 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 23:01:54,565 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:01:54,566 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5a8048ff, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 23:01:54,571 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 23:01:54,581 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:01:54,630 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 23:01:54,631 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 23:01:54,632 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 23:01:54,633 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 23:01:54,634 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7f7e6a1f] under count; prior registration was null
2023-11-25 23:01:54,635 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@39196ac0] under every; prior registration was null
2023-11-25 23:01:54,635 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@31599547] under any; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 23:01:54,636 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 23:01:54,637 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 23:01:54,640 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f] under sinh; prior registration was null
2023-11-25 23:01:54,640 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9] under cosh; prior registration was null
2023-11-25 23:01:54,640 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@650aa11f] under tanh; prior registration was null
2023-11-25 23:01:54,640 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57a2a26d] under pi; prior registration was null
2023-11-25 23:01:54,640 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f4165f0] under log; prior registration was null
2023-11-25 23:01:54,641 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 23:01:54,641 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 23:01:54,641 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 23:01:54,641 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 23:01:54,641 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 23:01:54,641 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 23:01:54,642 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 23:01:54,642 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 23:01:54,642 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 23:01:54,642 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 23:01:54,642 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 23:01:54,642 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 23:01:54,643 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1e935709] under position; prior registration was null
2023-11-25 23:01:54,645 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3825cf0b] under overlay; prior registration was null
2023-11-25 23:01:54,646 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@36f6068e] under trim; prior registration was null
2023-11-25 23:01:54,647 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@57545989] under cast; prior registration was null
2023-11-25 23:01:54,647 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58f6ff3c] under collate; prior registration was null
2023-11-25 23:01:54,648 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@29b883bd] under extract; prior registration was null
2023-11-25 23:01:54,648 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 23:01:54,648 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 23:01:54,648 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6e32433] under ifnull; prior registration was null
2023-11-25 23:01:54,650 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 23:01:54,650 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 23:01:54,651 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@68c2f275] under pad; prior registration was null
2023-11-25 23:01:54,651 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3ec8efeb] under str; prior registration was null
2023-11-25 23:01:54,653 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5f1e3ba9] under format; prior registration was null
2023-11-25 23:01:54,654 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3ab3796] under timestampadd; prior registration was null
2023-11-25 23:01:54,655 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@68f544b7] under timestampdiff; prior registration was null
2023-11-25 23:01:54,655 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 23:01:54,655 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 23:01:54,656 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4afe40c7] under current_date; prior registration was null
2023-11-25 23:01:54,656 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30d1b35a] under current_time; prior registration was null
2023-11-25 23:01:54,656 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56f36832] under current_timestamp; prior registration was null
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d180798] under local_date; prior registration was null
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d88084] under local_time; prior registration was null
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@382ea806] under local_datetime; prior registration was null
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7551f5c9] under offset_datetime; prior registration was null
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@888183c] under instant; prior registration was null
2023-11-25 23:01:54,657 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@36b26655] under sql; prior registration was null
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f4165f0
2023-11-25 23:01:54,658 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@218a7893] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1e5d4cdd] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 23:01:54,659 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 23:01:54,660 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f2beb78] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1e935709
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 23:01:54,661 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 23:01:54,667 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@a9dc1a5] under trunc; prior registration was null
2023-11-25 23:01:54,667 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 23:01:54,667 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 23:01:54,667 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ba0a631] under bitand; prior registration was null
2023-11-25 23:01:54,667 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dcce1c7] under bitor; prior registration was null
2023-11-25 23:01:54,667 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b9b6c1f] under bitxor; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fef1420] under bitnot; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2130b6c2] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5f1e3ba9
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 23:01:54,668 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5d88084
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@382ea806
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b58b9fa] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57a2a26d
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b73d71a] under chr; prior registration was null
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4caa9640] under sysdate; prior registration was null
2023-11-25 23:01:54,669 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 23:01:54,670 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 23:01:54,670 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 23:01:54,670 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 23:01:54,670 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 23:01:54,670 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 23:01:54,672 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5bd11341] under rank; prior registration was null
2023-11-25 23:01:54,673 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@52d9c5c2] under dense_rank; prior registration was null
2023-11-25 23:01:54,673 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5c3da645] under percent_rank; prior registration was null
2023-11-25 23:01:54,673 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@59afbf5] under cume_dist; prior registration was null
2023-11-25 23:01:54,674 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@29c00281] under listagg; prior registration was null
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 23:01:54,676 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 23:01:54,677 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 23:01:54,678 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 23:01:54,679 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 23:01:54,680 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 23:01:54,682 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 23:01:54,683 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 23:01:54,684 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 23:01:54,685 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 23:01:54,694 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 23:01:54,887 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:01:54,887 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:01:55,156 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:01:55,218 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,218 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,218 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:01:55,218 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:01:55,242 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:01:55,244 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,245 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,245 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,245 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:01:55,245 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:01:55,266 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Song]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [album]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:01:55,267 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,267 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:01:55,268 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:01:55,295 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:01:55,299 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,299 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,299 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:01:55,299 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:01:55,322 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:101) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:01:55,324 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:01:55,352 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 23:01:55,357 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 23:01:55,358 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 23:01:55,359 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.repertoire
2023-11-25 23:01:55,359 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.repertoire
2023-11-25 23:01:55,359 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.repertoire
2023-11-25 23:01:55,359 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 23:01:55,359 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 23:01:55,359 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 23:01:55,409 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 23:01:55,409 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:01:55,409 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 23:01:55,409 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 23:01:55,416 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:01:55,416 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 23:01:55,416 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 23:01:55,417 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:01:55,417 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 23:01:55,417 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 23:01:55,417 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 23:01:55,417 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Song.group]
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:01:55,418 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:01:55,524 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 23:01:55,524 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 23:01:55,524 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 23:01:55,525 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 23:01:55,525 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 23:01:55,550 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:01:55,555 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:01:55,568 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:01:55,573 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@45155bc5] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:01:55,577 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:01:55,601 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-SelectEagerCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 23:01:55,607 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 23:01:55,623 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 23:01:55,623 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 23:01:55,623 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 23:01:55,623 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 23:01:55,623 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 23:01:55,623 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:01:55,623 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 23:01:55,629 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3fef0068] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 23:01:55,629 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 23:01:55,630 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:01:55,631 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@221fed5a] with identifierForTableGroup [GroupMember.group.repertoire] for NavigablePath [GroupMember.group.repertoire] 
2023-11-25 23:01:55,631 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.repertoire.{element})] with identifierForTableGroup [GroupMember.group.repertoire.{element}] for NavigablePath [GroupMember.group.repertoire.{element}] 
2023-11-25 23:01:55,632 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 23:01:55,632 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (r1 : GroupMember.group.repertoire) {
                  primaryTableReference : songs as r1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:01:55,633 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 23:01:55,633 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 23:01:55,633 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_album,song_duration,group_id,song_name) values (?,?,?,?)
2023-11-25 23:01:55,633 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_album=?,song_duration=?,group_id=?,song_name=? where song_id=?
2023-11-25 23:01:55,633 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 23:01:55,633 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 23:01:55,633 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 23:01:55,634 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45039671] with identifierForTableGroup [Song.group] for NavigablePath [Song.group] 
2023-11-25 23:01:55,634 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:01:55,634 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:01:55,634 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@79c55353] with identifierForTableGroup [Song.group.listOfMembers] for NavigablePath [Song.group.listOfMembers] 
2023-11-25 23:01:55,634 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song.group.listOfMembers.{element})] with identifierForTableGroup [Song.group.listOfMembers.{element}] for NavigablePath [Song.group.listOfMembers.{element}] 
2023-11-25 23:01:55,635 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.album]
 |  +-BasicFetch [Song.duration]
 |  +-EntityFetchJoinedImpl [Song.group]
 |  \-BasicFetch [Song.name]

2023-11-25 23:01:55,635 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Song.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Song.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:01:55,636 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 23:01:55,636 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 23:01:55,636 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 23:01:55,636 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 23:01:55,636 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 23:01:55,636 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 23:01:55,636 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 23:01:55,636 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 23:01:55,637 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 23:01:55,637 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 23:01:55,638 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 23:01:55,638 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 23:01:55,638 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 23:01:55,638 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 23:01:55,638 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:01:55,638 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 23:01:55,638 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a319780] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 23:01:55,638 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:01:55,639 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:01:55,639 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@595e1fbc] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 23:01:55,639 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 23:01:55,639 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 23:01:55,639 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:01:55,642 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:01:55,642 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@e9c6b9d] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:01:55,642 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:01:55,645 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1bb13552] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 23:01:55,646 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@27b9278e] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e798c4e] with identifierForTableGroup [Group.repertoire.{element}.group] for NavigablePath [Group.repertoire.{element}.group] 
2023-11-25 23:01:55,647 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@78e7a233] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 23:01:55,647 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 23:01:55,648 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@78ad74b8] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 23:01:55,648 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 23:01:55,704 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:01:55,705 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 23:01:55,715 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 23:01:55,716 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 23:01:55,724 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:01:55,724 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:01:55,727 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69b301b8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@21ef1ecb]
2023-11-25 23:01:55,729 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 23:01:55,729 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 23:01:55,730 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:01:55,730 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 23:01:55,736 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7ff451aa
2023-11-25 23:01:55,736 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: 73c879e2-69a5-486f-ba8d-263ffa222d45 (<unnamed>)
2023-11-25 23:01:55,736 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 23:01:55,736 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 23:01:55,830 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 23:01:55,834 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 23:01:55,838 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 23:01:55,838 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 23:01:55,844 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 23:01:56,052 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 23:01:56,099 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 23:01:56,111 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 23:01:56,128 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(38363049644000)`
            <- [root] - `Group(38363049644000)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(38363049644000)`
          <- [root] - `Group(38363049644000)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 23:01:56,193 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:01:56,193 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(38363049644000))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:01:56,204 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(38363049644000)]
 |  +-SelectEagerCollectionFetch [Group(38363049644000).listOfMembers]
 |  +-BasicFetch [Group(38363049644000).mainGenre]
 |  +-BasicFetch [Group(38363049644000).name]
 |  +-BasicFetch [Group(38363049644000).placeInChart]
 |  +-SelectEagerCollectionFetch [Group(38363049644000).repertoire]
 |  +-SelectEagerCollectionFetch [Group(38363049644000).tours]
 |  \-BasicFetch [Group(38363049644000).yearOfFoundation]

2023-11-25 23:01:56,204 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(38363049644000)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 23:01:56,221 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 23:01:56,241 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,242 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38363049644000).listOfMembers -> SelectEagerCollectionInitializer(Group(38363049644000).listOfMembers)@1539183350 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38363049644000).repertoire -> SelectEagerCollectionInitializer(Group(38363049644000).repertoire)@567220116 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38363049644000).tours -> SelectEagerCollectionInitializer(Group(38363049644000).tours)@1048857320 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38363049644000) -> EntityResultInitializer(Group(38363049644000))@1682771315 (SingleTableEntityPersister(Group))
2023-11-25 23:01:56,252 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 23:01:56,269 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 23:01:56,270 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 1
2023-11-25 23:01:56,272 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#1
2023-11-25 23:01:56,272 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#1
2023-11-25 23:01:56,272 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#1
2023-11-25 23:01:56,274 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#1] : 971817723
2023-11-25 23:01:56,283 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:01:56,283 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 23:01:56,283 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:01:56,283 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 23:01:56,288 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#1
2023-11-25 23:01:56,288 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,289 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 23:01:56,289 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 2
2023-11-25 23:01:56,289 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#2
2023-11-25 23:01:56,289 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#2
2023-11-25 23:01:56,289 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#2
2023-11-25 23:01:56,289 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#2] : 1934466950
2023-11-25 23:01:56,289 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:01:56,289 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 23:01:56,289 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#2
2023-11-25 23:01:56,290 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 3
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#3
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#3
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#3
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#3] : 283265907
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#3
2023-11-25 23:01:56,290 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,290 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 4
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#4
2023-11-25 23:01:56,290 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#4
2023-11-25 23:01:56,291 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#4
2023-11-25 23:01:56,291 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#4] : 257659752
2023-11-25 23:01:56,291 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:01:56,291 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 23:01:56,291 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:01:56,291 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:01:56,291 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#4
2023-11-25 23:01:56,291 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,291 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 23:01:56,292 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 5
2023-11-25 23:01:56,292 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#5
2023-11-25 23:01:56,292 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#5
2023-11-25 23:01:56,292 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#5
2023-11-25 23:01:56,292 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#5] : 256531131
2023-11-25 23:01:56,292 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:01:56,293 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 23:01:56,293 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:01:56,293 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:01:56,293 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#5
2023-11-25 23:01:56,293 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,293 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 23:01:56,293 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 6
2023-11-25 23:01:56,293 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#6
2023-11-25 23:01:56,293 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#6
2023-11-25 23:01:56,293 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#6
2023-11-25 23:01:56,293 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#6] : 1919952033
2023-11-25 23:01:56,294 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 23:01:56,294 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 23:01:56,294 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 23:01:56,294 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 23:01:56,294 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#6
2023-11-25 23:01:56,294 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,294 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 23:01:56,294 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 7
2023-11-25 23:01:56,294 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#7
2023-11-25 23:01:56,294 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#7
2023-11-25 23:01:56,294 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#7
2023-11-25 23:01:56,294 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#7] : 217605221
2023-11-25 23:01:56,294 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:01:56,295 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#7
2023-11-25 23:01:56,295 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 23:01:56,295 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 8
2023-11-25 23:01:56,295 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#8
2023-11-25 23:01:56,295 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#8
2023-11-25 23:01:56,295 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#8
2023-11-25 23:01:56,295 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#8] : 1908875954
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 23:01:56,295 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 23:01:56,296 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#8
2023-11-25 23:01:56,296 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,296 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 9
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#9
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#9
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#9
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#9] : 1459520752
2023-11-25 23:01:56,296 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:01:56,296 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 23:01:56,296 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 23:01:56,296 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 23:01:56,296 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#9
2023-11-25 23:01:56,296 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,297 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 11
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#11
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#11
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#11
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#11] : 1390180016
2023-11-25 23:01:56,297 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 23:01:56,297 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 23:01:56,297 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 23:01:56,297 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#11
2023-11-25 23:01:56,297 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,297 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 23:01:56,297 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 12
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#12
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#12
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#12
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#12] : 67953590
2023-11-25 23:01:56,298 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 23:01:56,298 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 23:01:56,298 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:01:56,298 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#12
2023-11-25 23:01:56,298 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,298 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 13
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#13
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#13
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#13
2023-11-25 23:01:56,298 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#13] : 1070612427
2023-11-25 23:01:56,298 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#13
2023-11-25 23:01:56,299 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 14
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#14
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#14
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#14
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#14] : 168531096
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:01:56,299 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:01:56,299 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#14
2023-11-25 23:01:56,300 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,300 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 15
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#15
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#15
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#15
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#15] : 2122980162
2023-11-25 23:01:56,300 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 23:01:56,300 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 23:01:56,300 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:01:56,300 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#15
2023-11-25 23:01:56,300 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,300 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 16
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#16
2023-11-25 23:01:56,300 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#16
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#16
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#16] : 1268408535
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#16
2023-11-25 23:01:56,301 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 17
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#17
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#17
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#17
2023-11-25 23:01:56,301 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#17] : 372638256
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:01:56,301 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 23:01:56,302 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#17
2023-11-25 23:01:56,302 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,302 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 23:01:56,302 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 21
2023-11-25 23:01:56,302 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#21
2023-11-25 23:01:56,302 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#21
2023-11-25 23:01:56,302 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#21
2023-11-25 23:01:56,302 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#21] : 709094337
2023-11-25 23:01:56,302 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 23:01:56,302 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 23:01:56,303 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 23:01:56,303 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 23:01:56,303 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#21
2023-11-25 23:01:56,304 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,304 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 23:01:56,304 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38363049644000)): 22
2023-11-25 23:01:56,304 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).listOfMembers#22
2023-11-25 23:01:56,306 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).repertoire#22
2023-11-25 23:01:56,306 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38363049644000).tours#22
2023-11-25 23:01:56,306 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38363049644000)#22] : 1497107627
2023-11-25 23:01:56,306 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 23:01:56,306 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 23:01:56,306 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:01:56,306 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:01:56,307 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38363049644000)#22
2023-11-25 23:01:56,307 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@500cb040
2023-11-25 23:01:56,315 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,316 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,317 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,326 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@769020370 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1419939097 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@912604324 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,327 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,333 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 23:01:56,333 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,333 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,333 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,334 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,334 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@2040228986 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,334 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@643631151 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,334 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1770179451 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,334 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,340 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#22]
2023-11-25 23:01:56,340 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,340 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,341 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,341 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,341 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1616924978 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,341 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1028902585 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,341 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1961912325 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,341 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,344 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 23:01:56,344 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,344 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,344 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,345 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,345 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1278688956 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,345 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@997246847 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,345 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1068922939 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,345 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,347 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 23:01:56,348 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,348 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,348 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,348 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,348 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@2031668850 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,348 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1977812682 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,348 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@159489672 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,349 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,351 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#21]
2023-11-25 23:01:56,351 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,351 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,351 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,351 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,351 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1789337351 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,351 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1868019973 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,352 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@168549364 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,352 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,353 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 23:01:56,354 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,354 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,355 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,355 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,355 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1909200484 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,355 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@634173394 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,356 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@931535128 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,356 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,357 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 23:01:56,357 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,357 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,357 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,358 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,358 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1301571694 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,358 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1247671837 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,358 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@360531684 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,358 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,360 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#17]
2023-11-25 23:01:56,360 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,360 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,360 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,360 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,361 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1652028946 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,361 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@499308254 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,361 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@40249617 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,361 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,362 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 23:01:56,363 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,363 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,363 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,363 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,363 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1810640041 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,363 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1492237924 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,364 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@724532232 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,364 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,365 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 23:01:56,366 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,366 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,366 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,366 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,366 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@251753123 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,366 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1604223095 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,366 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@656800482 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,366 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,368 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#16]
2023-11-25 23:01:56,368 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,368 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,368 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,368 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,368 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1695590012 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,368 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1844097750 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,368 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@281698238 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,370 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,372 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 23:01:56,372 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,372 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,372 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,373 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,373 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@910297348 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,373 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1949800413 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,373 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@843298103 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,373 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,375 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 23:01:56,375 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,375 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,375 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,375 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,376 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1638216403 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,376 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1323358685 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,376 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@117194675 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,376 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,377 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#15]
2023-11-25 23:01:56,378 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,378 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,378 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,378 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,378 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@159409922 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,378 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1852227622 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,378 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@140094554 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,378 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,379 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 23:01:56,379 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,379 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,381 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,381 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,381 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@684127254 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,381 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1840817704 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,381 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1245424329 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,381 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,383 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 23:01:56,383 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,383 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,383 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,383 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,383 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1188032311 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,383 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1370847429 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,383 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@493121206 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,384 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,385 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#14]
2023-11-25 23:01:56,385 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,385 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,386 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,386 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,386 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1149174471 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,386 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2052113696 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,386 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@869811254 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,386 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,389 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 23:01:56,389 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,389 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,389 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,390 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,390 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2084912789 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,390 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@223161567 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,390 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@528119327 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,390 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,392 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 23:01:56,392 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,393 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,393 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,393 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,393 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@713467646 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,393 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1719727935 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,394 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@377470977 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,394 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,396 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#13]
2023-11-25 23:01:56,396 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,396 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,396 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,397 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,397 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1816520895 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,397 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@80892670 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,397 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@263986588 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,397 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,398 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 23:01:56,398 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,399 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,399 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,399 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,399 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@967551075 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,399 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1452540471 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,399 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1613142922 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,400 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,402 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 23:01:56,402 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,402 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,403 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,403 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,403 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@530188491 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,403 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1270098553 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,403 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1844387144 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,403 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,406 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#12]
2023-11-25 23:01:56,406 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,406 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,407 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,407 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,407 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1751861406 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,407 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2105216390 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,407 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@506334445 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,407 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,408 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 23:01:56,410 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,410 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,410 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,410 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,411 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@968732074 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,411 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1469749012 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,411 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1761970853 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,411 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,413 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 23:01:56,413 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,413 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,414 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,414 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,414 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1584073333 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,414 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@461300671 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,414 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1670138609 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,414 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,416 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#11]
2023-11-25 23:01:56,417 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,417 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,417 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,417 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,417 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@81601831 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,417 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@84360335 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,418 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@224338787 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,418 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,419 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 23:01:56,419 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,420 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,420 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,420 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,420 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@641052571 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,421 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1376109573 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,421 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@989364024 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,421 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,423 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 23:01:56,423 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,423 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,424 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,424 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,424 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@127651700 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,424 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@2120446208 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,424 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@257578788 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,424 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,426 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#9]
2023-11-25 23:01:56,427 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,427 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,427 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,427 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,427 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1477141702 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,427 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@87419796 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,427 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@39498123 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,428 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,429 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 23:01:56,430 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,430 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,430 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,430 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,430 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@971536046 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,430 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1860783857 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,430 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1471788855 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,431 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,432 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 23:01:56,433 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,433 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,433 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,434 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,434 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1081498857 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,434 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1517046751 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,434 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@516061792 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,434 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,436 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#8]
2023-11-25 23:01:56,436 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,436 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,436 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,436 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,436 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1352785298 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,436 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1564327068 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,436 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@26475083 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,438 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,439 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 23:01:56,440 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,440 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,440 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,440 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,440 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1577044422 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,440 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1126183312 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,440 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1518639984 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,440 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,443 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 23:01:56,443 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,443 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,443 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,444 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,444 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1681669017 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,444 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@446522229 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,444 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@470594833 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,444 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,445 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#7]
2023-11-25 23:01:56,446 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,446 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,446 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,446 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,446 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1609079736 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,446 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@649398633 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,446 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1536953386 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,446 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,448 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 23:01:56,448 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,449 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,449 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,449 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,449 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@512962377 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,449 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@626367981 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,449 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1091825253 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,449 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,451 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 23:01:56,451 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,451 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,451 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,451 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,451 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1135787275 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,451 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@487326686 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,451 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@733181379 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,451 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,453 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#6]
2023-11-25 23:01:56,453 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,453 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,454 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,454 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,454 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1162747031 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,454 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1969448080 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,454 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1896801097 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,454 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,456 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 23:01:56,456 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,457 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,457 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,457 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,457 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@494647336 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,457 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@459867237 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,457 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@890545959 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,457 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,459 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 23:01:56,460 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,460 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,460 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,460 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,460 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1164952448 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,460 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1439857045 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,461 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1687672950 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,461 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,463 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#5]
2023-11-25 23:01:56,463 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,463 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,465 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,465 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,465 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@980057362 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,465 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1625577025 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,465 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@2007166660 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,465 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,467 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 23:01:56,468 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,468 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,468 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,468 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,468 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@904456960 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,468 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1432151991 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,468 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2011634984 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,468 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,470 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 23:01:56,470 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,471 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,471 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,471 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,471 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@670402178 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,471 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1756676361 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,471 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@687760227 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,472 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,474 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#4]
2023-11-25 23:01:56,474 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,474 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,474 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,475 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,475 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1301724949 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,475 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@371730623 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,475 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1746894750 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,475 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,477 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 23:01:56,477 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,477 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,478 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,478 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,478 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1621612633 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,478 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1943513180 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,478 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1691518771 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,479 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,482 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 23:01:56,482 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,483 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,483 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,484 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,484 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@678256829 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,484 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1484165532 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,484 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@238351822 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,484 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,487 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:01:56,487 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 1
2023-11-25 23:01:56,487 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,487 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:01:56,487 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,487 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#1] : 1927766787
2023-11-25 23:01:56,489 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@1625575703
2023-11-25 23:01:56,490 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,490 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:01:56,490 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [100]
2023-11-25 23:01:56,490 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [lalala]
2023-11-25 23:01:56,491 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#1
2023-11-25 23:01:56,491 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@1625575703
2023-11-25 23:01:56,491 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2d9ff823
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 2
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#2] : 1800231447
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.repertoire#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1625575703
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@1625575703
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [150]
2023-11-25 23:01:56,492 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [kakaka]
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#2
2023-11-25 23:01:56,492 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@1625575703
2023-11-25 23:01:56,492 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2d9ff823
2023-11-25 23:01:56,493 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#3]
2023-11-25 23:01:56,493 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,493 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,494 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,494 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,494 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@822561601 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,494 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@876086401 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,494 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1714728133 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,494 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,496 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:01:56,496 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 23:01:56,496 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,496 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:01:56,496 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,497 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 404144147
2023-11-25 23:01:56,497 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1671364647
2023-11-25 23:01:56,497 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,497 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 23:01:56,498 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 23:01:56,498 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 23:01:56,498 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 23:01:56,498 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1671364647
2023-11-25 23:01:56,498 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5b071550
2023-11-25 23:01:56,498 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:01:56,498 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 23:01:56,498 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,498 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:01:56,498 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,499 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 2054239929
2023-11-25 23:01:56,499 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1671364647
2023-11-25 23:01:56,499 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1671364647
2023-11-25 23:01:56,499 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:01:56,499 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 23:01:56,499 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 23:01:56,499 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 23:01:56,499 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 23:01:56,499 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1671364647
2023-11-25 23:01:56,499 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@5b071550
2023-11-25 23:01:56,499 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 23:01:56,500 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,500 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,500 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,500 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,501 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1618868915 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,501 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1321576695 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,501 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@755735018 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,501 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,503 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 23:01:56,503 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,503 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,504 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,504 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,504 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@846921678 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,504 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1137697954 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,504 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@2029532689 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,504 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,507 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#2]
2023-11-25 23:01:56,507 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,507 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,508 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,508 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,508 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@728151064 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,508 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@303515611 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,508 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1842662431 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,508 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,511 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 23:01:56,511 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:01:56,511 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,511 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,511 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,512 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1231735558 (ToOneAttributeMapping(NavigableRole[Tour.group])@1543412631)
2023-11-25 23:01:56,512 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@34951680 (EntityCollectionPart(Group.tours#{element})@690135187)
2023-11-25 23:01:56,512 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1671455443 (PluralAttribute(Group.tours))
2023-11-25 23:01:56,512 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:01:56,514 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 23:01:56,514 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:01:56,514 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,515 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,515 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,515 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1853528587 (ToOneAttributeMapping(NavigableRole[Song.group])@1503517615)
2023-11-25 23:01:56,515 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@237816813 (EntityCollectionPart(Group.repertoire#{element})@1272485574)
2023-11-25 23:01:56,515 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@56726886 (PluralAttribute(Group.repertoire))
2023-11-25 23:01:56,515 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:01:56,517 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#1]
2023-11-25 23:01:56,518 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:01:56,518 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:01:56,518 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:01:56,518 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:01:56,518 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@762154129 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@390602596)
2023-11-25 23:01:56,518 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@581498623 (EntityCollectionPart(Group.listOfMembers#{element})@377176633)
2023-11-25 23:01:56,519 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1813679613 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:01:56,519 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:01:56,521 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 23:01:56,521 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 23:01:56,522 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 23:01:56,534 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 23:01:56,548 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 23:01:56,548 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (initialized)
2023-11-25 23:01:56,548 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (initialized)
2023-11-25 23:01:56,549 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 23:01:56,551 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 23:01:56,552 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (initialized)
2023-11-25 23:01:56,553 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 23:01:56,553 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 23:01:56,553 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (initialized)
2023-11-25 23:01:56,553 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 23:01:56,553 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 23:01:56,554 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (initialized)
2023-11-25 23:01:56,555 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 23:01:56,556 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 23:01:56,557 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (initialized)
2023-11-25 23:01:56,558 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 23:01:56,563 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
2023-11-25 23:01:56,563 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 23:01:56,565 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=100, album=test, name=lalala, id=1, group=Group#3}
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=[], tours=[]}
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=[], tours=[]}
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=[], tours=[]}
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=[], tours=[]}
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=[], tours=[]}
2023-11-25 23:01:56,566 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=150, album=test, name=kakaka, id=2, group=Group#3}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=[Song#1, Song#2], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=[], tours=[]}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 23:01:56,567 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=[], tours=[]}
2023-11-25 23:01:56,568 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=[], tours=[]}
2023-11-25 23:01:56,568 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=[], tours=[]}
2023-11-25 23:01:56,568 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] More......
2023-11-25 23:01:56,570 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:01:56,572 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:01:56,573 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 23:01:56,575 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 23:01:56,575 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 23:02:23,524 DEBUG o.h.o.c.pooling [Hibernate Connection Pool Validation Thread] Connection pool now considered primed; min-size will be maintained
2023-11-25 23:04:34,927 INFO mainLogger [main] Application started
2023-11-25 23:04:35,942 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 23:04:35,942 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 23:04:35,943 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 23:04:35,954 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 23:04:35,962 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 23:04:35,969 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 23:04:36,085 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 23:04:36,088 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 23:04:36,091 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 23:04:36,144 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 23:04:36,156 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 23:04:36,157 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 23:04:36,159 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:04:36,159 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:04:36,160 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 23:04:36,163 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 23:04:36,163 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 23:04:36,165 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:04:36,166 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 23:04:36,167 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 23:04:36,168 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:04:36,169 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 23:04:36,190 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 23:04:36,191 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 23:04:36,570 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c959238
2023-11-25 23:04:36,571 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c959238
2023-11-25 23:04:36,572 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c959238
2023-11-25 23:04:36,572 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6c99a113
2023-11-25 23:04:36,572 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6c99a113
2023-11-25 23:04:36,572 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@237e6ca7
2023-11-25 23:04:36,572 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@237e6ca7
2023-11-25 23:04:36,573 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c90dbe5
2023-11-25 23:04:36,573 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c90dbe5
2023-11-25 23:04:36,573 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2cc4921d
2023-11-25 23:04:36,573 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2cc4921d
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2cc4921d
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@d742faf
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@d742faf
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@d742faf
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5dbf71f2
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5dbf71f2
2023-11-25 23:04:36,574 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@278ac653
2023-11-25 23:04:36,575 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@2f56ecc5
2023-11-25 23:04:36,575 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2f56ecc5
2023-11-25 23:04:36,575 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@373a7d7
2023-11-25 23:04:36,575 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@25e566aa
2023-11-25 23:04:36,575 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@542c841b
2023-11-25 23:04:36,575 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@542c841b
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@542c841b
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4c047a9f
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@4c047a9f
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4c047a9f
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@525721d7
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@525721d7
2023-11-25 23:04:36,576 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@525721d7
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5c89cd01
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5c89cd01
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c89cd01
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@6cb596d7
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@6cb596d7
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6cb596d7
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@30ac95c
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@30ac95c
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@68b80973
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@68b80973
2023-11-25 23:04:36,577 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@7a4b30a0
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@7a4b30a0
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7a4b30a0
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3a880210
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@6f9d6c34
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6f9d6c34
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@47460325
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@642bf55d
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@642bf55d
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@642bf55d
2023-11-25 23:04:36,578 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@1ec9f34a
2023-11-25 23:04:36,579 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@1ab1d06b
2023-11-25 23:04:36,579 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6d99a733
2023-11-25 23:04:36,579 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@56a336c0
2023-11-25 23:04:36,580 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@56a336c0
2023-11-25 23:04:36,580 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@721dcfd
2023-11-25 23:04:36,580 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@721dcfd
2023-11-25 23:04:36,581 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@138766fa
2023-11-25 23:04:36,581 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3387eb86
2023-11-25 23:04:36,581 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7c5dce00
2023-11-25 23:04:36,581 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@75922342
2023-11-25 23:04:36,581 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5d8a3bbc
2023-11-25 23:04:36,581 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@515d3050
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4362d9b5
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4362d9b5
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@278e6aa8
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@278e6aa8
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2bd5e23e
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2bd5e23e
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@13b288a4
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@13b288a4
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@46484416
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@46484416
2023-11-25 23:04:36,582 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@12c7ad5d
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16876929
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@117734f5
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@117734f5
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@159baa39
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a995092
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@177ab8c9
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3f02f64f
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3f02f64f
2023-11-25 23:04:36,583 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@778049f4
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76d8a56
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@4513c682
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4513c682
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@6d0be0e1
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6d0be0e1
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1831cb5d
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1831cb5d
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1831cb5d
2023-11-25 23:04:36,584 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7365dd37
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7365dd37
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7365dd37
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2819320f
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1a27c305
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@c5a983f
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@c5a983f
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@510b60e6
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@510b60e6
2023-11-25 23:04:36,585 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@510b60e6
2023-11-25 23:04:36,586 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@30e3a982
2023-11-25 23:04:36,586 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@14787b70
2023-11-25 23:04:36,586 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@4cbb92a0
2023-11-25 23:04:36,587 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4cbb92a0
2023-11-25 23:04:36,587 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@46bdd781
2023-11-25 23:04:36,587 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@46bdd781
2023-11-25 23:04:36,587 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@46bdd781
2023-11-25 23:04:36,588 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@6b3fd96d
2023-11-25 23:04:36,588 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6b3fd96d
2023-11-25 23:04:36,588 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3ccb9c81
2023-11-25 23:04:36,588 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3ccb9c81
2023-11-25 23:04:36,588 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2cf5372a
2023-11-25 23:04:36,589 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2cf5372a
2023-11-25 23:04:36,589 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4dcfcea
2023-11-25 23:04:36,589 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4dcfcea
2023-11-25 23:04:36,589 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@113da9ad
2023-11-25 23:04:36,589 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@113da9ad
2023-11-25 23:04:36,589 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@71f2009f
2023-11-25 23:04:36,600 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@767dd3c1
2023-11-25 23:04:36,600 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@767dd3c1
2023-11-25 23:04:36,605 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@25667b09
2023-11-25 23:04:36,605 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@605e7403
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4ca7f562
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5d97f0a1
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4b3f7629
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@58d2ed21
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2b2d0fbc
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@49ddf080
2023-11-25 23:04:36,606 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@79e349ac
2023-11-25 23:04:36,621 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2f0b4dda] into BootstrapContext; was [null]
2023-11-25 23:04:36,621 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@690e5d8e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3fd439a9]
2023-11-25 23:04:36,873 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 23:04:36,876 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 23:04:37,012 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 23:04:37,035 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 23:04:37,035 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 23:04:37,036 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 23:04:37,036 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 23:04:37,051 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 23:04:37,052 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 23:04:37,957 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 23:04:37,958 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 23:04:37,958 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 23:04:38,052 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 23:04:38,072 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 23:04:38,072 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 23:04:38,108 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@701439dd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63dcff87)
2023-11-25 23:04:38,108 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fe8ee20) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34a82c89)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65233110) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6187caf4)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39c6b10a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4cff0edf)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30a81de1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f27b16a)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63e50365) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57d87030)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@276f383f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75117159)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ea4bab5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ae904a1)
2023-11-25 23:04:38,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74197f03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@afc4360)
2023-11-25 23:04:38,111 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 23:04:38,111 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 23:04:38,112 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 23:04:38,115 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:04:38,115 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:04:38,121 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@78514017
2023-11-25 23:04:38,121 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@25667b09`
2023-11-25 23:04:38,132 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:04:38,132 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:04:38,132 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:04:38,132 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:04:38,132 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:04:38,132 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:04:38,134 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:04:38,134 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:04:38,134 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:04:38,136 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31707721] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2fec8a6d]
2023-11-25 23:04:38,218 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 23:04:38,225 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 23:04:38,263 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 23:04:38,280 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 23:04:38,290 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 23:04:38,306 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:04:38,342 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 23:04:38,346 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:04:38,347 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:04:38,359 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:04:38,368 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 23:04:38,377 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:04:38,383 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 23:04:38,384 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:04:38,389 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 23:04:38,395 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,396 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,412 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 23:04:38,416 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,417 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 23:04:38,418 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 23:04:38,421 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,421 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,425 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 23:04:38,429 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 23:04:38,430 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 23:04:38,431 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 23:04:38,431 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 23:04:38,431 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 23:04:38,431 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 23:04:38,431 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 23:04:38,432 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 23:04:38,432 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:04:38,432 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 23:04:38,432 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:04:38,432 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 23:04:38,432 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:04:38,433 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 23:04:38,434 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 23:04:38,434 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 23:04:38,434 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 23:04:38,434 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 23:04:38,434 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 23:04:38,435 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,435 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,435 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 23:04:38,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 23:04:38,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 23:04:38,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,436 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 23:04:38,437 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 23:04:38,437 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,438 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,438 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 23:04:38,439 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,440 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 23:04:38,440 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 23:04:38,440 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,440 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:04:38,440 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 23:04:38,440 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 23:04:38,441 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 23:04:38,441 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 23:04:38,441 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 23:04:38,441 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 23:04:38,441 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 23:04:38,442 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 23:04:38,451 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 23:04:38,451 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 23:04:38,451 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 23:04:38,452 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:04:38,459 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 23:04:38,460 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:04:38,460 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:04:38,460 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:04:38,460 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 23:04:38,460 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:04:38,460 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 23:04:38,460 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:04:38,460 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 23:04:38,461 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 23:04:38,461 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 23:04:38,461 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 23:04:38,461 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 23:04:38,461 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 23:04:38,461 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 23:04:38,463 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:04:38,463 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,468 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:04:38,469 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 23:04:38,469 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:04:38,469 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 23:04:38,469 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:04:38,470 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 23:04:38,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:04:38,470 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 23:04:38,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 23:04:38,470 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 23:04:38,471 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 23:04:38,471 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 23:04:38,471 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 23:04:38,472 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 23:04:38,472 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 23:04:38,472 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 23:04:38,473 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:04:38,474 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 23:04:38,474 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:04:38,474 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:04:38,474 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:04:38,474 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 23:04:38,474 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:04:38,475 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 23:04:38,475 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:04:38,475 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 23:04:38,475 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_album')
2023-11-25 23:04:38,475 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property album with lazy=false
2023-11-25 23:04:38,476 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:album]
2023-11-25 23:04:38,476 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for album
2023-11-25 23:04:38,476 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_album
2023-11-25 23:04:38,476 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property album
2023-11-25 23:04:38,476 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 23:04:38,476 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 23:04:38,476 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 23:04:38,477 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:04:38,477 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 23:04:38,479 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:04:38,479 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 23:04:38,479 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:04:38,480 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 23:04:38,481 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 23:04:38,482 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 23:04:38,482 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:04:38,485 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 23:04:38,485 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:04:38,485 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:04:38,486 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:04:38,486 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 23:04:38,486 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:04:38,486 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 23:04:38,486 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:04:38,486 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 23:04:38,487 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 23:04:38,487 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 23:04:38,487 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 23:04:38,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 23:04:38,488 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 23:04:38,488 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 23:04:38,488 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 23:04:38,488 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 23:04:38,488 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 23:04:38,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 23:04:38,488 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 23:04:38,490 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 23:04:38,490 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 23:04:38,491 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 23:04:38,491 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 23:04:38,491 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:04:38,493 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 23:04:38,494 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:04:38,494 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:04:38,494 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 23:04:38,494 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 23:04:38,494 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 23:04:38,495 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 23:04:38,495 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 23:04:38,495 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 23:04:38,495 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 23:04:38,496 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 23:04:38,496 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 23:04:38,496 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 23:04:38,496 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 23:04:38,496 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 23:04:38,497 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 23:04:38,497 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 23:04:38,497 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 23:04:38,497 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 23:04:38,498 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 23:04:38,498 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 23:04:38,498 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:04:38,498 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:04:38,499 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:04:38,499 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 23:04:38,499 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:04:38,499 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 23:04:38,499 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:04:38,499 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 23:04:38,499 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:04:38,502 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:04:38,504 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 23:04:38,504 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:04:38,504 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 23:04:38,504 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 23:04:38,504 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for album
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 23:04:38,505 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:04:38,513 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 23:04:38,513 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 23:04:38,513 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 23:04:38,514 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 23:04:38,514 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 23:04:38,514 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 23:04:38,518 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 23:04:38,520 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 23:04:38,523 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 23:04:38,523 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 23:04:38,524 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 23:04:38,524 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 23:04:38,524 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 23:04:38,524 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Song.group
2023-11-25 23:04:38,525 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 23:04:38,525 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 23:04:38,525 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 23:04:38,525 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 23:04:38,526 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 23:04:38,526 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 23:04:38,526 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:04:38,530 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:04:38,530 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:04:38,552 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:04:38,552 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:04:38,552 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:04:38,827 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 23:04:39,188 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 23:04:39,272 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:04:39,273 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@46294c10, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 23:04:39,279 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 23:04:39,288 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:04:39,347 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 23:04:39,347 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 23:04:39,349 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 23:04:39,350 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 23:04:39,352 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@35d10be5] under count; prior registration was null
2023-11-25 23:04:39,354 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@218d373e] under every; prior registration was null
2023-11-25 23:04:39,355 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2759e20c] under any; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 23:04:39,356 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 23:04:39,357 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 23:04:39,360 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@396c0a29] under sinh; prior registration was null
2023-11-25 23:04:39,361 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71761783] under cosh; prior registration was null
2023-11-25 23:04:39,361 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e36c73e] under tanh; prior registration was null
2023-11-25 23:04:39,361 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35a87a90] under pi; prior registration was null
2023-11-25 23:04:39,361 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ccc034e] under log; prior registration was null
2023-11-25 23:04:39,362 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 23:04:39,362 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 23:04:39,362 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 23:04:39,362 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 23:04:39,362 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 23:04:39,363 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 23:04:39,365 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@58aa090a] under position; prior registration was null
2023-11-25 23:04:39,367 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@64a5a068] under overlay; prior registration was null
2023-11-25 23:04:39,368 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@792d5a24] under trim; prior registration was null
2023-11-25 23:04:39,370 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6cca0028] under cast; prior registration was null
2023-11-25 23:04:39,370 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50863425] under collate; prior registration was null
2023-11-25 23:04:39,371 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3d646e7] under extract; prior registration was null
2023-11-25 23:04:39,372 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 23:04:39,372 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 23:04:39,373 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7e4ccbf] under ifnull; prior registration was null
2023-11-25 23:04:39,373 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 23:04:39,373 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 23:04:39,373 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2d113143] under pad; prior registration was null
2023-11-25 23:04:39,375 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@15b38a69] under str; prior registration was null
2023-11-25 23:04:39,378 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5e85c4cf] under format; prior registration was null
2023-11-25 23:04:39,379 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@64f15d18] under timestampadd; prior registration was null
2023-11-25 23:04:39,380 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@68d3aa52] under timestampdiff; prior registration was null
2023-11-25 23:04:39,380 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 23:04:39,380 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@214994e6] under current_date; prior registration was null
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5672687] under current_time; prior registration was null
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5baf9aa5] under current_timestamp; prior registration was null
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6607f9b4] under local_date; prior registration was null
2023-11-25 23:04:39,381 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b04bf36] under local_time; prior registration was null
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37ebe3cf] under local_datetime; prior registration was null
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10362d25] under offset_datetime; prior registration was null
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49a5acce] under instant; prior registration was null
2023-11-25 23:04:39,382 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4a326474] under sql; prior registration was null
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ccc034e
2023-11-25 23:04:39,383 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 23:04:39,384 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1514bfa9] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@750e4d3f] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 23:04:39,386 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 23:04:39,387 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7292f46d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@58aa090a
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 23:04:39,388 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 23:04:39,394 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@117fb3aa] under trunc; prior registration was null
2023-11-25 23:04:39,394 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 23:04:39,394 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 23:04:39,394 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f17e30b] under bitand; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2018a5c9] under bitor; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58547f56] under bitxor; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34da6515] under bitnot; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2445c73e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5e85c4cf
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@b04bf36
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@37ebe3cf
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41961892] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35a87a90
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a436139] under chr; prior registration was null
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 23:04:39,395 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5dd649a9] under sysdate; prior registration was null
2023-11-25 23:04:39,396 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 23:04:39,397 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 23:04:39,397 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 23:04:39,397 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 23:04:39,397 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 23:04:39,397 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 23:04:39,399 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@68301d00] under rank; prior registration was null
2023-11-25 23:04:39,399 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7db0c899] under dense_rank; prior registration was null
2023-11-25 23:04:39,399 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@97cb8e7] under percent_rank; prior registration was null
2023-11-25 23:04:39,399 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7ccf53b2] under cume_dist; prior registration was null
2023-11-25 23:04:39,400 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5f3c8ac] under listagg; prior registration was null
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 23:04:39,403 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 23:04:39,404 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 23:04:39,405 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 23:04:39,407 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 23:04:39,408 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 23:04:39,409 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 23:04:39,410 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 23:04:39,411 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 23:04:39,412 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 23:04:39,413 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 23:04:39,413 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 23:04:39,422 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 23:04:39,646 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:04:39,646 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:04:39,943 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:04:40,009 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,009 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,009 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:04:40,009 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:04:40,034 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:04:40,035 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,036 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,036 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,036 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:04:40,036 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:04:40,059 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Song]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [album]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:04:40,060 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,061 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:04:40,061 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:04:40,086 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:04:40,091 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,091 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,091 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:04:40,091 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:04:40,118 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:04:40,119 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:04:40,160 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 23:04:40,164 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 23:04:40,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 23:04:40,166 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.repertoire
2023-11-25 23:04:40,166 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.repertoire
2023-11-25 23:04:40,166 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.repertoire
2023-11-25 23:04:40,166 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 23:04:40,167 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 23:04:40,167 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 23:04:40,216 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 23:04:40,216 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:04:40,216 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 23:04:40,216 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 23:04:40,225 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:04:40,225 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 23:04:40,225 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 23:04:40,226 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:04:40,226 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 23:04:40,226 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 23:04:40,226 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Song.group]
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:04:40,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:04:40,326 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 23:04:40,326 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 23:04:40,327 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 23:04:40,327 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 23:04:40,328 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 23:04:40,355 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:04:40,359 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:04:40,372 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:04:40,378 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6493ea17] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:04:40,383 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:04:40,408 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-SelectEagerCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 23:04:40,414 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 23:04:40,429 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 23:04:40,429 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 23:04:40,429 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 23:04:40,429 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 23:04:40,431 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 23:04:40,431 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:04:40,431 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 23:04:40,435 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f8ff0b0] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 23:04:40,436 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 23:04:40,438 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:04:40,438 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@29d1bc90] with identifierForTableGroup [GroupMember.group.repertoire] for NavigablePath [GroupMember.group.repertoire] 
2023-11-25 23:04:40,438 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.repertoire.{element})] with identifierForTableGroup [GroupMember.group.repertoire.{element}] for NavigablePath [GroupMember.group.repertoire.{element}] 
2023-11-25 23:04:40,439 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 23:04:40,439 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (r1 : GroupMember.group.repertoire) {
                  primaryTableReference : songs as r1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:04:40,440 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 23:04:40,440 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 23:04:40,441 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_album,song_duration,group_id,song_name) values (?,?,?,?)
2023-11-25 23:04:40,441 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_album=?,song_duration=?,group_id=?,song_name=? where song_id=?
2023-11-25 23:04:40,441 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 23:04:40,441 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 23:04:40,441 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 23:04:40,441 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@48181258] with identifierForTableGroup [Song.group] for NavigablePath [Song.group] 
2023-11-25 23:04:40,441 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:04:40,441 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:04:40,441 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@55ddc0da] with identifierForTableGroup [Song.group.listOfMembers] for NavigablePath [Song.group.listOfMembers] 
2023-11-25 23:04:40,442 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song.group.listOfMembers.{element})] with identifierForTableGroup [Song.group.listOfMembers.{element}] for NavigablePath [Song.group.listOfMembers.{element}] 
2023-11-25 23:04:40,442 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.album]
 |  +-BasicFetch [Song.duration]
 |  +-EntityFetchJoinedImpl [Song.group]
 |  \-BasicFetch [Song.name]

2023-11-25 23:04:40,443 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Song.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Song.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:04:40,444 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 23:04:40,444 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 23:04:40,444 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 23:04:40,444 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 23:04:40,444 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 23:04:40,444 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 23:04:40,445 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 23:04:40,445 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 23:04:40,445 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 23:04:40,446 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 23:04:40,446 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 23:04:40,446 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 23:04:40,446 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 23:04:40,446 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 23:04:40,446 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:04:40,446 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 23:04:40,446 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@643365dc] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 23:04:40,446 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:04:40,447 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:04:40,447 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@29742427] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 23:04:40,447 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 23:04:40,447 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 23:04:40,447 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:04:40,450 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:04:40,450 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@545f5dcf] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:04:40,450 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:04:40,453 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b75d4ea] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 23:04:40,456 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 23:04:40,456 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:04:40,456 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7d992796] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 23:04:40,456 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 23:04:40,457 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51271970] with identifierForTableGroup [Group.repertoire.{element}.group] for NavigablePath [Group.repertoire.{element}.group] 
2023-11-25 23:04:40,457 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 23:04:40,457 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:04:40,457 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@42a204cc] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 23:04:40,457 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 23:04:40,457 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@618404be] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 23:04:40,457 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 23:04:40,509 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:04:40,509 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 23:04:40,524 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 23:04:40,525 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 23:04:40,533 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:04:40,533 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:04:40,535 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31707721] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1c4ebf85]
2023-11-25 23:04:40,536 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 23:04:40,536 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 23:04:40,538 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:04:40,538 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 23:04:40,544 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59952508
2023-11-25 23:04:40,544 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: 2a91e2ff-715b-41a1-a9a2-654ca94683d1 (<unnamed>)
2023-11-25 23:04:40,544 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 23:04:40,544 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 23:04:40,635 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 23:04:40,639 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 23:04:40,644 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 23:04:40,644 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 23:04:40,649 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 23:04:40,870 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 23:04:40,920 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 23:04:40,931 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 23:04:40,956 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(38527870188400)`
            <- [root] - `Group(38527870188400)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(38527870188400)`
          <- [root] - `Group(38527870188400)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 23:04:41,026 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:04:41,027 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(38527870188400))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:04:41,039 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(38527870188400)]
 |  +-SelectEagerCollectionFetch [Group(38527870188400).listOfMembers]
 |  +-BasicFetch [Group(38527870188400).mainGenre]
 |  +-BasicFetch [Group(38527870188400).name]
 |  +-BasicFetch [Group(38527870188400).placeInChart]
 |  +-SelectEagerCollectionFetch [Group(38527870188400).repertoire]
 |  +-SelectEagerCollectionFetch [Group(38527870188400).tours]
 |  \-BasicFetch [Group(38527870188400).yearOfFoundation]

2023-11-25 23:04:41,039 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(38527870188400)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 23:04:41,058 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 23:04:41,079 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,080 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38527870188400).listOfMembers -> SelectEagerCollectionInitializer(Group(38527870188400).listOfMembers)@449798442 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,080 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38527870188400).repertoire -> SelectEagerCollectionInitializer(Group(38527870188400).repertoire)@1317858300 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,081 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38527870188400).tours -> SelectEagerCollectionInitializer(Group(38527870188400).tours)@2129183234 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,081 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38527870188400) -> EntityResultInitializer(Group(38527870188400))@1092752754 (SingleTableEntityPersister(Group))
2023-11-25 23:04:41,091 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 23:04:41,110 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 23:04:41,111 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 1
2023-11-25 23:04:41,113 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#1
2023-11-25 23:04:41,113 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#1
2023-11-25 23:04:41,113 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#1
2023-11-25 23:04:41,115 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#1] : 1414540946
2023-11-25 23:04:41,128 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:04:41,128 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 23:04:41,128 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:04:41,128 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 23:04:41,136 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#1
2023-11-25 23:04:41,136 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,137 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 23:04:41,137 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 2
2023-11-25 23:04:41,137 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#2
2023-11-25 23:04:41,137 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#2
2023-11-25 23:04:41,137 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#2
2023-11-25 23:04:41,137 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#2] : 815177925
2023-11-25 23:04:41,137 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:04:41,137 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 23:04:41,137 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:04:41,137 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:04:41,137 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#2
2023-11-25 23:04:41,137 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,138 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,138 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 3
2023-11-25 23:04:41,138 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#3
2023-11-25 23:04:41,138 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#3
2023-11-25 23:04:41,138 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#3
2023-11-25 23:04:41,138 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#3] : 532136997
2023-11-25 23:04:41,138 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:04:41,138 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 23:04:41,138 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:04:41,138 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 23:04:41,138 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#3
2023-11-25 23:04:41,138 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,138 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 4
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#4
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#4
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#4
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#4] : 1977955611
2023-11-25 23:04:41,139 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:04:41,139 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 23:04:41,139 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:04:41,139 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#4
2023-11-25 23:04:41,139 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,139 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 23:04:41,139 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 5
2023-11-25 23:04:41,140 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#5
2023-11-25 23:04:41,140 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#5
2023-11-25 23:04:41,140 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#5
2023-11-25 23:04:41,140 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#5] : 1013453509
2023-11-25 23:04:41,140 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:04:41,140 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 23:04:41,140 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:04:41,140 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:04:41,141 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#5
2023-11-25 23:04:41,141 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,141 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 23:04:41,141 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 6
2023-11-25 23:04:41,141 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#6
2023-11-25 23:04:41,141 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#6
2023-11-25 23:04:41,141 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#6
2023-11-25 23:04:41,141 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#6] : 156722613
2023-11-25 23:04:41,142 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 23:04:41,142 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 23:04:41,142 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 23:04:41,142 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 23:04:41,142 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#6
2023-11-25 23:04:41,142 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,142 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 23:04:41,142 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 7
2023-11-25 23:04:41,143 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#7
2023-11-25 23:04:41,143 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#7
2023-11-25 23:04:41,143 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#7
2023-11-25 23:04:41,143 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#7] : 1760366818
2023-11-25 23:04:41,143 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 23:04:41,143 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 23:04:41,143 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:04:41,143 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#7
2023-11-25 23:04:41,144 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,144 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 8
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#8
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#8
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#8
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#8] : 468044636
2023-11-25 23:04:41,144 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:04:41,144 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 23:04:41,144 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 23:04:41,144 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:04:41,144 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#8
2023-11-25 23:04:41,144 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,146 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 23:04:41,146 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 9
2023-11-25 23:04:41,146 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#9
2023-11-25 23:04:41,146 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#9
2023-11-25 23:04:41,146 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#9
2023-11-25 23:04:41,146 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#9] : 1686931744
2023-11-25 23:04:41,146 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:04:41,146 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 23:04:41,146 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 23:04:41,146 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 23:04:41,147 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#9
2023-11-25 23:04:41,147 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,147 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 23:04:41,147 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 11
2023-11-25 23:04:41,147 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#11
2023-11-25 23:04:41,147 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#11
2023-11-25 23:04:41,147 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#11
2023-11-25 23:04:41,148 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#11] : 1376120871
2023-11-25 23:04:41,148 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 23:04:41,148 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 23:04:41,148 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 23:04:41,148 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:04:41,148 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#11
2023-11-25 23:04:41,148 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,148 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 23:04:41,149 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 12
2023-11-25 23:04:41,149 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#12
2023-11-25 23:04:41,149 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#12
2023-11-25 23:04:41,149 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#12
2023-11-25 23:04:41,149 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#12] : 591489752
2023-11-25 23:04:41,149 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 23:04:41,149 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 23:04:41,149 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:04:41,149 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 23:04:41,150 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#12
2023-11-25 23:04:41,150 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,150 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 23:04:41,150 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 13
2023-11-25 23:04:41,150 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#13
2023-11-25 23:04:41,150 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#13
2023-11-25 23:04:41,150 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#13
2023-11-25 23:04:41,150 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#13] : 738527250
2023-11-25 23:04:41,151 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:04:41,151 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 23:04:41,151 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:04:41,151 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:04:41,151 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#13
2023-11-25 23:04:41,151 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,151 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 23:04:41,151 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 14
2023-11-25 23:04:41,151 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#14
2023-11-25 23:04:41,151 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#14
2023-11-25 23:04:41,151 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#14
2023-11-25 23:04:41,152 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#14] : 1798979122
2023-11-25 23:04:41,152 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 23:04:41,152 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 23:04:41,152 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:04:41,152 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:04:41,152 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#14
2023-11-25 23:04:41,152 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,152 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 23:04:41,152 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 15
2023-11-25 23:04:41,153 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#15
2023-11-25 23:04:41,153 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#15
2023-11-25 23:04:41,153 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#15
2023-11-25 23:04:41,153 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#15] : 123425557
2023-11-25 23:04:41,153 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 23:04:41,153 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 23:04:41,153 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:04:41,153 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:04:41,153 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#15
2023-11-25 23:04:41,153 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,154 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 23:04:41,154 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 16
2023-11-25 23:04:41,154 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#16
2023-11-25 23:04:41,154 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#16
2023-11-25 23:04:41,154 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#16
2023-11-25 23:04:41,154 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#16] : 1601223692
2023-11-25 23:04:41,154 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 23:04:41,154 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 23:04:41,154 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:04:41,154 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:04:41,155 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#16
2023-11-25 23:04:41,155 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,155 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 23:04:41,155 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 17
2023-11-25 23:04:41,155 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#17
2023-11-25 23:04:41,155 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#17
2023-11-25 23:04:41,155 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#17
2023-11-25 23:04:41,155 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#17] : 169820192
2023-11-25 23:04:41,155 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 23:04:41,155 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 23:04:41,155 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:04:41,156 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 23:04:41,156 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#17
2023-11-25 23:04:41,156 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,156 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 23:04:41,156 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 21
2023-11-25 23:04:41,156 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#21
2023-11-25 23:04:41,156 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#21
2023-11-25 23:04:41,157 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#21
2023-11-25 23:04:41,157 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#21] : 572974727
2023-11-25 23:04:41,157 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 23:04:41,157 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 23:04:41,159 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 23:04:41,159 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 23:04:41,159 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#21
2023-11-25 23:04:41,159 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,160 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 23:04:41,160 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38527870188400)): 22
2023-11-25 23:04:41,160 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).listOfMembers#22
2023-11-25 23:04:41,160 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).repertoire#22
2023-11-25 23:04:41,160 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38527870188400).tours#22
2023-11-25 23:04:41,160 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38527870188400)#22] : 1710248286
2023-11-25 23:04:41,160 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 23:04:41,161 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 23:04:41,161 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:04:41,161 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:04:41,161 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38527870188400)#22
2023-11-25 23:04:41,161 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@725371e0
2023-11-25 23:04:41,168 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,168 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,171 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,179 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,179 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1534797829 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,180 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1126779348 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,180 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@801305248 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,180 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,187 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 23:04:41,188 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,188 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,188 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,188 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,188 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1756010039 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,188 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@119195628 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,188 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1772113792 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,188 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,192 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#22]
2023-11-25 23:04:41,192 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,192 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,192 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,192 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,192 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@88271144 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,192 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1879106825 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,193 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@655371439 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,193 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,195 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 23:04:41,195 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,196 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,196 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,196 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,196 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1175787534 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,196 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1623597367 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,196 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1576073311 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,196 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,198 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 23:04:41,198 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,198 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,198 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,199 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,199 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1423064801 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,199 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@238683684 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,199 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1541345077 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,199 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,201 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#21]
2023-11-25 23:04:41,201 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,201 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,201 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,202 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,202 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@638022041 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,202 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@84042955 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,202 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@715177548 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,202 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,204 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 23:04:41,205 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,205 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,205 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,205 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,205 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1268782903 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,205 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1683854033 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,205 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@88753702 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,205 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,207 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 23:04:41,207 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,207 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,208 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,208 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,208 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@195497296 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,208 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1552617844 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,208 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@668798119 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,208 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,210 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#17]
2023-11-25 23:04:41,211 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,211 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,211 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,211 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,211 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@897681576 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,211 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2054554251 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,211 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@598384525 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,211 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,213 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 23:04:41,214 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,214 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,214 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,214 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,215 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1209565308 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,215 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1069103109 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,215 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1765658147 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,215 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,217 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 23:04:41,217 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,217 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,217 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,217 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,218 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@341165844 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,218 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@329146219 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,218 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@326568107 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,218 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,219 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#16]
2023-11-25 23:04:41,220 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,220 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,220 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,221 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,221 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2145083320 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,221 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1413620408 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,221 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@824766213 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,221 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,223 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 23:04:41,224 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,224 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,224 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,224 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,224 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@921770148 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,224 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1087867320 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,224 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@383924739 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,224 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,226 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 23:04:41,227 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,227 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,227 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,227 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,227 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@983546962 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,227 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1034595104 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,227 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1587379327 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,227 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,229 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#15]
2023-11-25 23:04:41,229 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,229 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,229 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,229 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,229 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2096341829 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,229 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1236817440 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,229 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@264148442 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,229 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,232 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 23:04:41,232 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,232 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,232 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,232 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,232 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@918943254 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,232 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1294902609 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,232 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1879040212 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,232 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,234 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 23:04:41,234 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,235 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,235 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,235 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,235 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1310632732 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,235 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1593248587 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,235 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1152586962 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,235 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,237 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#14]
2023-11-25 23:04:41,237 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,237 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,237 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,238 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,238 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2074088444 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,238 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@669621726 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,238 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@919643896 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,238 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,239 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 23:04:41,240 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,240 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,240 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,240 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,240 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1688413721 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,240 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1467460371 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,240 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2133500759 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,240 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,243 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 23:04:41,243 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,243 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,243 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,244 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@491856606 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@927664696 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,244 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1863122825 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,244 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,246 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#13]
2023-11-25 23:04:41,246 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,246 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,246 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,247 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,247 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1114140992 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,247 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1250962995 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,247 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@36163139 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,247 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,248 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 23:04:41,249 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,249 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,249 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,249 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,249 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@135498674 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,249 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@888801573 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,249 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@617165727 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,249 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,251 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 23:04:41,251 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,251 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,251 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,251 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,251 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1498561956 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,251 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@887797978 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,251 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1646779821 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,251 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,253 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#12]
2023-11-25 23:04:41,255 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,255 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,255 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,255 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,255 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1531466708 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,256 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@123611045 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,256 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1621989179 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,256 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,258 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 23:04:41,258 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,258 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,258 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,259 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,259 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@501314972 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,259 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@301542740 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,259 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@982553148 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,259 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,260 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 23:04:41,261 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,261 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,261 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,261 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,261 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1058882409 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,262 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@19015620 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,262 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@470357637 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,262 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,263 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#11]
2023-11-25 23:04:41,263 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,263 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,263 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,264 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,264 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@215958740 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,264 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1488377588 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,264 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@322681757 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,264 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,266 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 23:04:41,266 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,266 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,267 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,267 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,267 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@225107632 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,267 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1128491987 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,267 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@56593738 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,267 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,268 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 23:04:41,268 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,270 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,270 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,270 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,270 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1321149296 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,270 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@829801008 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,270 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@214459375 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,270 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,272 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#9]
2023-11-25 23:04:41,273 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,273 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,273 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,273 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,273 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1684464781 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,273 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@729687285 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,273 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@290718455 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,273 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,275 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 23:04:41,275 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,275 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,275 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,275 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,275 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@228740470 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,275 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1011918223 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,275 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@973458773 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,276 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,277 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 23:04:41,277 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,277 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,278 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,278 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,278 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1207672967 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,278 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1400943176 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,278 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1937601290 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,278 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,280 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#8]
2023-11-25 23:04:41,280 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,280 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,280 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,281 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,281 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@832317712 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,281 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@702671114 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,281 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@958647098 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,281 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,283 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 23:04:41,283 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,283 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,283 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,284 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,284 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1861977224 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,284 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1227290742 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,284 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1448443443 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,284 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,286 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 23:04:41,287 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,287 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,287 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,287 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,287 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1993501766 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,287 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@193671241 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,287 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@391176901 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,288 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,290 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#7]
2023-11-25 23:04:41,290 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,291 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,291 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,291 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,291 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1725100951 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,291 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1988391746 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,291 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1148871622 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,291 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,294 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 23:04:41,294 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,294 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,295 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,295 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,295 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@408848776 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,295 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@254655766 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,295 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1679201102 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,295 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,298 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 23:04:41,298 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,298 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,298 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,299 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,299 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@139516327 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,299 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1485612800 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,299 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@276220340 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,299 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,301 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#6]
2023-11-25 23:04:41,302 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,302 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,303 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,303 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,303 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1898854775 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,303 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1462986127 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,303 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@928847450 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,303 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,306 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 23:04:41,307 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,307 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,307 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,308 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,308 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@237197326 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,308 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1360228438 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,308 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@983433868 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,308 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,310 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 23:04:41,311 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,311 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,312 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,312 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,312 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@605305185 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,313 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1859437837 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,313 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1373188929 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,313 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,315 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#5]
2023-11-25 23:04:41,316 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,316 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,316 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,317 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,317 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@155514138 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,317 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@287280200 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,317 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@124859640 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,317 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,320 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 23:04:41,321 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,321 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,322 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,322 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,322 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@7557501 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,322 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@237728639 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,322 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1151401848 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,322 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,325 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 23:04:41,325 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,325 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,326 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,326 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@2036089344 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@977549676 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1428940179 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,327 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,330 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#4]
2023-11-25 23:04:41,331 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,331 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,331 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,331 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,332 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@844438204 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,332 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@953710104 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,332 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1011327851 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,332 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,334 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 23:04:41,335 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,335 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,335 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,336 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,336 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2053496376 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,336 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2075686628 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,336 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@65054833 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,336 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,339 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 23:04:41,339 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,340 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,340 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,340 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,340 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1582650105 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,340 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1492179554 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,340 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@2116751274 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,341 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,343 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:04:41,343 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 1
2023-11-25 23:04:41,343 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,344 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:04:41,344 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,344 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#1] : 583585434
2023-11-25 23:04:41,346 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@1476733659
2023-11-25 23:04:41,346 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,346 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:04:41,346 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [100]
2023-11-25 23:04:41,346 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [lalala]
2023-11-25 23:04:41,347 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#1
2023-11-25 23:04:41,347 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@1476733659
2023-11-25 23:04:41,348 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1a355cb8
2023-11-25 23:04:41,348 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:04:41,348 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 2
2023-11-25 23:04:41,348 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,348 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:04:41,348 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,348 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#2] : 1655399938
2023-11-25 23:04:41,348 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.repertoire#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1476733659
2023-11-25 23:04:41,348 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@1476733659
2023-11-25 23:04:41,349 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,349 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:04:41,349 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [150]
2023-11-25 23:04:41,349 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [kakaka]
2023-11-25 23:04:41,349 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#2
2023-11-25 23:04:41,349 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@1476733659
2023-11-25 23:04:41,349 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@1a355cb8
2023-11-25 23:04:41,349 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#3]
2023-11-25 23:04:41,350 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,350 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,350 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,351 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,351 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1178513939 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,351 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@638700567 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,351 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@384931057 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,351 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,353 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:04:41,354 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 23:04:41,354 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,354 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:04:41,354 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,355 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 873987170
2023-11-25 23:04:41,355 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1586468286
2023-11-25 23:04:41,355 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,355 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 23:04:41,356 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 23:04:41,356 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 23:04:41,356 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1586468286
2023-11-25 23:04:41,357 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2e5bb00d
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 442896174
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1586468286
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1586468286
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 23:04:41,357 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 23:04:41,357 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 23:04:41,359 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1586468286
2023-11-25 23:04:41,359 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@2e5bb00d
2023-11-25 23:04:41,359 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 23:04:41,360 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,360 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,361 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,361 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,361 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1905732688 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,361 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2062039788 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,361 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@163587684 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,361 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,364 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 23:04:41,364 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,364 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,364 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,364 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,364 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1347183168 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,364 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1488428331 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,364 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1374909471 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,365 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,366 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#2]
2023-11-25 23:04:41,367 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,367 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,367 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,367 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,367 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@764653933 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,368 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1737128780 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,368 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1024644353 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,368 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,369 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 23:04:41,370 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:04:41,370 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,370 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,371 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,371 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@971663856 (ToOneAttributeMapping(NavigableRole[Tour.group])@738467)
2023-11-25 23:04:41,371 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@310053137 (EntityCollectionPart(Group.tours#{element})@763087882)
2023-11-25 23:04:41,371 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@419385373 (PluralAttribute(Group.tours))
2023-11-25 23:04:41,371 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:04:41,374 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 23:04:41,374 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:04:41,374 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,375 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,375 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,375 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1151542743 (ToOneAttributeMapping(NavigableRole[Song.group])@354794123)
2023-11-25 23:04:41,375 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@650050278 (EntityCollectionPart(Group.repertoire#{element})@1426546745)
2023-11-25 23:04:41,375 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1817257432 (PluralAttribute(Group.repertoire))
2023-11-25 23:04:41,375 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:04:41,377 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#1]
2023-11-25 23:04:41,378 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:04:41,378 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:04:41,378 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:04:41,378 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:04:41,378 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@973969636 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@515778532)
2023-11-25 23:04:41,378 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1603732888 (EntityCollectionPart(Group.listOfMembers#{element})@898209951)
2023-11-25 23:04:41,378 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1089243698 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:04:41,378 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:04:41,380 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 23:04:41,380 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 23:04:41,381 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 23:04:41,396 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 23:04:41,406 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 23:04:41,406 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (initialized)
2023-11-25 23:04:41,406 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 23:04:41,406 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 23:04:41,406 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (initialized)
2023-11-25 23:04:41,406 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (initialized)
2023-11-25 23:04:41,407 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 23:04:41,408 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (initialized)
2023-11-25 23:04:41,409 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 23:04:41,411 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
2023-11-25 23:04:41,412 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 23:04:41,414 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 23:04:41,414 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=100, album=test, name=lalala, id=1, group=Group#3}
2023-11-25 23:04:41,414 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=[], tours=[]}
2023-11-25 23:04:41,414 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=[], tours=[]}
2023-11-25 23:04:41,414 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=150, album=test, name=kakaka, id=2, group=Group#3}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=[Song#1, Song#2], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=[], tours=[]}
2023-11-25 23:04:41,415 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=[], tours=[]}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=[], tours=[]}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=[], tours=[]}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=[], tours=[]}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=[], tours=[]}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=[], tours=[]}
2023-11-25 23:04:41,416 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] More......
2023-11-25 23:04:41,418 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:04:41,419 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:04:41,420 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 23:04:41,423 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 23:04:41,423 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 23:05:07,958 DEBUG o.h.o.c.pooling [Hibernate Connection Pool Validation Thread] Connection pool now considered primed; min-size will be maintained
2023-11-25 23:05:56,061 INFO mainLogger [main] Application started
2023-11-25 23:05:56,895 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 23:05:56,895 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 23:05:56,896 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 23:05:56,911 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 23:05:56,919 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 23:05:56,928 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 23:05:57,031 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 23:05:57,034 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 23:05:57,036 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 23:05:57,078 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 23:05:57,087 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 23:05:57,088 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 23:05:57,090 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:05:57,090 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:05:57,091 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 23:05:57,094 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 23:05:57,095 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 23:05:57,097 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:05:57,098 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 23:05:57,099 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 23:05:57,099 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:05:57,101 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 23:05:57,120 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 23:05:57,122 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 23:05:57,488 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 23:05:57,489 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 23:05:57,489 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 23:05:57,490 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 23:05:57,490 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 23:05:57,490 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 23:05:57,491 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 23:05:57,491 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:05:57,493 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:05:57,493 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:05:57,494 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:05:57,495 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:05:57,496 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:05:57,496 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:05:57,496 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:05:57,496 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 23:05:57,496 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 23:05:57,496 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f464c14
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:05:57,498 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:05:57,499 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:05:57,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:05:57,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:05:57,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:05:57,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:05:57,500 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:05:57,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:05:57,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:05:57,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:05:57,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:05:57,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:05:57,501 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:05:57,502 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:05:57,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 23:05:57,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@3ffd0514
2023-11-25 23:05:57,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 23:05:57,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 23:05:57,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 23:05:57,503 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 23:05:57,504 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 23:05:57,505 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b4ca7fd
2023-11-25 23:05:57,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 23:05:57,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 23:05:57,506 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@de97e22
2023-11-25 23:05:57,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4354532d
2023-11-25 23:05:57,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6028c7e0
2023-11-25 23:05:57,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 23:05:57,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 23:05:57,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 23:05:57,507 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 23:05:57,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 23:05:57,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 23:05:57,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 23:05:57,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 23:05:57,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 23:05:57,508 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 23:05:57,509 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 23:05:57,509 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 23:05:57,509 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 23:05:57,509 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3cb6a3fa
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64866098
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec7a8f2
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49929912
2023-11-25 23:05:57,510 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 23:05:57,511 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 23:05:57,511 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 23:05:57,511 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 23:05:57,511 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:05:57,511 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:05:57,512 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:05:57,512 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:05:57,512 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:05:57,512 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:05:57,513 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:05:57,514 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b703d77
2023-11-25 23:05:57,514 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 23:05:57,514 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:05:57,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:05:57,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:05:57,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:05:57,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:05:57,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 23:05:57,515 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 23:05:57,516 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 23:05:57,517 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 23:05:57,517 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 23:05:57,530 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 23:05:57,531 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 23:05:57,534 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@165eb05
2023-11-25 23:05:57,534 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1783524e
2023-11-25 23:05:57,535 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@11444a5a
2023-11-25 23:05:57,535 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@736a7fbd
2023-11-25 23:05:57,535 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5df98f16
2023-11-25 23:05:57,536 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@50e5a7c5
2023-11-25 23:05:57,536 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@63c03119
2023-11-25 23:05:57,536 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43772d4b
2023-11-25 23:05:57,536 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52e78b0c
2023-11-25 23:05:57,554 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1dfd30ab] into BootstrapContext; was [null]
2023-11-25 23:05:57,555 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c4cf803] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@10fe3347]
2023-11-25 23:05:57,750 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 23:05:57,750 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 23:05:57,821 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 23:05:57,832 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 23:05:57,832 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 23:05:57,832 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 23:05:57,832 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 23:05:57,837 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 23:05:57,837 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 23:05:58,743 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 23:05:58,743 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 23:05:58,743 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 23:05:58,867 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 23:05:58,891 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 23:05:58,891 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 23:05:58,946 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1073863f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7349e0ad)
2023-11-25 23:05:58,947 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b750514) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4719ded6)
2023-11-25 23:05:58,947 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b57ea74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7727273b)
2023-11-25 23:05:58,947 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1419d16e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d7f5255)
2023-11-25 23:05:58,947 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@698f0fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27dfe331)
2023-11-25 23:05:58,948 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d97d405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a1ddc18)
2023-11-25 23:05:58,948 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bfd11b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53e3ad95)
2023-11-25 23:05:58,948 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10976c10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@641e8f06)
2023-11-25 23:05:58,949 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70d62a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49cce8d5)
2023-11-25 23:05:58,952 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 23:05:58,952 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 23:05:58,953 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 23:05:58,963 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:05:58,963 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:05:58,973 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@64ab5601
2023-11-25 23:05:58,974 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@165eb05`
2023-11-25 23:05:58,993 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:05:58,994 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:05:58,994 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:05:58,994 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:05:58,995 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:05:58,996 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:05:59,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:05:59,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:05:59,000 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:05:59,005 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f55ae9a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@617c7772]
2023-11-25 23:05:59,114 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 23:05:59,127 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 23:05:59,179 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 23:05:59,196 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 23:05:59,208 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 23:05:59,226 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:05:59,267 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 23:05:59,270 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:05:59,270 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:05:59,278 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:05:59,287 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 23:05:59,299 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:05:59,309 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 23:05:59,309 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:05:59,315 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 23:05:59,320 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,323 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,350 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 23:05:59,359 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,360 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 23:05:59,362 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 23:05:59,365 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,366 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,370 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 23:05:59,374 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 23:05:59,376 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 23:05:59,377 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 23:05:59,377 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 23:05:59,377 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 23:05:59,377 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 23:05:59,377 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 23:05:59,378 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 23:05:59,379 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:05:59,379 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 23:05:59,379 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:05:59,379 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 23:05:59,379 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:05:59,380 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 23:05:59,381 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 23:05:59,381 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 23:05:59,381 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 23:05:59,381 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 23:05:59,381 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 23:05:59,382 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,382 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,382 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 23:05:59,383 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,384 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 23:05:59,384 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 23:05:59,385 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,385 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,385 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 23:05:59,385 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 23:05:59,386 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,387 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,387 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 23:05:59,388 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,389 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 23:05:59,390 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 23:05:59,390 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,390 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:05:59,390 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 23:05:59,390 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 23:05:59,391 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 23:05:59,392 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 23:05:59,392 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 23:05:59,392 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 23:05:59,393 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 23:05:59,393 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 23:05:59,403 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 23:05:59,404 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 23:05:59,404 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 23:05:59,405 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:05:59,416 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 23:05:59,416 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:05:59,416 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:05:59,416 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:05:59,416 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 23:05:59,417 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:05:59,417 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 23:05:59,417 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:05:59,417 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 23:05:59,418 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 23:05:59,418 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 23:05:59,418 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 23:05:59,419 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 23:05:59,419 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 23:05:59,419 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 23:05:59,425 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:05:59,426 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,435 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:05:59,436 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 23:05:59,436 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:05:59,437 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 23:05:59,437 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:05:59,437 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 23:05:59,437 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:05:59,438 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 23:05:59,438 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 23:05:59,439 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 23:05:59,439 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 23:05:59,439 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 23:05:59,439 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 23:05:59,440 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 23:05:59,441 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 23:05:59,442 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 23:05:59,442 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:05:59,446 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 23:05:59,446 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:05:59,447 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:05:59,447 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:05:59,447 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 23:05:59,447 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:05:59,447 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 23:05:59,447 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:05:59,448 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 23:05:59,448 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_album')
2023-11-25 23:05:59,448 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property album with lazy=false
2023-11-25 23:05:59,449 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:album]
2023-11-25 23:05:59,449 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for album
2023-11-25 23:05:59,449 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_album
2023-11-25 23:05:59,450 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property album
2023-11-25 23:05:59,450 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 23:05:59,450 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 23:05:59,451 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 23:05:59,451 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 23:05:59,451 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 23:05:59,451 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 23:05:59,452 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:05:59,453 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,453 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:05:59,454 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 23:05:59,455 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:05:59,455 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 23:05:59,455 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:05:59,456 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 23:05:59,456 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:05:59,457 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 23:05:59,457 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 23:05:59,459 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 23:05:59,460 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:05:59,462 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 23:05:59,463 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:05:59,463 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:05:59,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:05:59,463 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 23:05:59,463 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:05:59,463 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 23:05:59,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:05:59,464 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 23:05:59,464 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 23:05:59,464 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 23:05:59,464 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 23:05:59,465 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 23:05:59,465 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 23:05:59,465 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 23:05:59,465 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 23:05:59,466 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 23:05:59,466 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 23:05:59,466 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 23:05:59,466 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 23:05:59,466 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 23:05:59,467 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 23:05:59,467 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 23:05:59,467 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 23:05:59,468 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:05:59,472 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 23:05:59,472 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:05:59,472 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:05:59,472 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 23:05:59,473 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 23:05:59,473 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 23:05:59,473 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 23:05:59,473 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 23:05:59,473 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 23:05:59,474 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 23:05:59,474 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 23:05:59,474 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 23:05:59,475 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 23:05:59,475 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 23:05:59,475 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 23:05:59,476 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 23:05:59,476 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 23:05:59,476 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 23:05:59,476 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 23:05:59,477 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 23:05:59,477 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 23:05:59,478 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:05:59,478 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:05:59,478 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:05:59,479 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 23:05:59,479 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:05:59,479 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 23:05:59,479 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:05:59,479 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 23:05:59,479 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:05:59,482 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:05:59,484 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for album
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 23:05:59,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 23:05:59,486 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 23:05:59,486 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 23:05:59,486 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:05:59,493 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 23:05:59,495 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 23:05:59,495 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 23:05:59,495 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 23:05:59,495 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 23:05:59,495 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 23:05:59,498 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 23:05:59,500 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 23:05:59,501 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 23:05:59,502 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 23:05:59,502 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 23:05:59,502 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 23:05:59,502 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 23:05:59,503 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Song.group
2023-11-25 23:05:59,503 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 23:05:59,503 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 23:05:59,503 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 23:05:59,503 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 23:05:59,504 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 23:05:59,505 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 23:05:59,505 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:05:59,510 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:05:59,510 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:05:59,534 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:05:59,535 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:05:59,535 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:05:59,761 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 23:06:00,186 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 23:06:00,302 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:06:00,305 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77666dff, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 23:06:00,315 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 23:06:00,329 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:06:00,416 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 23:06:00,416 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 23:06:00,419 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 23:06:00,419 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 23:06:00,424 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4970a585] under count; prior registration was null
2023-11-25 23:06:00,428 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@48c81014] under every; prior registration was null
2023-11-25 23:06:00,428 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@20c41ffc] under any; prior registration was null
2023-11-25 23:06:00,429 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 23:06:00,430 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 23:06:00,431 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 23:06:00,431 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 23:06:00,431 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 23:06:00,432 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 23:06:00,432 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 23:06:00,432 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 23:06:00,432 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 23:06:00,432 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 23:06:00,432 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 23:06:00,436 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@451fda7f] under sinh; prior registration was null
2023-11-25 23:06:00,436 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5dd229] under cosh; prior registration was null
2023-11-25 23:06:00,436 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@133425c6] under tanh; prior registration was null
2023-11-25 23:06:00,436 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f] under pi; prior registration was null
2023-11-25 23:06:00,436 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9] under log; prior registration was null
2023-11-25 23:06:00,438 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 23:06:00,438 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 23:06:00,438 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 23:06:00,438 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 23:06:00,438 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 23:06:00,439 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 23:06:00,439 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 23:06:00,439 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 23:06:00,439 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 23:06:00,439 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 23:06:00,440 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 23:06:00,440 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 23:06:00,441 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@21d1d881] under position; prior registration was null
2023-11-25 23:06:00,445 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4a6e5f0c] under overlay; prior registration was null
2023-11-25 23:06:00,446 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@8b713c] under trim; prior registration was null
2023-11-25 23:06:00,448 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1023e1ce] under cast; prior registration was null
2023-11-25 23:06:00,448 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@102a85c] under collate; prior registration was null
2023-11-25 23:06:00,449 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4c22fc36] under extract; prior registration was null
2023-11-25 23:06:00,450 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 23:06:00,450 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 23:06:00,450 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@72a009f0] under ifnull; prior registration was null
2023-11-25 23:06:00,450 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 23:06:00,451 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 23:06:00,451 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@74fe4296] under pad; prior registration was null
2023-11-25 23:06:00,452 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6e2ef709] under str; prior registration was null
2023-11-25 23:06:00,456 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a8e9ad8] under format; prior registration was null
2023-11-25 23:06:00,457 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@213832c8] under timestampadd; prior registration was null
2023-11-25 23:06:00,459 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7e374d91] under timestampdiff; prior registration was null
2023-11-25 23:06:00,459 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 23:06:00,459 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 23:06:00,460 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c6ad7fd] under current_date; prior registration was null
2023-11-25 23:06:00,460 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@384bc1eb] under current_time; prior registration was null
2023-11-25 23:06:00,460 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8ec6d91] under current_timestamp; prior registration was null
2023-11-25 23:06:00,460 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 23:06:00,460 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4afe40c7] under local_date; prior registration was null
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30d1b35a] under local_time; prior registration was null
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56f36832] under local_datetime; prior registration was null
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d180798] under offset_datetime; prior registration was null
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 23:06:00,461 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d88084] under instant; prior registration was null
2023-11-25 23:06:00,462 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 23:06:00,463 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@49957509] under sql; prior registration was null
2023-11-25 23:06:00,463 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 23:06:00,463 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 23:06:00,463 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 23:06:00,463 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 23:06:00,463 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 23:06:00,464 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 23:06:00,465 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 23:06:00,465 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@546d70b7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@643ebb3d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 23:06:00,466 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 23:06:00,467 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f268d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@21d1d881
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 23:06:00,468 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@16eaf2dd] under trunc; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a4b9426] under bitand; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17ba2564] under bitor; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9dc1a5] under bitxor; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ba0a631] under bitnot; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 23:06:00,477 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4dcce1c7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@a8e9ad8
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 23:06:00,478 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30d1b35a
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@56f36832
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b9b6c1f] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fef1420] under chr; prior registration was null
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2130b6c2] under sysdate; prior registration was null
2023-11-25 23:06:00,479 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 23:06:00,480 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 23:06:00,481 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 23:06:00,481 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 23:06:00,481 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 23:06:00,481 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 23:06:00,483 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@ea0f425] under rank; prior registration was null
2023-11-25 23:06:00,483 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@29b4fbdf] under dense_rank; prior registration was null
2023-11-25 23:06:00,483 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b7e400f] under percent_rank; prior registration was null
2023-11-25 23:06:00,483 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5bd11341] under cume_dist; prior registration was null
2023-11-25 23:06:00,485 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5602ab1c] under listagg; prior registration was null
2023-11-25 23:06:00,488 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 23:06:00,489 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 23:06:00,489 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 23:06:00,489 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 23:06:00,489 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 23:06:00,489 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 23:06:00,489 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 23:06:00,490 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 23:06:00,490 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:06:00,490 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 23:06:00,491 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 23:06:00,492 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 23:06:00,493 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 23:06:00,493 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 23:06:00,493 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 23:06:00,493 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 23:06:00,493 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 23:06:00,493 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 23:06:00,494 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 23:06:00,495 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 23:06:00,496 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 23:06:00,497 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 23:06:00,498 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 23:06:00,499 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 23:06:00,500 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 23:06:00,501 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 23:06:00,501 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 23:06:00,501 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 23:06:00,501 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 23:06:00,501 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 23:06:00,501 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 23:06:00,502 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 23:06:00,503 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 23:06:00,503 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 23:06:00,503 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 23:06:00,503 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 23:06:00,503 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 23:06:00,503 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 23:06:00,515 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 23:06:00,818 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:06:00,818 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:06:01,204 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:06:01,309 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,309 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,309 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:06:01,309 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:06:01,365 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:06:01,367 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,368 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,369 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,369 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:06:01,369 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:06:01,428 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Song]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [album]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:06:01,430 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,431 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:06:01,431 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:06:01,470 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:06:01,475 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,475 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,475 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:06:01,475 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:06:01,504 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:06:01,506 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:06:01,552 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 23:06:01,559 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 23:06:01,560 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 23:06:01,562 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.repertoire
2023-11-25 23:06:01,562 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.repertoire
2023-11-25 23:06:01,562 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.repertoire
2023-11-25 23:06:01,563 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 23:06:01,564 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 23:06:01,564 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 23:06:01,623 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 23:06:01,624 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:06:01,624 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 23:06:01,625 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 23:06:01,633 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:06:01,634 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 23:06:01,634 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 23:06:01,634 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:06:01,634 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 23:06:01,634 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 23:06:01,634 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Song.group]
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:06:01,635 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:06:01,741 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 23:06:01,741 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 23:06:01,741 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 23:06:01,741 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 23:06:01,743 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 23:06:01,770 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:06:01,773 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:06:01,786 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:06:01,792 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@413c14e5] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:06:01,797 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:06:01,818 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-SelectEagerCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 23:06:01,824 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 23:06:01,840 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 23:06:01,840 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 23:06:01,840 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 23:06:01,840 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 23:06:01,840 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 23:06:01,840 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:06:01,842 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 23:06:01,848 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f6fb6f7] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 23:06:01,848 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 23:06:01,850 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:06:01,850 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1313853c] with identifierForTableGroup [GroupMember.group.repertoire] for NavigablePath [GroupMember.group.repertoire] 
2023-11-25 23:06:01,851 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.repertoire.{element})] with identifierForTableGroup [GroupMember.group.repertoire.{element}] for NavigablePath [GroupMember.group.repertoire.{element}] 
2023-11-25 23:06:01,854 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 23:06:01,855 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (r1 : GroupMember.group.repertoire) {
                  primaryTableReference : songs as r1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:06:01,858 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 23:06:01,858 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 23:06:01,858 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_album,song_duration,group_id,song_name) values (?,?,?,?)
2023-11-25 23:06:01,858 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_album=?,song_duration=?,group_id=?,song_name=? where song_id=?
2023-11-25 23:06:01,858 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 23:06:01,858 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 23:06:01,858 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 23:06:01,859 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@79fb5] with identifierForTableGroup [Song.group] for NavigablePath [Song.group] 
2023-11-25 23:06:01,859 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:06:01,860 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:06:01,860 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5a7a83d] with identifierForTableGroup [Song.group.listOfMembers] for NavigablePath [Song.group.listOfMembers] 
2023-11-25 23:06:01,860 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song.group.listOfMembers.{element})] with identifierForTableGroup [Song.group.listOfMembers.{element}] for NavigablePath [Song.group.listOfMembers.{element}] 
2023-11-25 23:06:01,862 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.album]
 |  +-BasicFetch [Song.duration]
 |  +-EntityFetchJoinedImpl [Song.group]
 |  \-BasicFetch [Song.name]

2023-11-25 23:06:01,862 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Song.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Song.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:06:01,863 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 23:06:01,863 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 23:06:01,863 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 23:06:01,863 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 23:06:01,863 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 23:06:01,864 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 23:06:01,864 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 23:06:01,864 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 23:06:01,864 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 23:06:01,866 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 23:06:01,866 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 23:06:01,866 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 23:06:01,866 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 23:06:01,866 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 23:06:01,866 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:06:01,866 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 23:06:01,866 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49d7496b] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 23:06:01,866 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:06:01,867 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:06:01,867 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@72969fb2] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 23:06:01,867 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 23:06:01,867 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 23:06:01,868 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:06:01,870 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:06:01,871 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2435e115] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:06:01,871 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:06:01,879 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13463db2] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 23:06:01,884 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 23:06:01,885 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:06:01,885 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7f9ace71] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 23:06:01,885 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 23:06:01,885 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d936f75] with identifierForTableGroup [Group.repertoire.{element}.group] for NavigablePath [Group.repertoire.{element}.group] 
2023-11-25 23:06:01,886 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 23:06:01,886 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:06:01,886 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@15d2b304] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 23:06:01,886 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 23:06:01,886 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27b9278e] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 23:06:01,887 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 23:06:01,977 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:06:01,978 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 23:06:01,991 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 23:06:01,992 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 23:06:01,998 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:06:01,999 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:06:02,000 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f55ae9a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c06858a]
2023-11-25 23:06:02,002 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 23:06:02,002 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 23:06:02,003 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:06:02,003 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 23:06:02,007 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6dfc7960
2023-11-25 23:06:02,008 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: b78aab50-c3de-48aa-9bc4-a2a9b4ca170d (<unnamed>)
2023-11-25 23:06:02,008 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 23:06:02,008 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 23:06:02,091 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 23:06:02,095 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 23:06:02,099 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 23:06:02,099 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 23:06:02,104 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 23:06:02,328 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 23:06:02,379 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 23:06:02,388 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 23:06:02,412 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(38609327504400)`
            <- [root] - `Group(38609327504400)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(38609327504400)`
          <- [root] - `Group(38609327504400)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 23:06:02,483 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:06:02,483 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(38609327504400))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:06:02,495 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(38609327504400)]
 |  +-SelectEagerCollectionFetch [Group(38609327504400).listOfMembers]
 |  +-BasicFetch [Group(38609327504400).mainGenre]
 |  +-BasicFetch [Group(38609327504400).name]
 |  +-BasicFetch [Group(38609327504400).placeInChart]
 |  +-SelectEagerCollectionFetch [Group(38609327504400).repertoire]
 |  +-SelectEagerCollectionFetch [Group(38609327504400).tours]
 |  \-BasicFetch [Group(38609327504400).yearOfFoundation]

2023-11-25 23:06:02,495 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(38609327504400)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 23:06:02,514 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 23:06:02,532 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,532 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38609327504400).listOfMembers -> SelectEagerCollectionInitializer(Group(38609327504400).listOfMembers)@266807867 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,534 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38609327504400).repertoire -> SelectEagerCollectionInitializer(Group(38609327504400).repertoire)@1832799560 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,534 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38609327504400).tours -> SelectEagerCollectionInitializer(Group(38609327504400).tours)@571413400 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,534 DEBUG o.h.o.results [JavaFX Application Thread]     Group(38609327504400) -> EntityResultInitializer(Group(38609327504400))@181247385 (SingleTableEntityPersister(Group))
2023-11-25 23:06:02,546 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 23:06:02,568 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 23:06:02,568 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 1
2023-11-25 23:06:02,570 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#1
2023-11-25 23:06:02,570 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#1
2023-11-25 23:06:02,570 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#1
2023-11-25 23:06:02,573 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#1] : 1762535726
2023-11-25 23:06:02,583 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:06:02,583 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 23:06:02,583 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:06:02,583 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 23:06:02,591 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#1
2023-11-25 23:06:02,591 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,592 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 23:06:02,592 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 2
2023-11-25 23:06:02,592 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#2
2023-11-25 23:06:02,592 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#2
2023-11-25 23:06:02,592 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#2
2023-11-25 23:06:02,592 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#2] : 1343008832
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#2
2023-11-25 23:06:02,593 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 3
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#3
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#3
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#3
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#3] : 1182183199
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:06:02,593 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 23:06:02,593 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#3
2023-11-25 23:06:02,593 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 4
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#4
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#4
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#4
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#4] : 1671364647
2023-11-25 23:06:02,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:06:02,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 23:06:02,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:06:02,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#4
2023-11-25 23:06:02,594 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,594 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 5
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#5
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#5
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#5
2023-11-25 23:06:02,594 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#5] : 350106780
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:06:02,595 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#5
2023-11-25 23:06:02,595 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 23:06:02,595 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 6
2023-11-25 23:06:02,595 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#6
2023-11-25 23:06:02,595 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#6
2023-11-25 23:06:02,595 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#6
2023-11-25 23:06:02,595 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#6] : 1792406810
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 23:06:02,595 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 23:06:02,596 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#6
2023-11-25 23:06:02,596 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 23:06:02,596 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 7
2023-11-25 23:06:02,596 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#7
2023-11-25 23:06:02,596 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#7
2023-11-25 23:06:02,596 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#7
2023-11-25 23:06:02,596 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#7] : 927494864
2023-11-25 23:06:02,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 23:06:02,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 23:06:02,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:06:02,596 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:06:02,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#7
2023-11-25 23:06:02,597 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 23:06:02,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 8
2023-11-25 23:06:02,597 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#8
2023-11-25 23:06:02,597 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#8
2023-11-25 23:06:02,597 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#8
2023-11-25 23:06:02,597 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#8] : 2018658776
2023-11-25 23:06:02,597 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:06:02,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 23:06:02,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 23:06:02,598 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:06:02,598 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#8
2023-11-25 23:06:02,598 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 23:06:02,599 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 9
2023-11-25 23:06:02,599 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#9
2023-11-25 23:06:02,599 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#9
2023-11-25 23:06:02,599 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#9
2023-11-25 23:06:02,599 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#9] : 456243675
2023-11-25 23:06:02,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:06:02,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 23:06:02,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 23:06:02,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 23:06:02,599 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#9
2023-11-25 23:06:02,599 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,599 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 23:06:02,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 11
2023-11-25 23:06:02,600 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#11
2023-11-25 23:06:02,600 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#11
2023-11-25 23:06:02,600 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#11
2023-11-25 23:06:02,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#11] : 1075249301
2023-11-25 23:06:02,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 23:06:02,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 23:06:02,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 23:06:02,600 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:06:02,600 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#11
2023-11-25 23:06:02,600 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,601 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 23:06:02,601 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 12
2023-11-25 23:06:02,601 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#12
2023-11-25 23:06:02,601 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#12
2023-11-25 23:06:02,601 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#12
2023-11-25 23:06:02,601 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#12] : 716691414
2023-11-25 23:06:02,601 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 23:06:02,601 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 23:06:02,601 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:06:02,601 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 23:06:02,601 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#12
2023-11-25 23:06:02,601 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,601 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 23:06:02,602 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 13
2023-11-25 23:06:02,602 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#13
2023-11-25 23:06:02,602 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#13
2023-11-25 23:06:02,602 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#13
2023-11-25 23:06:02,602 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#13] : 269585798
2023-11-25 23:06:02,602 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:06:02,602 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 23:06:02,602 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:06:02,602 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:06:02,602 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#13
2023-11-25 23:06:02,603 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,603 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 23:06:02,603 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 14
2023-11-25 23:06:02,603 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#14
2023-11-25 23:06:02,603 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#14
2023-11-25 23:06:02,603 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#14
2023-11-25 23:06:02,603 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#14] : 590473226
2023-11-25 23:06:02,603 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 23:06:02,603 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 23:06:02,603 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:06:02,603 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:06:02,603 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#14
2023-11-25 23:06:02,603 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,603 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 23:06:02,604 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 15
2023-11-25 23:06:02,604 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#15
2023-11-25 23:06:02,604 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#15
2023-11-25 23:06:02,604 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#15
2023-11-25 23:06:02,604 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#15] : 651582571
2023-11-25 23:06:02,604 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#15
2023-11-25 23:06:02,605 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 16
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#16
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#16
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#16
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#16] : 1789605372
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#16
2023-11-25 23:06:02,605 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,605 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 17
2023-11-25 23:06:02,605 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#17
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#17
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#17
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#17] : 2016258189
2023-11-25 23:06:02,607 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 23:06:02,607 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 23:06:02,607 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:06:02,607 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#17
2023-11-25 23:06:02,607 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,607 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 21
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#21
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#21
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#21
2023-11-25 23:06:02,607 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#21] : 55224763
2023-11-25 23:06:02,608 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 23:06:02,608 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 23:06:02,609 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 23:06:02,609 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 23:06:02,609 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#21
2023-11-25 23:06:02,609 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,610 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 23:06:02,610 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(38609327504400)): 22
2023-11-25 23:06:02,610 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).listOfMembers#22
2023-11-25 23:06:02,610 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).repertoire#22
2023-11-25 23:06:02,610 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(38609327504400).tours#22
2023-11-25 23:06:02,611 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(38609327504400)#22] : 2081593411
2023-11-25 23:06:02,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 23:06:02,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 23:06:02,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:06:02,611 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:06:02,611 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(38609327504400)#22
2023-11-25 23:06:02,611 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:06:02,619 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,620 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,621 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,629 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,629 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1574269310 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,629 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@573307588 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,630 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1543412631 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,630 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,637 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 23:06:02,637 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,638 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,638 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,638 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,639 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@181755512 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,639 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@519992016 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,639 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1503517615 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,639 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,641 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#22]
2023-11-25 23:06:02,642 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,642 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,642 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,642 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,642 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1584735559 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,643 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@533108898 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,643 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@390602596 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,643 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,645 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 23:06:02,646 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,646 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,646 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,646 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,646 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1961912325 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,646 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@588573376 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,647 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@9555485 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,647 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,648 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 23:06:02,648 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,650 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,650 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,650 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,650 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1068922939 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,650 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@827963638 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,650 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1148101311 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,650 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,651 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#21]
2023-11-25 23:06:02,652 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,652 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,652 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,652 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,652 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@159489672 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,652 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@944483933 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,652 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@119512184 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,653 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,655 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 23:06:02,655 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,655 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,655 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,656 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,656 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@168549364 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,656 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1896639121 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,656 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@587275408 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,656 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,658 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 23:06:02,658 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,658 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,658 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,658 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,658 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@931535128 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,658 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@474511076 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,659 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@220605503 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,659 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,660 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#17]
2023-11-25 23:06:02,661 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,661 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,661 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,661 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,661 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@360531684 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,661 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@696702880 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,661 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1203703270 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,662 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,663 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 23:06:02,664 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,664 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,664 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,664 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,664 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@40249617 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,664 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1024050310 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,664 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1611887187 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,664 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,666 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 23:06:02,666 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,667 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,667 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,667 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,667 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@724532232 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,667 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1347752660 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,667 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1515644179 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,667 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,669 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#16]
2023-11-25 23:06:02,669 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,669 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,669 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,669 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,669 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@656800482 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,669 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1253506408 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,669 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1311120119 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,669 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,673 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 23:06:02,673 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,673 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,673 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,674 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@281698238 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1858408178 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,674 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@235304464 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,674 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,676 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 23:06:02,678 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,678 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,678 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,678 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,678 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@843298103 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,679 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@264823705 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,679 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@702861645 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,679 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,680 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#15]
2023-11-25 23:06:02,680 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,680 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,681 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,681 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@117194675 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@152955032 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,681 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1097228482 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,681 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,684 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 23:06:02,684 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,684 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,684 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,684 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,685 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@140094554 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,685 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2060168675 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,685 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1887006159 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,685 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,687 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 23:06:02,687 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,687 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,687 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,688 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,688 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1245424329 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,688 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1905766740 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,688 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1852742964 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,688 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,690 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#14]
2023-11-25 23:06:02,690 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,691 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,691 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,691 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,691 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@493121206 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,691 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@125425427 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,691 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1047930524 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,691 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,693 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 23:06:02,693 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,695 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,695 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,696 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,696 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@869811254 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,696 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1008059927 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,696 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@12616296 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,696 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,698 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 23:06:02,698 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,699 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,699 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,699 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,699 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@528119327 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,699 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@464348250 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,699 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1321812012 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,699 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,701 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#13]
2023-11-25 23:06:02,701 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,702 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,702 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,702 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,702 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@377470977 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,702 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@305343170 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,702 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@220061484 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,702 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,704 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 23:06:02,705 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,705 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,705 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,706 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,706 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@263986588 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,706 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1824217080 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,706 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@804801216 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,706 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,708 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 23:06:02,709 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,709 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,709 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,709 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,709 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1613142922 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,709 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@224748292 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,710 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1776892539 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,710 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,712 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#12]
2023-11-25 23:06:02,712 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,712 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,712 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,712 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,712 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1844387144 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,712 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1307953260 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,712 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@40258889 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,712 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,715 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 23:06:02,715 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,715 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,715 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,716 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,716 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@506334445 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,716 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@772933220 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,716 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@479171712 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,716 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,717 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 23:06:02,718 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,718 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,718 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,718 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,718 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1761970853 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,718 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@164509841 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,718 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1565132031 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,718 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,720 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#11]
2023-11-25 23:06:02,721 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,721 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,721 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,721 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,721 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1670138609 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,722 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1852626819 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,722 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1758613657 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,722 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,723 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 23:06:02,725 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,725 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,726 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,726 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@224338787 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2012478665 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,726 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@451549965 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,727 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,728 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 23:06:02,729 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,729 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,729 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,729 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,730 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@989364024 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,730 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1879062809 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,730 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@2067929589 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,730 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,732 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#9]
2023-11-25 23:06:02,732 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,732 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,732 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,732 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,732 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@257578788 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,733 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1681681035 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,733 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1023801623 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,733 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,734 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 23:06:02,735 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,735 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,735 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,735 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,735 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@39498123 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,735 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@277167510 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,735 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@321603092 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,735 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,737 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 23:06:02,738 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,738 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,739 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,739 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,739 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1471788855 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,739 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@510349362 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,739 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1682704471 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,739 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,742 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#8]
2023-11-25 23:06:02,743 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,743 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,744 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,744 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,744 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@516061792 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,744 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@449369951 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,744 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1747665403 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,744 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,746 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 23:06:02,746 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,746 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,747 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,747 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,747 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@26475083 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,747 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@855983899 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,747 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1830179236 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,747 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,749 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 23:06:02,749 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,750 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,750 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,750 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,750 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1518639984 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,750 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@88107765 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,750 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@651309666 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,750 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,752 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#7]
2023-11-25 23:06:02,752 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,752 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,753 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,753 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,753 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@470594833 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,753 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@729466320 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,753 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@782222293 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,753 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,756 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 23:06:02,756 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,757 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,757 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,757 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,757 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1536953386 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,757 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@189660647 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,757 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@274956909 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,757 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,760 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 23:06:02,760 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,760 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,761 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,761 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,761 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1091825253 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,761 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1307540672 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,761 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1241639763 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,761 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,764 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#6]
2023-11-25 23:06:02,764 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,764 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,765 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,765 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,765 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@733181379 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,766 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1848461461 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,766 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@941750974 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,766 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,769 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 23:06:02,770 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,770 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,771 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,771 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,772 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1896801097 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,772 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1187845084 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,772 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1934759222 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,772 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,774 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 23:06:02,775 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,775 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,776 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,776 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,776 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@890545959 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,776 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1443692310 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,776 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@376874759 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,776 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,780 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#5]
2023-11-25 23:06:02,780 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,781 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,781 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,781 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,781 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1687672950 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,781 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1199179132 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,782 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@2083696080 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,782 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,784 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 23:06:02,785 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,785 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,785 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,786 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,786 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2007166660 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,786 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@513249741 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,786 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2013068768 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,786 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,788 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 23:06:02,789 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,789 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,790 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,790 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,790 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@2011634984 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,791 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1743060425 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,791 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@363244254 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,791 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,794 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#4]
2023-11-25 23:06:02,795 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,795 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,796 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,796 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,796 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@687760227 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,796 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@145677560 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,796 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@56920825 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,796 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,800 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 23:06:02,800 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,800 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,801 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,801 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,801 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1746894750 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,801 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1326121766 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,801 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@933065669 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,801 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,807 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 23:06:02,807 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,808 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,808 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,808 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,809 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1691518771 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,809 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@948818743 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,809 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1714856303 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,809 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,812 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:06:02,813 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 1
2023-11-25 23:06:02,813 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,813 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:06:02,813 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,814 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#1] : 238351822
2023-11-25 23:06:02,816 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:06:02,816 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,816 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:06:02,816 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [100]
2023-11-25 23:06:02,816 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [lalala]
2023-11-25 23:06:02,817 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#1
2023-11-25 23:06:02,817 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:06:02,818 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@e8903a4
2023-11-25 23:06:02,818 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:06:02,818 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 2
2023-11-25 23:06:02,818 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,818 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:06:02,818 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,818 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#2] : 1991607459
2023-11-25 23:06:02,819 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.repertoire#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:06:02,819 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:06:02,819 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,819 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:06:02,819 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [150]
2023-11-25 23:06:02,819 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [kakaka]
2023-11-25 23:06:02,819 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#2
2023-11-25 23:06:02,819 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:06:02,819 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@e8903a4
2023-11-25 23:06:02,819 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#3]
2023-11-25 23:06:02,820 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,820 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,821 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,821 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,821 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@383937299 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,822 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@765458467 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,822 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1800231447 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,822 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,824 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:06:02,824 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 23:06:02,825 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,825 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:06:02,825 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,825 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 1714728133
2023-11-25 23:06:02,825 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:06:02,825 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,825 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 23:06:02,825 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 23:06:02,825 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 23:06:02,826 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 23:06:02,826 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:06:02,826 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6728cff6
2023-11-25 23:06:02,826 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 23:06:02,827 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:06:02,827 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 1820253457
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:06:02,827 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:06:02,827 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 23:06:02,827 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 23:06:02,827 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 23:06:02,827 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:06:02,828 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6728cff6
2023-11-25 23:06:02,828 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 23:06:02,828 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,828 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,828 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,829 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,829 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@404144147 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,829 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1527190864 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,829 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2054239929 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,829 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,831 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 23:06:02,831 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,831 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,832 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,832 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,832 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@755735018 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,832 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1581032972 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,832 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1369143066 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,832 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,835 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#2]
2023-11-25 23:06:02,835 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,835 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,836 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,836 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,836 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2029532689 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,836 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1926344115 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,836 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@389068968 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,837 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,840 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 23:06:02,840 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:06:02,840 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,840 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,842 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,842 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1842662431 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:06:02,842 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2134101237 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:06:02,842 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1642819967 (PluralAttribute(Group.tours))
2023-11-25 23:06:02,842 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:06:02,843 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 23:06:02,844 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:06:02,844 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,844 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,844 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,844 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1671455443 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:06:02,845 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1509594961 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:06:02,845 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1180124563 (PluralAttribute(Group.repertoire))
2023-11-25 23:06:02,845 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:06:02,846 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#1]
2023-11-25 23:06:02,846 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:06:02,847 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:06:02,847 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:06:02,847 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:06:02,847 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@56726886 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:06:02,847 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2145792836 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:06:02,847 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1165378673 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:06:02,847 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:06:02,849 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 23:06:02,849 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 23:06:02,850 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 23:06:02,864 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 23:06:02,874 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 23:06:02,874 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (initialized)
2023-11-25 23:06:02,874 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 23:06:02,874 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 23:06:02,874 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (initialized)
2023-11-25 23:06:02,874 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (initialized)
2023-11-25 23:06:02,875 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 23:06:02,876 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (initialized)
2023-11-25 23:06:02,877 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 23:06:02,879 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
2023-11-25 23:06:02,879 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 23:06:02,881 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 23:06:02,882 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=100, album=test, name=lalala, id=1, group=Group#3}
2023-11-25 23:06:02,882 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=150, album=test, name=kakaka, id=2, group=Group#3}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=[], tours=[]}
2023-11-25 23:06:02,883 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=[], tours=[]}
2023-11-25 23:06:02,884 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=[Song#1, Song#2], tours=[]}
2023-11-25 23:06:02,884 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=[], tours=[]}
2023-11-25 23:06:02,884 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=[], tours=[]}
2023-11-25 23:06:02,884 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 23:06:02,884 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=[], tours=[]}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=[], tours=[]}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=[], tours=[]}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=[], tours=[]}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=[], tours=[]}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=[], tours=[]}
2023-11-25 23:06:02,885 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] More......
2023-11-25 23:06:02,887 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:06:02,888 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:06:02,889 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 23:06:02,891 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 23:06:02,891 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 23:06:28,740 DEBUG o.h.o.c.pooling [Hibernate Connection Pool Validation Thread] Connection pool now considered primed; min-size will be maintained
2023-11-25 23:25:18,633 INFO mainLogger [main] Application started
2023-11-25 23:25:19,512 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Located and parsed 1 persistence units; checking each
2023-11-25 23:25:19,513 DEBUG o.h.j.HibernatePersistenceProvider [JavaFX Application Thread] Checking persistence-unit [name=test, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [test]
2023-11-25 23:25:19,514 DEBUG o.h.j.b.s.ProviderChecker [JavaFX Application Thread] Persistence-unit [test] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2023-11-25 23:25:19,526 DEBUG o.h.j.i.u.LogHelper [JavaFX Application Thread] PersistenceUnitInfo [
	name: test
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/tanki/University/OOP/LAB/Lab1/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 123456
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/music_groups
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		jakarta.persistence.jdbc.user: root]
2023-11-25 23:25:19,535 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-11-25 23:25:19,545 DEBUG o.h.i.i.IntegratorServiceImpl [JavaFX Application Thread] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-11-25 23:25:19,656 INFO o.h.Version [JavaFX Application Thread] HHH000412: Hibernate ORM core version 6.2.7.Final
2023-11-25 23:25:19,661 DEBUG o.h.c.Environment [JavaFX Application Thread] HHH000206: hibernate.properties not found
2023-11-25 23:25:19,663 INFO o.h.c.Environment [JavaFX Application Thread] HHH000406: Using bytecode reflection optimizer
2023-11-25 23:25:19,712 DEBUG o.h.o.i.factory [JavaFX Application Thread] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
2023-11-25 23:25:19,723 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-11-25 23:25:19,724 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-11-25 23:25:19,727 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:25:19,728 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-11-25 23:25:19,729 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-11-25 23:25:19,731 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-11-25 23:25:19,732 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-11-25 23:25:19,735 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:25:19,736 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-11-25 23:25:19,737 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-11-25 23:25:19,737 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-11-25 23:25:19,738 DEBUG o.h.o.i.factory [JavaFX Application Thread] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-11-25 23:25:19,764 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-11-25 23:25:19,766 DEBUG o.h.c.i.RegionFactoryInitiator [JavaFX Application Thread] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-11-25 23:25:20,050 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 23:25:20,050 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 23:25:20,050 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4a3f1198
2023-11-25 23:25:20,050 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 23:25:20,051 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3933461
2023-11-25 23:25:20,051 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 23:25:20,052 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@41533222
2023-11-25 23:25:20,052 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:25:20,052 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@69e014a1
2023-11-25 23:25:20,052 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:25:20,052 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5be16bd4
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [B -> org.hibernate.type.BasicTypeReference@41cb6cf5
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@195184cc
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration image -> org.hibernate.type.BasicTypeReference@70fdde5b
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:25:20,053 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2012b45b
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3aa4c868
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2f464c14
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@315740a1
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration int -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d29abc
2023-11-25 23:25:20,054 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18a9f5c6
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5922c2b
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e4b2670
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:25:20,055 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1edc5a7f
2023-11-25 23:25:20,057 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:25:20,057 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@490c8ba7
2023-11-25 23:25:20,057 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:25:20,057 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:25:20,057 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5deb05d9
2023-11-25 23:25:20,057 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ac4d0b2
2023-11-25 23:25:20,058 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration string -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 23:25:20,058 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@76b77c37
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5bcb90f5
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e0b9398
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@726699ab
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration text -> org.hibernate.type.BasicTypeReference@3ffd0514
2023-11-25 23:25:20,059 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@38b66626
2023-11-25 23:25:20,060 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 23:25:20,060 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3a23b5fb
2023-11-25 23:25:20,060 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 23:25:20,060 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ccec8d5
2023-11-25 23:25:20,060 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2b4ca7fd
2023-11-25 23:25:20,061 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@20c063e4
2023-11-25 23:25:20,061 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7eb966a
2023-11-25 23:25:20,061 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@de97e22
2023-11-25 23:25:20,061 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4354532d
2023-11-25 23:25:20,061 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6028c7e0
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b2b4549
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7df52460
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1cd9ddc8
2023-11-25 23:25:20,062 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 23:25:20,063 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3a681e74
2023-11-25 23:25:20,063 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 23:25:20,063 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b88157d
2023-11-25 23:25:20,063 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f8afc48
2023-11-25 23:25:20,063 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5def57ec
2023-11-25 23:25:20,063 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@270e799b
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3cb6a3fa
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@64866098
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@43f11bd3
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@17676097
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ec7a8f2
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49929912
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 23:25:20,064 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2f63c70
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e398761
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@d1a2a6c
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@509d78d4
2023-11-25 23:25:20,065 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@633bcb0b
2023-11-25 23:25:20,066 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@15b4a82
2023-11-25 23:25:20,066 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:25:20,066 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5dce498f
2023-11-25 23:25:20,066 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:25:20,066 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:25:20,066 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66aed13a
2023-11-25 23:25:20,067 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5b703d77
2023-11-25 23:25:20,067 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a463c1
2023-11-25 23:25:20,068 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:25:20,069 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f89c06b
2023-11-25 23:25:20,069 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f3ee3a1
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@657feab4
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@466637b1
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@278d3d8e
2023-11-25 23:25:20,070 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 23:25:20,071 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6fe6e135
2023-11-25 23:25:20,071 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration url -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 23:25:20,071 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@75569c37
2023-11-25 23:25:20,071 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@27af693
2023-11-25 23:25:20,082 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 23:25:20,082 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60db95fe
2023-11-25 23:25:20,084 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@165eb05
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1783524e
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@11444a5a
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@736a7fbd
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5df98f16
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@50e5a7c5
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@63c03119
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43772d4b
2023-11-25 23:25:20,085 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52e78b0c
2023-11-25 23:25:20,099 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1dfd30ab] into BootstrapContext; was [null]
2023-11-25 23:25:20,099 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c4cf803] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@10fe3347]
2023-11-25 23:25:20,278 DEBUG o.h.b.i.BootstrapContextImpl [JavaFX Application Thread] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2023-11-25 23:25:20,278 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2023-11-25 23:25:20,320 WARN o.h.o.c.pooling [JavaFX Application Thread] HHH10001002: Using built-in connection pool (not intended for production use)
2023-11-25 23:25:20,330 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-11-25 23:25:20,330 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost:3306/music_groups]
2023-11-25 23:25:20,331 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001001: Connection properties: {password=123456, user=root}
2023-11-25 23:25:20,331 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001003: Autocommit mode: false
2023-11-25 23:25:20,336 DEBUG o.h.o.c.pooling [JavaFX Application Thread] Initializing Connection pool with 1 Connections
2023-11-25 23:25:20,336 INFO o.h.o.c.pooling [JavaFX Application Thread] HHH10001115: Connection pool size: 20 (min=1)
2023-11-25 23:25:20,980 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-11-25 23:25:20,980 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
      major : 8
      minor : 2
2023-11-25 23:25:20,981 DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator [JavaFX Application Thread] JDBC version : 4.2
2023-11-25 23:25:21,065 DEBUG o.h.o.dialect [JavaFX Application Thread] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.34
2023-11-25 23:25:21,080 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-11-25 23:25:21,080 DEBUG o.h.e.j.e.s.IdentifierHelperBuilder [JavaFX Application Thread] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-11-25 23:25:21,108 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1073863f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7349e0ad)
2023-11-25 23:25:21,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b750514) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4719ded6)
2023-11-25 23:25:21,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b57ea74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7727273b)
2023-11-25 23:25:21,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1419d16e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d7f5255)
2023-11-25 23:25:21,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@698f0fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@27dfe331)
2023-11-25 23:25:21,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d97d405) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a1ddc18)
2023-11-25 23:25:21,109 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@bfd11b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53e3ad95)
2023-11-25 23:25:21,110 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10976c10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@641e8f06)
2023-11-25 23:25:21,110 DEBUG o.h.t.d.s.s.DdlTypeRegistry [JavaFX Application Thread] addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70d62a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49cce8d5)
2023-11-25 23:25:21,111 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-11-25 23:25:21,111 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-11-25 23:25:21,113 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-11-25 23:25:21,116 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:25:21,117 DEBUG o.h.t.d.j.s.JdbcTypeRegistry [JavaFX Application Thread] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-11-25 23:25:21,122 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration null -> org.hibernate.type.NullType@64ab5601
2023-11-25 23:25:21,122 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@165eb05`
2023-11-25 23:25:21,134 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:25:21,135 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:25:21,135 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-11-25 23:25:21,135 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:25:21,135 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:25:21,135 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-11-25 23:25:21,137 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration org.hibernate.type.OffsetTimeType -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:25:21,137 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:25:21,137 DEBUG o.h.t.BasicTypeRegistry [JavaFX Application Thread] Adding type registration java.time.OffsetTime -> basicType@3(java.time.OffsetTime,3007)
2023-11-25 23:25:21,139 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f55ae9a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@617c7772]
2023-11-25 23:25:21,213 DEBUG o.h.b.m.r.Namespace [JavaFX Application Thread] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-11-25 23:25:21,219 DEBUG o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl [JavaFX Application Thread] Skipping explicit MappedSuperclass Person, the class will be discovered analyzing the implementing class
2023-11-25 23:25:21,258 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Group
2023-11-25 23:25:21,270 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Group
2023-11-25 23:25:21,279 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Group on table my_groups
2023-11-25 23:25:21,296 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:25:21,332 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_id')
2023-11-25 23:25:21,334 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:25:21,335 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:25:21,341 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:25:21,349 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:id]
2023-11-25 23:25:21,356 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:25:21,363 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_id
2023-11-25 23:25:21,364 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:25:21,367 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(group_id)]), id, identity, , ...)
2023-11-25 23:25:21,374 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,376 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,394 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='listOfMembers_ORDER')
2023-11-25 23:25:21,399 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,400 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='listOfMembers_KEY')
2023-11-25 23:25:21,401 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='listOfMembers_KEY')
2023-11-25 23:25:21,404 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,404 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,408 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.listOfMembers
2023-11-25 23:25:21,411 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property listOfMembers
2023-11-25 23:25:21,413 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_main_genre')
2023-11-25 23:25:21,413 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property mainGenre with lazy=false
2023-11-25 23:25:21,413 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:mainGenre]
2023-11-25 23:25:21,414 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for mainGenre
2023-11-25 23:25:21,414 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_main_genre
2023-11-25 23:25:21,414 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property mainGenre
2023-11-25 23:25:21,415 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_name')
2023-11-25 23:25:21,415 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:25:21,415 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:name]
2023-11-25 23:25:21,416 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:25:21,416 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_name
2023-11-25 23:25:21,416 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:25:21,416 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_place_in_chart')
2023-11-25 23:25:21,417 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property placeInChart with lazy=false
2023-11-25 23:25:21,417 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:placeInChart]
2023-11-25 23:25:21,417 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for placeInChart
2023-11-25 23:25:21,417 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_place_in_chart
2023-11-25 23:25:21,417 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property placeInChart
2023-11-25 23:25:21,417 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,418 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,418 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='repertoire_ORDER')
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='repertoire_KEY')
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='repertoire_KEY')
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.repertoire
2023-11-25 23:25:21,419 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property repertoire
2023-11-25 23:25:21,420 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,421 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,421 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: IndexColumn(column='tours_ORDER')
2023-11-25 23:25:21,422 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,422 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tours_KEY')
2023-11-25 23:25:21,423 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='tours_KEY')
2023-11-25 23:25:21,424 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,424 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn()
2023-11-25 23:25:21,424 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Collection role: Group.tours
2023-11-25 23:25:21,424 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tours
2023-11-25 23:25:21,425 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='group_year_of_foundation')
2023-11-25 23:25:21,425 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property yearOfFoundation with lazy=false
2023-11-25 23:25:21,425 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Group:yearOfFoundation]
2023-11-25 23:25:21,425 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for yearOfFoundation
2023-11-25 23:25:21,425 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: my_groups.group_year_of_foundation
2023-11-25 23:25:21,425 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property yearOfFoundation
2023-11-25 23:25:21,434 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: GroupMember
2023-11-25 23:25:21,435 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name GroupMember
2023-11-25 23:25:21,435 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity GroupMember on table members
2023-11-25 23:25:21,435 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:25:21,443 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_id')
2023-11-25 23:25:21,443 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:25:21,443 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:25:21,443 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:25:21,443 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:id]
2023-11-25 23:25:21,443 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:25:21,443 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_id
2023-11-25 23:25:21,443 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:25:21,444 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(member_id)]), id, identity, , ...)
2023-11-25 23:25:21,444 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_age')
2023-11-25 23:25:21,444 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property age with lazy=false
2023-11-25 23:25:21,444 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:age]
2023-11-25 23:25:21,444 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for age
2023-11-25 23:25:21,444 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_age
2023-11-25 23:25:21,444 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property age
2023-11-25 23:25:21,447 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:25:21,448 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,452 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:25:21,452 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_name')
2023-11-25 23:25:21,452 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:25:21,452 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:name]
2023-11-25 23:25:21,454 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:25:21,454 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_name
2023-11-25 23:25:21,454 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:25:21,454 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='member_role')
2023-11-25 23:25:21,455 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property role with lazy=false
2023-11-25 23:25:21,455 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [GroupMember:role]
2023-11-25 23:25:21,455 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for role
2023-11-25 23:25:21,455 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: members.member_role
2023-11-25 23:25:21,455 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property role
2023-11-25 23:25:21,456 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Song
2023-11-25 23:25:21,456 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Song
2023-11-25 23:25:21,456 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Song on table songs
2023-11-25 23:25:21,457 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:25:21,458 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_id')
2023-11-25 23:25:21,459 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:25:21,459 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:25:21,459 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:25:21,459 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:id]
2023-11-25 23:25:21,459 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:25:21,459 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_id
2023-11-25 23:25:21,459 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:25:21,459 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(song_id)]), id, identity, , ...)
2023-11-25 23:25:21,460 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_album')
2023-11-25 23:25:21,460 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property album with lazy=false
2023-11-25 23:25:21,460 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:album]
2023-11-25 23:25:21,460 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for album
2023-11-25 23:25:21,460 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_album
2023-11-25 23:25:21,460 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property album
2023-11-25 23:25:21,461 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_duration')
2023-11-25 23:25:21,461 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property duration with lazy=false
2023-11-25 23:25:21,461 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:duration]
2023-11-25 23:25:21,461 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for duration
2023-11-25 23:25:21,462 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_duration
2023-11-25 23:25:21,462 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property duration
2023-11-25 23:25:21,462 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='song_name')
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Song:name]
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:25:21,463 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: songs.song_name
2023-11-25 23:25:21,463 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:25:21,465 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Chart
2023-11-25 23:25:21,465 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Chart
2023-11-25 23:25:21,467 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Chart on table Chart
2023-11-25 23:25:21,467 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:25:21,469 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_id')
2023-11-25 23:25:21,470 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:25:21,470 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:25:21,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property id with lazy=false
2023-11-25 23:25:21,470 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:id]
2023-11-25 23:25:21,470 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for id
2023-11-25 23:25:21,470 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_id
2023-11-25 23:25:21,470 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property id
2023-11-25 23:25:21,471 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(chart_id)]), id, identity, , ...)
2023-11-25 23:25:21,471 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_name')
2023-11-25 23:25:21,471 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property chartName with lazy=false
2023-11-25 23:25:21,471 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:chartName]
2023-11-25 23:25:21,472 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for chartName
2023-11-25 23:25:21,472 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_name
2023-11-25 23:25:21,472 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property chartName
2023-11-25 23:25:21,472 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='chart_size')
2023-11-25 23:25:21,472 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property size with lazy=false
2023-11-25 23:25:21,472 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Chart:size]
2023-11-25 23:25:21,473 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for size
2023-11-25 23:25:21,473 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: Chart.chart_size
2023-11-25 23:25:21,473 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property size
2023-11-25 23:25:21,473 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Binding entity from annotated class: Tour
2023-11-25 23:25:21,474 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Import with entity name Tour
2023-11-25 23:25:21,474 DEBUG o.h.b.m.i.EntityBinder [JavaFX Application Thread] Bind entity Tour on table tours
2023-11-25 23:25:21,474 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-11-25 23:25:21,477 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_id')
2023-11-25 23:25:21,477 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:25:21,477 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:25:21,477 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property tourId with lazy=false
2023-11-25 23:25:21,477 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:tourId]
2023-11-25 23:25:21,477 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for tourId
2023-11-25 23:25:21,477 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_id
2023-11-25 23:25:21,477 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property tourId
2023-11-25 23:25:21,478 DEBUG o.h.b.m.i.BinderHelper [JavaFX Application Thread] #makeIdGenerator(BasicValue([Column(tour_id)]), tourId, identity, , ...)
2023-11-25 23:25:21,478 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_beginning')
2023-11-25 23:25:21,478 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfBeginning with lazy=false
2023-11-25 23:25:21,478 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfBeginning]
2023-11-25 23:25:21,479 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfBeginning
2023-11-25 23:25:21,479 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_beginning
2023-11-25 23:25:21,479 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfBeginning
2023-11-25 23:25:21,479 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_date_of_end')
2023-11-25 23:25:21,479 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property dateOfEnd with lazy=false
2023-11-25 23:25:21,479 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:dateOfEnd]
2023-11-25 23:25:21,480 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for dateOfEnd
2023-11-25 23:25:21,480 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_date_of_end
2023-11-25 23:25:21,480 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property dateOfEnd
2023-11-25 23:25:21,480 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedJoinColumn(column='group_id')
2023-11-25 23:25:21,481 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn()
2023-11-25 23:25:21,481 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property group
2023-11-25 23:25:21,481 DEBUG o.h.b.m.i.AnnotatedColumn [JavaFX Application Thread] Binding column: AnnotatedColumn(column='tour_name')
2023-11-25 23:25:21,482 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] MetadataSourceProcessor property name with lazy=false
2023-11-25 23:25:21,482 DEBUG o.h.b.m.i.AbstractPropertyHolder [JavaFX Application Thread] Attempting to locate auto-apply AttributeConverter for property [Tour:name]
2023-11-25 23:25:21,482 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] building BasicValue for name
2023-11-25 23:25:21,482 DEBUG o.h.m.BasicValue [JavaFX Application Thread] Skipping column re-registration: tours.tour_name
2023-11-25 23:25:21,482 DEBUG o.h.b.m.i.PropertyBinder [JavaFX Application Thread] Building property name
2023-11-25 23:25:21,485 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for mainGenre
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for placeInChart
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for yearOfFoundation
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for age
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:25:21,487 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for role
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for album
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for duration
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for id
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for chartName
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for size
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for tourId
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfBeginning
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for dateOfEnd
2023-11-25 23:25:21,488 DEBUG o.h.b.m.i.BasicValueBinder [JavaFX Application Thread] Starting `BasicValueBinder#fillSimpleValue` for name
2023-11-25 23:25:21,496 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [group_id] to be non-null as it is part of the primary key for table [my_groups]
2023-11-25 23:25:21,497 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [member_id] to be non-null as it is part of the primary key for table [members]
2023-11-25 23:25:21,497 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [song_id] to be non-null as it is part of the primary key for table [songs]
2023-11-25 23:25:21,497 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [chart_id] to be non-null as it is part of the primary key for table [chart]
2023-11-25 23:25:21,497 DEBUG o.h.m.PrimaryKey [JavaFX Application Thread] Forcing column [tour_id] to be non-null as it is part of the primary key for table [tours]
2023-11-25 23:25:21,497 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.listOfMembers
2023-11-25 23:25:21,505 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.listOfMembers through a foreign key
2023-11-25 23:25:21,508 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.listOfMembers -> members
2023-11-25 23:25:21,510 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property GroupMember.group
2023-11-25 23:25:21,510 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: GroupMember
2023-11-25 23:25:21,511 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.repertoire
2023-11-25 23:25:21,511 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.repertoire through a foreign key
2023-11-25 23:25:21,511 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.repertoire -> songs
2023-11-25 23:25:21,511 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Song.group
2023-11-25 23:25:21,511 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Song
2023-11-25 23:25:21,512 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Second pass for collection: Group.tours
2023-11-25 23:25:21,512 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Binding a OneToMany: Group.tours through a foreign key
2023-11-25 23:25:21,512 DEBUG o.h.b.m.i.CollectionBinder [JavaFX Application Thread] Mapping collection: Group.tours -> tours
2023-11-25 23:25:21,512 DEBUG o.h.b.m.i.TableBinder [JavaFX Application Thread] Retrieving property Tour.group
2023-11-25 23:25:21,512 DEBUG o.h.b.m.i.CollectionSecondPass [JavaFX Application Thread] Mapped collection key: group_id, one-to-many: Tour
2023-11-25 23:25:21,513 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:25:21,516 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:25:21,516 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:25:21,536 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:25:21,536 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:25:21,536 DEBUG o.h.b.i.InFlightMetadataCollectorImpl [JavaFX Application Thread] Resolving reference to class: Group
2023-11-25 23:25:21,753 INFO o.h.b.i.BytecodeProviderInitiator [JavaFX Application Thread] HHH000021: Bytecode provider name : bytebuddy
2023-11-25 23:25:22,052 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Building session factory
2023-11-25 23:25:22,149 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:25:22,149 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiating SessionFactory with settings: {java.specification.version=19, javafx.runtime.version=21+31, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=D:\tanki\University\OOP\LAB\Lab1\target\classes;C:\Users\tanki\.m2\repository\org\hibernate\orm\hibernate-core\6.2.7.Final\hibernate-core-6.2.7.Final.jar;C:\Users\tanki\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\tanki\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\tanki\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\tanki\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\tanki\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\tanki\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\tanki\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\tanki\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\tanki\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\tanki\.m2\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar;C:\Users\tanki\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\tanki\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\tanki\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\tanki\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\tanki\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-site-plugin\3.4\maven-site-plugin-3.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-exec\1.2\maven-reporting-exec-1.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-util\1.7\aether-util-1.7.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-core\3.0\maven-core-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model-builder\3.0\maven-model-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-aether-provider\3.0\maven-aether-provider-3.0.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-impl\1.7\aether-impl-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-spi\1.7\aether-spi-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\aether\aether-api\1.7\aether-api-1.7.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-plexus\1.4.2\sisu-inject-plexus-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-inject-bean\1.4.2\sisu-inject-bean-1.4.2.jar;C:\Users\tanki\.m2\repository\org\sonatype\sisu\sisu-guice\2.1.7\sisu-guice-2.1.7-noaop.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-interpolation\1.14\plexus-interpolation-1.14.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-classworlds\2.2.3\plexus-classworlds-2.2.3.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-component-annotations\1.5.5\plexus-component-annotations-1.5.5.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-sec-dispatcher\1.3\plexus-sec-dispatcher-1.3.jar;C:\Users\tanki\.m2\repository\org\sonatype\plexus\plexus-cipher\1.4\plexus-cipher-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-model\3.0\maven-model-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-plugin-api\3.0\maven-plugin-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings\3.0\maven-settings-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-settings-builder\3.0\maven-settings-builder-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-archiver\2.4.2\maven-archiver-2.4.2.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-sink-api\1.6\doxia-sink-api-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-logging-api\1.6\doxia-logging-api-1.6.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-container-default\1.0-alpha-30\plexus-container-default-1.0-alpha-30.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-core\1.6\doxia-core-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpclient\4.0.2\httpclient-4.0.2.jar;C:\Users\tanki\.m2\repository\org\apache\httpcomponents\httpcore\4.0.1\httpcore-4.0.1.jar;C:\Users\tanki\.m2\repository\xmlunit\xmlunit\1.5\xmlunit-1.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xhtml\1.6\doxia-module-xhtml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-apt\1.6\doxia-module-apt-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-xdoc\1.6\doxia-module-xdoc-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-fml\1.6\doxia-module-fml-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-module-markdown\1.6\doxia-module-markdown-1.6.jar;C:\Users\tanki\.m2\repository\org\pegdown\pegdown\1.2.1\pegdown-1.2.1.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-java\1.1.4\parboiled-java-1.1.4.jar;C:\Users\tanki\.m2\repository\org\parboiled\parboiled-core\1.1.4\parboiled-core-1.1.4.jar;C:\Users\tanki\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-decoration-model\1.6\doxia-decoration-model-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-site-renderer\1.6\doxia-site-renderer-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity-tools\2.0\velocity-tools-2.0.jar;C:\Users\tanki\.m2\repository\commons-chain\commons-chain\1.1\commons-chain-1.1.jar;C:\Users\tanki\.m2\repository\sslext\sslext\1.2-0\sslext-1.2-0.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-core\1.3.8\struts-core-1.3.8.jar;C:\Users\tanki\.m2\repository\antlr\antlr\2.7.2\antlr-2.7.2.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-taglib\1.3.8\struts-taglib-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\struts\struts-tiles\1.3.8\struts-tiles-1.3.8.jar;C:\Users\tanki\.m2\repository\org\apache\maven\doxia\doxia-integration-tools\1.6\doxia-integration-tools-1.6.jar;C:\Users\tanki\.m2\repository\org\apache\maven\wagon\wagon-provider-api\1.0\wagon-provider-api-1.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-archiver\2.4.3\plexus-archiver-2.4.3.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-compress\1.5\commons-compress-1.5.jar;C:\Users\tanki\.m2\repository\org\tukaani\xz\1.2\xz-1.2.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-i18n\1.0-beta-7\plexus-i18n-1.0-beta-7.jar;C:\Users\tanki\.m2\repository\org\apache\velocity\velocity\1.5\velocity-1.5.jar;C:\Users\tanki\.m2\repository\oro\oro\2.0.8\oro-2.0.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-velocity\1.1.8\plexus-velocity-1.1.8.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-utils\3.0.15\plexus-utils-3.0.15.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty\6.1.25\jetty-6.1.25.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\servlet-api\2.5-20081211\servlet-api-2.5-20081211.jar;C:\Users\tanki\.m2\repository\org\mortbay\jetty\jetty-util\6.1.25\jetty-util-6.1.25.jar;C:\Users\tanki\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\tanki\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-dependency-plugin\3.1.1\maven-dependency-plugin-3.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-artifact\3.0\maven-artifact-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-repository-metadata\3.0\maven-repository-metadata-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-api\3.0\maven-reporting-api-3.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\reporting\maven-reporting-impl\2.3\maven-reporting-impl-2.3.jar;C:\Users\tanki\.m2\repository\commons-validator\commons-validator\1.3.1\commons-validator-1.3.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\file-management\3.0.0\file-management-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-io\3.0.0\maven-shared-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\maven-compat\3.0\maven-compat-3.0.jar;C:\Users\tanki\.m2\repository\org\codehaus\plexus\plexus-io\3.0.0\plexus-io-3.0.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-analyzer\1.10\maven-dependency-analyzer-1.10.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm\6.1.1\asm-6.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-dependency-tree\3.0.1\maven-dependency-tree-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-common-artifact-filters\3.0.1\maven-common-artifact-filters-3.0.1.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-artifact-transfer\0.9.1\maven-artifact-transfer-0.9.1.jar;C:\Users\tanki\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\tanki\.m2\repository\org\slf4j\slf4j-api\1.7.5\slf4j-api-1.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.2.0\maven-shared-utils-3.2.0.jar;C:\Users\tanki\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\tanki\.m2\repository\classworlds\classworlds\1.1\classworlds-1.1.jar;C:\Users\tanki\.m2\repository\net\sf\jasperreports\jasperreports\6.20.6\jasperreports-6.20.6.jar;C:\Users\tanki\.m2\repository\commons-beanutils\commons-beanutils\1.9.4\commons-beanutils-1.9.4.jar;C:\Users\tanki\.m2\repository\commons-digester\commons-digester\2.1\commons-digester-2.1.jar;C:\Users\tanki\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\tanki\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\tanki\.m2\repository\com\github\librepdf\openpdf\1.3.30.jaspersoft.3\openpdf-1.3.30.jaspersoft.3.jar;C:\Users\tanki\.m2\repository\org\jfree\jcommon\1.0.23\jcommon-1.0.23.jar;C:\Users\tanki\.m2\repository\org\jfree\jfreechart\1.0.19\jfreechart-1.0.19.jar;C:\Users\tanki\.m2\repository\org\eclipse\jdt\ecj\3.21.0\ecj-3.21.0.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-xml\2.14.1\jackson-dataformat-xml-2.14.1.jar;C:\Users\tanki\.m2\repository\org\codehaus\woodstox\stax2-api\4.2.1\stax2-api-4.2.1.jar;C:\Users\tanki\.m2\repository\com\fasterxml\woodstox\woodstox-core\6.4.0\woodstox-core-6.4.0.jar;C:\Users\tanki\.m2\repository\org\apache\maven\plugins\maven-deploy-plugin\3.1.0\maven-deploy-plugin-3.1.0.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-util\1.0.0.v20140518\aether-util-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\eclipse\aether\aether-api\1.0.0.v20140518\aether-api-1.0.0.v20140518.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-base\21\javafx-base-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-controls\21\javafx-controls-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-graphics\21\javafx-graphics-21-win.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy\4.0.15\groovy-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-ant\4.0.15\groovy-ant-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant\1.10.14\ant-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-junit\1.10.14\ant-junit-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-launcher\1.10.14\ant-launcher-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\ant\ant-antlr\1.10.14\ant-antlr-1.10.14.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-cli-picocli\4.0.15\groovy-cli-picocli-4.0.15.jar;C:\Users\tanki\.m2\repository\info\picocli\picocli\4.7.5\picocli-4.7.5.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-console\4.0.15\groovy-console-4.0.15.jar;C:\Users\tanki\.m2\repository\com\github\javaparser\javaparser-core\3.25.5\javaparser-core-3.25.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-util\9.5\asm-util-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-tree\9.5\asm-tree-9.5.jar;C:\Users\tanki\.m2\repository\org\ow2\asm\asm-analysis\9.5\asm-analysis-9.5.jar;C:\Users\tanki\.m2\repository\org\abego\treelayout\org.abego.treelayout.core\1.0.3\org.abego.treelayout.core-1.0.3.jar;C:\Users\tanki\.m2\repository\org\apache\ivy\ivy\2.5.2\ivy-2.5.2.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-datetime\4.0.15\groovy-datetime-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-docgenerator\4.0.15\groovy-docgenerator-4.0.15.jar;C:\Users\tanki\.m2\repository\com\thoughtworks\qdox\qdox\1.12.1\qdox-1.12.1.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovydoc\4.0.15\groovy-groovydoc-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-groovysh\4.0.15\groovy-groovysh-4.0.15.jar;C:\Users\tanki\.m2\repository\jline\jline\2.14.6\jline-2.14.6.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jmx\4.0.15\groovy-jmx-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-json\4.0.15\groovy-json-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-jsr223\4.0.15\groovy-jsr223-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-macro\4.0.15\groovy-macro-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-nio\4.0.15\groovy-nio-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-servlet\4.0.15\groovy-servlet-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-sql\4.0.15\groovy-sql-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-swing\4.0.15\groovy-swing-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-templates\4.0.15\groovy-templates-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test\4.0.15\groovy-test-4.0.15.jar;C:\Users\tanki\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\tanki\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-test-junit5\4.0.15\groovy-test-junit5-4.0.15.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-launcher\1.10.0\junit-platform-launcher-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-engine\1.10.0\junit-platform-engine-1.10.0.jar;C:\Users\tanki\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.0\junit-jupiter-engine-5.10.0.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-xml\4.0.15\groovy-xml-4.0.15.jar;C:\Users\tanki\.m2\repository\org\apache\groovy\groovy-yaml\4.0.15\groovy-yaml-4.0.15.jar;C:\Users\tanki\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-yaml\2.15.2\jackson-dataformat-yaml-2.15.2.jar;C:\Users\tanki\.m2\repository\org\yaml\snakeyaml\2.0\snakeyaml-2.0.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-fxml\21\javafx-fxml-21-win.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21.jar;C:\Users\tanki\.m2\repository\org\openjfx\javafx-swing\21\javafx-swing-21-win.jar;C:\Users\tanki\.m2\repository\jaxen\jaxen\1.1.1\jaxen-1.1.1.jar;C:\Users\tanki\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\tanki\.m2\repository\jdom\jdom\1.0\jdom-1.0.jar;C:\Users\tanki\.m2\repository\xml-apis\xml-apis\1.4.01\xml-apis-1.4.01.jar;C:\Users\tanki\.m2\repository\xerces\xercesImpl\2.12.2\xercesImpl-2.12.2.jar;C:\Users\tanki\.m2\repository\xom\xom\1.0\xom-1.0.jar;C:\Users\tanki\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Users\tanki\.m2\repository\xalan\xalan\2.6.0\xalan-2.6.0.jar;C:\Users\tanki\.m2\repository\com\ibm\icu\icu4j\2.6.1\icu4j-2.6.1.jar;C:\Users\tanki\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\tanki\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0\junit-platform-commons-1.10.0.jar;C:\Users\tanki\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-core\2.22.0\log4j-core-2.22.0.jar;C:\Users\tanki\.m2\repository\org\apache\logging\log4j\log4j-api\2.22.0\log4j-api-2.22.0.jar;C:\Users\tanki\.m2\repository\com\itextpdf\itextpdf\5.5.13.3\itextpdf-5.5.13.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, java.vm.specification.version=19, os.name=Windows 11, javafx.version=21, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=RU, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=D:\Program Files\Java\bin, sun.java.command=App, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\tanki, user.language=ru, sun.stderr.encoding=UTF-8, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Program Files\Common Files\Oracle\Java\javafx-sdk-21\lib, java.version.date=2022-10-18, java.home=D:\Program Files\Java, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, sun.stdout.encoding=UTF-8, line.separator=
, hibernate.persistenceUnitName=test, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=stukenvitalii, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/music_groups, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\tanki\AppData\Local\Temp\, java.version=19.0.1, user.dir=D:\tanki\University\OOP\LAB\Lab1, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/music_groups, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77666dff, native.encoding=UTF-8, java.library.path=D:\Program Files\Java\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Cmake\bin;D:\Program Files\Neovim\/bin;C:\ProgramData\chocolatey\bin;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\dotnet\;D:\tanki\MinGW\bin;D:\Program Files\MiKTeX\miktex\bin\x64\;D:\StrawPerl\c\bin;D:\StrawPerl\perl\site\bin;D:\StrawPerl\perl\bin;C:\ProgramData\chocolatey\lib\cunit\lib;C:\ProgramData\chocolatey\lib\tinyxml2\lib;C:\ProgramData\chocolatey\lib\bullet\lib;C:\Program Files\dotnet\;C:\Android\platform-tools;C:\Program Files\WireGuard\;D:\Program Files (x86)\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\tanki\AppData\Local\Programs\Python\Python311\;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;D:\Program Files\PyCharm Edu 2020.2\bin;D:\Program Files\CLion 2021.1\bin;D:\Microsoft VS Code\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;C:\Users\tanki\AppData\Local\Microsoft\WindowsApps;C:\tools\neovim\nvim-win64\bin;D:\Program Files\JetBrains\PyCharm Community Edition 2022.2.1\bin;;D:\tanki\MinGW\bin;D:\Program Files\JetBrains\IntelliJ IDEA 2022.3.3\bin;;D:\Program Files\OpenSSL\OpenSSL-Win64\bin\;D:\Program Files\JetBrains\CLion 2023.2.2\bin;;C:\Program Files\Apache Software Foundation\Tomcat 10.1\bin;;., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=63.0}
2023-11-25 23:25:22,156 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Session factory constructed with filter configurations : {}
2023-11-25 23:25:22,173 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:25:22,235 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-11-25 23:25:22,236 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-11-25 23:25:22,238 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-11-25 23:25:22,239 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-11-25 23:25:22,241 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4970a585] under count; prior registration was null
2023-11-25 23:25:22,244 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@48c81014] under every; prior registration was null
2023-11-25 23:25:22,244 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@20c41ffc] under any; prior registration was null
2023-11-25 23:25:22,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-11-25 23:25:22,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-11-25 23:25:22,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-11-25 23:25:22,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-11-25 23:25:22,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-11-25 23:25:22,245 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-11-25 23:25:22,246 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-11-25 23:25:22,246 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-11-25 23:25:22,246 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-11-25 23:25:22,246 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-11-25 23:25:22,246 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-11-25 23:25:22,246 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-11-25 23:25:22,247 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-11-25 23:25:22,247 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-11-25 23:25:22,247 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-11-25 23:25:22,247 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-11-25 23:25:22,247 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-11-25 23:25:22,250 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@451fda7f] under sinh; prior registration was null
2023-11-25 23:25:22,250 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5dd229] under cosh; prior registration was null
2023-11-25 23:25:22,250 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@133425c6] under tanh; prior registration was null
2023-11-25 23:25:22,250 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f] under pi; prior registration was null
2023-11-25 23:25:22,250 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9] under log; prior registration was null
2023-11-25 23:25:22,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-11-25 23:25:22,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-11-25 23:25:22,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-11-25 23:25:22,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-11-25 23:25:22,251 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-11-25 23:25:22,252 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : length -> character_length
2023-11-25 23:25:22,255 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@21d1d881] under position; prior registration was null
2023-11-25 23:25:22,257 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4a6e5f0c] under overlay; prior registration was null
2023-11-25 23:25:22,258 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@8b713c] under trim; prior registration was null
2023-11-25 23:25:22,260 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1023e1ce] under cast; prior registration was null
2023-11-25 23:25:22,260 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@102a85c] under collate; prior registration was null
2023-11-25 23:25:22,261 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4c22fc36] under extract; prior registration was null
2023-11-25 23:25:22,262 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-11-25 23:25:22,262 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-11-25 23:25:22,262 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@72a009f0] under ifnull; prior registration was null
2023-11-25 23:25:22,263 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-11-25 23:25:22,263 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-11-25 23:25:22,263 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@74fe4296] under pad; prior registration was null
2023-11-25 23:25:22,265 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6e2ef709] under str; prior registration was null
2023-11-25 23:25:22,267 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a8e9ad8] under format; prior registration was null
2023-11-25 23:25:22,268 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@213832c8] under timestampadd; prior registration was null
2023-11-25 23:25:22,270 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7e374d91] under timestampdiff; prior registration was null
2023-11-25 23:25:22,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : dateadd -> timestampadd
2023-11-25 23:25:22,271 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : datediff -> timestampdiff
2023-11-25 23:25:22,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c6ad7fd] under current_date; prior registration was null
2023-11-25 23:25:22,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@384bc1eb] under current_time; prior registration was null
2023-11-25 23:25:22,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8ec6d91] under current_timestamp; prior registration was null
2023-11-25 23:25:22,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current date -> current_date
2023-11-25 23:25:22,272 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current time -> current_time
2023-11-25 23:25:22,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current timestamp -> current_timestamp
2023-11-25 23:25:22,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4afe40c7] under local_date; prior registration was null
2023-11-25 23:25:22,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30d1b35a] under local_time; prior registration was null
2023-11-25 23:25:22,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56f36832] under local_datetime; prior registration was null
2023-11-25 23:25:22,273 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d180798] under offset_datetime; prior registration was null
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local date -> local_date
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local time -> local_time
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : local datetime -> local_datetime
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : offset datetime -> offset_datetime
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5d88084] under instant; prior registration was null
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : current_instant -> instant
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@49957509] under sql; prior registration was null
2023-11-25 23:25:22,274 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b28e6c9
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-11-25 23:25:22,275 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-11-25 23:25:22,276 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@546d70b7] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@643ebb3d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : day -> dayofmonth
2023-11-25 23:25:22,277 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-11-25 23:25:22,278 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42f268d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@21d1d881
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-11-25 23:25:22,279 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-11-25 23:25:22,286 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@16eaf2dd] under trunc; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : truncate -> trunc
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a4b9426] under bitand; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17ba2564] under bitor; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a9dc1a5] under bitxor; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ba0a631] under bitnot; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-11-25 23:25:22,287 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4dcce1c7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@a8e9ad8
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30d1b35a
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@56f36832
2023-11-25 23:25:22,288 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-11-25 23:25:22,289 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b9b6c1f] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@305f0e9f
2023-11-25 23:25:22,289 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fef1420] under chr; prior registration was null
2023-11-25 23:25:22,289 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registering alternate key : char -> chr
2023-11-25 23:25:22,289 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2130b6c2] under sysdate; prior registration was null
2023-11-25 23:25:22,289 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-11-25 23:25:22,290 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-11-25 23:25:22,290 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-11-25 23:25:22,290 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-11-25 23:25:22,290 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-11-25 23:25:22,290 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-11-25 23:25:22,292 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@ea0f425] under rank; prior registration was null
2023-11-25 23:25:22,292 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@29b4fbdf] under dense_rank; prior registration was null
2023-11-25 23:25:22,292 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2b7e400f] under percent_rank; prior registration was null
2023-11-25 23:25:22,292 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5bd11341] under cume_dist; prior registration was null
2023-11-25 23:25:22,293 DEBUG o.h.q.s.f.SqmFunctionRegistry [JavaFX Application Thread] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5602ab1c] under listagg; prior registration was null
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] abs(NUMERIC arg)
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double acos(NUMERIC arg)
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] adddate(DATE datetime, INTEGER days)
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] addtime(TIME datetime, TIME time)
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean any(BOOLEAN arg)
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer ascii(STRING arg)
2023-11-25 23:25:22,297 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double asin(NUMERIC arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan(NUMERIC arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double avg(NUMERIC arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_and(arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer bit_length(STRING_OR_CLOB arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bit_or(arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitand(arg0, arg1)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitnot(arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitor(arg0, arg1)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] bitxor(arg0, arg1)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] cast(arg as Type)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ceiling(NUMERIC arg)
2023-11-25 23:25:22,298 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character char(INTEGER arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer character_length(STRING_OR_CLOB arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Character chr(INTEGER arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] coalesce(arg0[, arg1[, ...]])
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String collate(STRING string as COLLATION collation)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String concat(STRING string0[, STRING string1[, ...]])
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cos(NUMERIC arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cosh(NUMERIC arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cot(NUMERIC arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long count([distinct ]{arg|*})
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer crc32(arg)
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double cume_dist([arg0[, ...]])
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date curdate()
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current date
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current time
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current timestamp
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date current_date
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant current_instant
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time current_time
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp current_timestamp
2023-11-25 23:25:22,299 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time curtime()
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date date(arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer datediff(DATE end, DATE start)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer day(DATE arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String dayname(DATE arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofmonth(DATE arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofweek(DATE arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer dayofyear(DATE arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double degrees(NUMERIC arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long dense_rank([arg0[, ...]])
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Boolean every(BOOLEAN arg)
2023-11-25 23:25:22,300 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double exp(NUMERIC arg)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] first_valueANY value
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] floor(NUMERIC arg)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String format(TEMPORAL datetime as STRING pattern)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer hour(TIME arg)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] ifnull(arg0, arg1)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Instant instant
2023-11-25 23:25:22,301 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] lagANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date last_day(DATE arg)
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] last_valueANY value
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] leadANY value[, INTEGER offset[, ANY default]]
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String left(STRING string, INTEGER length)
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer length(STRING_OR_CLOB arg)
2023-11-25 23:25:22,302 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String listagg(STRING arg0, STRING arg1)
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double ln(NUMERIC arg)
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local date
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local datetime
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local time
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDate local_date
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalDateTime local_datetime
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] LocalTime local_time
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtime
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp localtimestamp
2023-11-25 23:25:22,303 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log(NUMERIC arg0[, NUMERIC arg1])
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log10(NUMERIC arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double log2(NUMERIC arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lower(STRING string)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String lpad(string, length[, padding])
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String ltrim(STRING string[, STRING characters])
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date makedate(INTEGER year, INTEGER dayofyear)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] max(COMPARABLE arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String md5(arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer microsecond(TIME arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] min(COMPARABLE arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer minute(TIME arg)
2023-11-25 23:25:22,304 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer mod(INTEGER arg0, INTEGER arg1)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer month(DATE arg)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String monthname(DATE arg)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp now()
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nth_valueANY value, INTEGER nth
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] nullif(arg0, arg1)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer octet_length(STRING_OR_CLOB arg)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset datetime
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] OffsetDateTime offset_datetime
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double percent_rank([arg0[, ...]])
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double pi
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer position(STRING pattern in STRING string)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double power(NUMERIC arg0, NUMERIC arg1)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer quarter(DATE arg)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double radians(NUMERIC arg)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double rand([INTEGER seed])
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long rank([arg0[, ...]])
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String repeat(STRING string, INTEGER times)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String replace(STRING string, STRING pattern, STRING replacement)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String reverse(STRING arg)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String right(STRING string, INTEGER length)
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] round(NUMERIC number[, INTEGER places])
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Long row_number()
2023-11-25 23:25:22,305 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rpad(string, length[, padding])
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String rtrim(STRING string[, STRING characters])
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer second(TIME arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha(arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha1(arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String sha2(arg0, arg1)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer sign(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sin(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sinh(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String soundex(arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String space(INTEGER arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Object sql
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double sqrt(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_pop(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double stddev_samp(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String str(arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subdate(DATE datetime, INTEGER days)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substr(STRING string, INTEGER start[, INTEGER length])
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] subtime(TIME datetime, TIME time)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] sum(arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp sysdate()
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tan(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double tanh(NUMERIC arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String time(arg)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp timestamp(arg0[, arg1])
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] basicType@13(java.lang.Long,-5)|basicType@16(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-11-25 23:25:22,306 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] trunc( ... )
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] truncate( ... )
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] String upper(STRING string)
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Date utc_date
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Time utc_time
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Timestamp utc_timestamp
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_pop(NUMERIC arg)
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double var_samp(NUMERIC arg)
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Double variance(NUMERIC arg)
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer week(DATE arg)
2023-11-25 23:25:22,307 DEBUG o.h.HQL_FUNCTIONS [JavaFX Application Thread] Integer year(DATE arg)
2023-11-25 23:25:22,316 DEBUG o.h.o.q.p.cache [JavaFX Application Thread] Starting QueryPlanCache(2048)
2023-11-25 23:25:22,548 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Group] is safe
2023-11-25 23:25:22,548 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Group
2023-11-25 23:25:22,879 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Group]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [listOfMembers]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:25:22,960 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:22,961 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:22,961 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [GroupMember] is safe
2023-11-25 23:25:22,961 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : GroupMember
2023-11-25 23:25:22,992 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [GroupMember]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [age]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:25:22,994 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `GroupMember#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:22,995 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:22,996 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:22,996 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Song] is safe
2023-11-25 23:25:22,996 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Song
2023-11-25 23:25:23,026 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Song]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [album]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:25:23,027 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Song#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:23,028 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Chart] is safe
2023-11-25 23:25:23,028 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Chart
2023-11-25 23:25:23,073 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Chart]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [chartName]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:25:23,078 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:23,079 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:23,079 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] Not known whether passed class name [Tour] is safe
2023-11-25 23:25:23,079 DEBUG o.h.b.i.ClassLoaderAccessImpl [JavaFX Application Thread] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : Tour
2023-11-25 23:25:23,116 DEBUG o.h.b.i.b.BytecodeProviderImpl [JavaFX Application Thread] HHH000513: Unable to create the ReflectionOptimizer for [Tour]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [dateOfBeginning]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1238) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:509) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500) ~[?:?]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484) ~[?:?]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55) ~[hibernate-core-6.2.7.Final.jar:6.2.7.Final]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[jakarta.persistence-api-3.1.0.jar:3.1.0]
	at DataBaseHandler.getDataFromDB(DataBaseHandler.java:29) ~[classes/:?]
	at AppController.initialize(AppController.java:103) ~[classes/:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:72) ~[javafx.base.jar:?]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:578) ~[?:?]
	at javafx.base/com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:270) ~[javafx.base.jar:?]
	at javafx.fxml/com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:84) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2688) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2563) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3376) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3332) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3300) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3272) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:3248) ~[javafx.fxml.jar:?]
	at javafx.fxml/javafx.fxml.FXMLLoader.load(FXMLLoader.java:3241) ~[javafx.fxml.jar:?]
	at App.start(App.java:23) ~[classes/:?]
	at javafx.graphics/com.sun.javafx.application.LauncherImpl.lambda$launchApplication1$9(LauncherImpl.java:839) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runAndWait$12(PlatformImpl.java:483) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:456) ~[javafx.graphics.jar:?]
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399) ~[?:?]
	at javafx.graphics/com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:455) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method) ~[javafx.graphics.jar:?]
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:185) ~[javafx.graphics.jar:?]
	at java.base/java.lang.Thread.run(Thread.java:1589) [?:?]
2023-11-25 23:25:23,119 DEBUG o.h.o.interceptor [JavaFX Application Thread] To-one property `Tour#group` was mapped with LAZY + NO_PROXY but the class was not enhanced
2023-11-25 23:25:23,158 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.listOfMembers
2023-11-25 23:25:23,163 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.listOfMembers
2023-11-25 23:25:23,163 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.listOfMembers
2023-11-25 23:25:23,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.repertoire
2023-11-25 23:25:23,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.repertoire
2023-11-25 23:25:23,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.repertoire
2023-11-25 23:25:23,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection (re)creation - Group.tours
2023-11-25 23:25:23,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection row deletions - Group.tours
2023-11-25 23:25:23,165 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Skipping collection removals - Group.tours
2023-11-25 23:25:23,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting post-init callbacks
2023-11-25 23:25:23,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:25:23,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers)#finishInitialization
2023-11-25 23:25:23,227 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.listOfMembers) - key descriptor
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire)#finishInitialization
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.repertoire) - key descriptor
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours)#finishInitialization
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping(Group.tours) - key descriptor
2023-11-25 23:25:23,235 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Group) `staticFetchableList` generator
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[GroupMember.group]
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(GroupMember) `staticFetchableList` generator
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Song.group]
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Song) `staticFetchableList` generator
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Chart) `staticFetchableList` generator
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : To-one key - NavigableRole[Tour.group]
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : Entity(Tour) `staticFetchableList` generator
2023-11-25 23:25:23,236 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.listOfMembers#{element}]) - element descriptor
2023-11-25 23:25:23,237 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.repertoire#{element}]) - element descriptor
2023-11-25 23:25:23,237 DEBUG o.h.o.m.m.creation [JavaFX Application Thread] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[Group.tours#{element}]) - element descriptor
2023-11-25 23:25:23,347 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Group
2023-11-25 23:25:23,347 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select group_id from my_groups where group_id=?
2023-11-25 23:25:23,347 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into my_groups (group_main_genre,group_name,group_place_in_chart,group_year_of_foundation) values (?,?,?,?)
2023-11-25 23:25:23,348 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update my_groups set group_main_genre=?,group_name=?,group_place_in_chart=?,group_year_of_foundation=? where group_id=?
2023-11-25 23:25:23,348 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from my_groups where group_id=?
2023-11-25 23:25:23,377 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:25:23,381 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group)] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:25:23,398 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:25:23,404 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@413c14e5] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:25:23,409 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:25:23,440 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group]
 |  +-EagerCollectionFetch [Group.listOfMembers]
 |  |  \-EntityFetchJoinedImpl [Group.listOfMembers.{element}]
 |  +-BasicFetch [Group.mainGenre]
 |  +-BasicFetch [Group.name]
 |  +-BasicFetch [Group.placeInChart]
 |  +-SelectEagerCollectionFetch [Group.repertoire]
 |  +-SelectEagerCollectionFetch [Group.tours]
 |  \-BasicFetch [Group.yearOfFoundation]

2023-11-25 23:25:23,446 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group) {
          primaryTableReference : my_groups as g1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (l1 : Group.listOfMembers) {
              primaryTableReference : members as l1_0
            }
          }
        }
      }
    }

2023-11-25 23:25:23,466 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: GroupMember
2023-11-25 23:25:23,467 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select member_id from members where member_id=?
2023-11-25 23:25:23,467 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into members (member_age,group_id,member_name,member_role) values (?,?,?,?)
2023-11-25 23:25:23,467 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update members set member_age=?,group_id=?,member_name=?,member_role=? where member_id=?
2023-11-25 23:25:23,467 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from members where member_id=?
2023-11-25 23:25:23,467 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:25:23,467 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember)] with identifierForTableGroup [GroupMember] for NavigablePath [GroupMember] 
2023-11-25 23:25:23,472 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f6fb6f7] with identifierForTableGroup [GroupMember.group] for NavigablePath [GroupMember.group] 
2023-11-25 23:25:23,473 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g2_0
2023-11-25 23:25:23,475 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:25:23,475 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1313853c] with identifierForTableGroup [GroupMember.group.repertoire] for NavigablePath [GroupMember.group.repertoire] 
2023-11-25 23:25:23,476 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(GroupMember.group.repertoire.{element})] with identifierForTableGroup [GroupMember.group.repertoire.{element}] for NavigablePath [GroupMember.group.repertoire.{element}] 
2023-11-25 23:25:23,476 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [GroupMember]
 |  +-BasicFetch [GroupMember.age]
 |  +-EntityFetchJoinedImpl [GroupMember.group]
 |  +-BasicFetch [GroupMember.name]
 |  \-BasicFetch [GroupMember.role]

2023-11-25 23:25:23,477 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : GroupMember) {
          primaryTableReference : members as g1_0
          TableGroupJoins {
            left  join LazyTableGroup (g2 : GroupMember.group) {
              primaryTableReference : my_groups as g2_0
              TableGroupJoins {
                left  join OneToManyTableGroup (r1 : GroupMember.group.repertoire) {
                  primaryTableReference : songs as r1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:25:23,478 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Song
2023-11-25 23:25:23,478 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select song_id from songs where song_id=?
2023-11-25 23:25:23,478 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into songs (song_album,song_duration,group_id,song_name) values (?,?,?,?)
2023-11-25 23:25:23,478 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update songs set song_album=?,song_duration=?,group_id=?,song_name=? where song_id=?
2023-11-25 23:25:23,478 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from songs where song_id=?
2023-11-25 23:25:23,478 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : s1_0
2023-11-25 23:25:23,478 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song)] with identifierForTableGroup [Song] for NavigablePath [Song] 
2023-11-25 23:25:23,478 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@79fb5] with identifierForTableGroup [Song.group] for NavigablePath [Song.group] 
2023-11-25 23:25:23,479 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:25:23,479 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:25:23,479 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5a7a83d] with identifierForTableGroup [Song.group.listOfMembers] for NavigablePath [Song.group.listOfMembers] 
2023-11-25 23:25:23,479 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Song.group.listOfMembers.{element})] with identifierForTableGroup [Song.group.listOfMembers.{element}] for NavigablePath [Song.group.listOfMembers.{element}] 
2023-11-25 23:25:23,479 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Song]
 |  +-BasicFetch [Song.album]
 |  +-BasicFetch [Song.duration]
 |  +-EntityFetchJoinedImpl [Song.group]
 |  \-BasicFetch [Song.name]

2023-11-25 23:25:23,480 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : Song) {
          primaryTableReference : songs as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Song.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Song.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:25:23,481 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Chart
2023-11-25 23:25:23,481 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select chart_id from Chart where chart_id=?
2023-11-25 23:25:23,481 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into Chart (chart_name,chart_size) values (?,?)
2023-11-25 23:25:23,481 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update Chart set chart_name=?,chart_size=? where chart_id=?
2023-11-25 23:25:23,481 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from Chart where chart_id=?
2023-11-25 23:25:23,481 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : c1_0
2023-11-25 23:25:23,481 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Chart)] with identifierForTableGroup [Chart] for NavigablePath [Chart] 
2023-11-25 23:25:23,482 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Chart]
 |  +-BasicFetch [Chart.chartName]
 |  \-BasicFetch [Chart.size]

2023-11-25 23:25:23,482 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : Chart) {
          primaryTableReference : Chart as c1_0
        }
      }
    }

2023-11-25 23:25:23,484 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread] Static SQL for entity: Tour
2023-11-25 23:25:23,484 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Version select: select tour_id from tours where tour_id=?
2023-11-25 23:25:23,484 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Insert (0): insert into tours (tour_date_of_beginning,tour_date_of_end,group_id,tour_name) values (?,?,?,?)
2023-11-25 23:25:23,484 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Update (0): update tours set tour_date_of_beginning=?,tour_date_of_end=?,group_id=?,tour_name=? where tour_id=?
2023-11-25 23:25:23,484 DEBUG o.h.p.e.AbstractEntityPersister [JavaFX Application Thread]  Delete (0): delete from tours where tour_id=?
2023-11-25 23:25:23,484 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:25:23,484 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour)] with identifierForTableGroup [Tour] for NavigablePath [Tour] 
2023-11-25 23:25:23,484 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49d7496b] with identifierForTableGroup [Tour.group] for NavigablePath [Tour.group] 
2023-11-25 23:25:23,485 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:25:23,485 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:25:23,485 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@72969fb2] with identifierForTableGroup [Tour.group.listOfMembers] for NavigablePath [Tour.group.listOfMembers] 
2023-11-25 23:25:23,485 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Tour.group.listOfMembers.{element})] with identifierForTableGroup [Tour.group.listOfMembers.{element}] for NavigablePath [Tour.group.listOfMembers.{element}] 
2023-11-25 23:25:23,486 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Tour]
 |  +-BasicFetch [Tour.dateOfBeginning]
 |  +-BasicFetch [Tour.dateOfEnd]
 |  +-EntityFetchJoinedImpl [Tour.group]
 |  \-BasicFetch [Tour.name]

2023-11-25 23:25:23,486 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : Tour) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Tour.group) {
              primaryTableReference : my_groups as g1_0
              TableGroupJoins {
                left  join OneToManyTableGroup (l1 : Tour.group.listOfMembers) {
                  primaryTableReference : members as l1_0
                }
              }
            }
          }
        }
      }
    }

2023-11-25 23:25:23,489 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : l1_0
2023-11-25 23:25:23,489 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2435e115] with identifierForTableGroup [Group.listOfMembers] for NavigablePath [Group.listOfMembers] 
2023-11-25 23:25:23,489 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.listOfMembers.{element})] with identifierForTableGroup [Group.listOfMembers.{element}] for NavigablePath [Group.listOfMembers.{element}] 
2023-11-25 23:25:23,493 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13463db2] with identifierForTableGroup [Group.listOfMembers.{element}.group] for NavigablePath [Group.listOfMembers.{element}.group] 
2023-11-25 23:25:23,495 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.listOfMembers
2023-11-25 23:25:23,495 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : r1_0
2023-11-25 23:25:23,495 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7f9ace71] with identifierForTableGroup [Group.repertoire] for NavigablePath [Group.repertoire] 
2023-11-25 23:25:23,495 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.repertoire.{element})] with identifierForTableGroup [Group.repertoire.{element}] for NavigablePath [Group.repertoire.{element}] 
2023-11-25 23:25:23,496 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d936f75] with identifierForTableGroup [Group.repertoire.{element}.group] for NavigablePath [Group.repertoire.{element}.group] 
2023-11-25 23:25:23,496 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.repertoire
2023-11-25 23:25:23,496 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : t1_0
2023-11-25 23:25:23,496 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@15d2b304] with identifierForTableGroup [Group.tours] for NavigablePath [Group.tours] 
2023-11-25 23:25:23,496 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group.tours.{element})] with identifierForTableGroup [Group.tours.{element}] for NavigablePath [Group.tours.{element}] 
2023-11-25 23:25:23,496 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27b9278e] with identifierForTableGroup [Group.tours.{element}.group] for NavigablePath [Group.tours.{element}.group] 
2023-11-25 23:25:23,497 DEBUG o.h.o.j.mutation [JavaFX Application Thread] Static SQL for collection: Group.tours
2023-11-25 23:25:23,553 DEBUG o.h.s.i.SessionFactoryServiceRegistryImpl [JavaFX Application Thread] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-11-25 23:25:23,553 DEBUG o.h.e.i.EntityCopyObserverFactoryInitiator [JavaFX Application Thread] Configured EntityCopyObserver strategy: disallow
2023-11-25 23:25:23,569 DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] No JtaPlatform was specified, checking resolver
2023-11-25 23:25:23,570 DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator [JavaFX Application Thread] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2023-11-25 23:25:23,580 DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver [JavaFX Application Thread] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:25:23,581 INFO o.h.e.t.j.p.i.JtaPlatformInitiator [JavaFX Application Thread] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-11-25 23:25:23,582 DEBUG o.h.t.s.TypeConfiguration$Scope [JavaFX Application Thread] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f55ae9a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c06858a]
2023-11-25 23:25:23,584 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named HQL queries
2023-11-25 23:25:23,585 DEBUG o.h.q.n.NamedObjectRepository [JavaFX Application Thread] Checking 0 named SQL queries
2023-11-25 23:25:23,585 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No schema actions specified for contributor `orm`; doing nothing
2023-11-25 23:25:23,586 DEBUG o.h.t.s.s.SchemaManagementToolCoordinator [JavaFX Application Thread] No actions found; doing nothing
2023-11-25 23:25:23,590 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6dfc7960
2023-11-25 23:25:23,591 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Registering SessionFactory: 7555983b-02ea-405b-b29d-c9234f82009c (<unnamed>)
2023-11-25 23:25:23,591 DEBUG o.h.i.SessionFactoryRegistry [JavaFX Application Thread] Not binding SessionFactory to JNDI, no JNDI name configured
2023-11-25 23:25:23,591 DEBUG o.h.i.SessionFactoryImpl [JavaFX Application Thread] Instantiated SessionFactory
2023-11-25 23:25:23,673 DEBUG o.h.s.i.StatisticsInitiator [JavaFX Application Thread] Statistics initialized [enabled=false]
2023-11-25 23:25:23,676 INFO mainLogger [JavaFX Application Thread] Trying to get data from DB
2023-11-25 23:25:23,680 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-11-25 23:25:23,680 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] begin
2023-11-25 23:25:23,686 DEBUG o.h.o.q.hql [JavaFX Application Thread] HQL : from Group
2023-11-25 23:25:23,936 DEBUG o.h.o.q.h.reservedWordAsIdentifier [JavaFX Application Thread] Encountered use of reserved word as identifier : <EOF>
2023-11-25 23:25:23,988 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Handling root path - Group
2023-11-25 23:25:23,999 DEBUG o.h.q.h.i.SemanticQueryBuilder [JavaFX Application Thread] Encountered implicit select clause : fromGroup
2023-11-25 23:25:24,018 DEBUG o.h.o.q.s.ast [JavaFX Application Thread] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `Group(39770937186900)`
            <- [root] - `Group(39770937186900)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `Group(39770937186900)`
          <- [root] - `Group(39770937186900)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-11-25 23:25:24,087 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Created new SQL alias : g1_0
2023-11-25 23:25:24,087 DEBUG o.h.o.s.a.create [JavaFX Application Thread] Registration of TableGroup [StandardTableGroup(Group(39770937186900))] with identifierForTableGroup [Group] for NavigablePath [Group] 
2023-11-25 23:25:24,100 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-EntityResultImpl [Group(39770937186900)]
 |  +-SelectEagerCollectionFetch [Group(39770937186900).listOfMembers]
 |  +-BasicFetch [Group(39770937186900).mainGenre]
 |  +-BasicFetch [Group(39770937186900).name]
 |  +-BasicFetch [Group(39770937186900).placeInChart]
 |  +-SelectEagerCollectionFetch [Group(39770937186900).repertoire]
 |  +-SelectEagerCollectionFetch [Group(39770937186900).tours]
 |  \-BasicFetch [Group(39770937186900).yearOfFoundation]

2023-11-25 23:25:24,101 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (g1 : Group(39770937186900)) {
          primaryTableReference : my_groups as g1_0
        }
      }
    }

2023-11-25 23:25:24,124 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-11-25 23:25:24,150 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,152 DEBUG o.h.o.results [JavaFX Application Thread]     Group(39770937186900).listOfMembers -> SelectEagerCollectionInitializer(Group(39770937186900).listOfMembers)@266807867 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,153 DEBUG o.h.o.results [JavaFX Application Thread]     Group(39770937186900).repertoire -> SelectEagerCollectionInitializer(Group(39770937186900).repertoire)@1832799560 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,154 DEBUG o.h.o.results [JavaFX Application Thread]     Group(39770937186900).tours -> SelectEagerCollectionInitializer(Group(39770937186900).tours)@571413400 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,154 DEBUG o.h.o.results [JavaFX Application Thread]     Group(39770937186900) -> EntityResultInitializer(Group(39770937186900))@181247385 (SingleTableEntityPersister(Group))
2023-11-25 23:25:24,169 DEBUG o.h.SQL [JavaFX Application Thread] select g1_0.group_id,g1_0.group_main_genre,g1_0.group_name,g1_0.group_place_in_chart,g1_0.group_year_of_foundation from my_groups g1_0
2023-11-25 23:25:24,196 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [1]
2023-11-25 23:25:24,198 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 1
2023-11-25 23:25:24,200 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#1
2023-11-25 23:25:24,200 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#1
2023-11-25 23:25:24,200 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#1
2023-11-25 23:25:24,203 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#1] : 1762535726
2023-11-25 23:25:24,214 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:25:24,215 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rolling Stones]
2023-11-25 23:25:24,215 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:25:24,215 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1962]
2023-11-25 23:25:24,224 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#1
2023-11-25 23:25:24,224 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,225 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [2]
2023-11-25 23:25:24,225 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 2
2023-11-25 23:25:24,225 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#2
2023-11-25 23:25:24,225 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#2
2023-11-25 23:25:24,225 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#2
2023-11-25 23:25:24,225 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#2] : 1343008832
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Pink Floyd]
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#2
2023-11-25 23:25:24,226 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 3
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#3
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#3
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#3
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#3] : 1182183199
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Picnic]
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1978]
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#3
2023-11-25 23:25:24,226 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,226 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [4]
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 4
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#4
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#4
2023-11-25 23:25:24,226 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#4
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#4] : 1671364647
2023-11-25 23:25:24,227 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Rock]
2023-11-25 23:25:24,227 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Led Zepellin]
2023-11-25 23:25:24,227 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:25:24,227 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#4
2023-11-25 23:25:24,227 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,227 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [5]
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 5
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#5
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#5
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#5
2023-11-25 23:25:24,227 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#5] : 350106780
2023-11-25 23:25:24,227 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:25:24,228 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Tool]
2023-11-25 23:25:24,228 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:25:24,228 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:25:24,228 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#5
2023-11-25 23:25:24,228 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,228 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [6]
2023-11-25 23:25:24,229 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 6
2023-11-25 23:25:24,229 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#6
2023-11-25 23:25:24,229 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#6
2023-11-25 23:25:24,229 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#6
2023-11-25 23:25:24,229 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#6] : 1792406810
2023-11-25 23:25:24,229 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Rock]
2023-11-25 23:25:24,229 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Linkin Park]
2023-11-25 23:25:24,229 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [8]
2023-11-25 23:25:24,229 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1996]
2023-11-25 23:25:24,229 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#6
2023-11-25 23:25:24,229 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,230 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [7]
2023-11-25 23:25:24,230 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 7
2023-11-25 23:25:24,230 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#7
2023-11-25 23:25:24,230 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#7
2023-11-25 23:25:24,230 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#7
2023-11-25 23:25:24,230 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#7] : 927494864
2023-11-25 23:25:24,230 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt Metal]
2023-11-25 23:25:24,230 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [System Of a Down]
2023-11-25 23:25:24,231 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:25:24,231 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:25:24,231 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#7
2023-11-25 23:25:24,231 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,231 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [8]
2023-11-25 23:25:24,231 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 8
2023-11-25 23:25:24,231 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#8
2023-11-25 23:25:24,232 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#8
2023-11-25 23:25:24,232 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#8
2023-11-25 23:25:24,232 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#8] : 2018658776
2023-11-25 23:25:24,232 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:25:24,232 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Burzum]
2023-11-25 23:25:24,232 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [10]
2023-11-25 23:25:24,232 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:25:24,232 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#8
2023-11-25 23:25:24,232 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,232 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [9]
2023-11-25 23:25:24,232 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 9
2023-11-25 23:25:24,233 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#9
2023-11-25 23:25:24,233 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#9
2023-11-25 23:25:24,233 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#9
2023-11-25 23:25:24,233 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#9] : 456243675
2023-11-25 23:25:24,233 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Black metal]
2023-11-25 23:25:24,233 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ulver]
2023-11-25 23:25:24,233 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [11]
2023-11-25 23:25:24,233 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1993]
2023-11-25 23:25:24,234 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#9
2023-11-25 23:25:24,234 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,234 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [11]
2023-11-25 23:25:24,234 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 11
2023-11-25 23:25:24,234 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#11
2023-11-25 23:25:24,234 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#11
2023-11-25 23:25:24,234 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#11
2023-11-25 23:25:24,234 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#11] : 1075249301
2023-11-25 23:25:24,234 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Doom metal]
2023-11-25 23:25:24,234 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Katatonia]
2023-11-25 23:25:24,235 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [1]
2023-11-25 23:25:24,235 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1991]
2023-11-25 23:25:24,235 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#11
2023-11-25 23:25:24,235 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,235 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [12]
2023-11-25 23:25:24,235 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 12
2023-11-25 23:25:24,235 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#12
2023-11-25 23:25:24,235 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#12
2023-11-25 23:25:24,235 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#12
2023-11-25 23:25:24,235 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#12] : 716691414
2023-11-25 23:25:24,236 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Hard rock]
2023-11-25 23:25:24,236 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Ghost]
2023-11-25 23:25:24,236 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:25:24,236 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [2006]
2023-11-25 23:25:24,236 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#12
2023-11-25 23:25:24,236 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,236 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [13]
2023-11-25 23:25:24,236 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 13
2023-11-25 23:25:24,236 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#13
2023-11-25 23:25:24,236 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#13
2023-11-25 23:25:24,236 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#13
2023-11-25 23:25:24,236 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#13] : 269585798
2023-11-25 23:25:24,238 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Prog rock]
2023-11-25 23:25:24,238 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [King Crimson]
2023-11-25 23:25:24,238 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5]
2023-11-25 23:25:24,238 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1968]
2023-11-25 23:25:24,238 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#13
2023-11-25 23:25:24,239 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,239 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [14]
2023-11-25 23:25:24,239 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 14
2023-11-25 23:25:24,239 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#14
2023-11-25 23:25:24,239 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#14
2023-11-25 23:25:24,239 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#14
2023-11-25 23:25:24,239 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#14] : 590473226
2023-11-25 23:25:24,240 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt rock]
2023-11-25 23:25:24,240 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Muse]
2023-11-25 23:25:24,240 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [6]
2023-11-25 23:25:24,240 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:25:24,240 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#14
2023-11-25 23:25:24,240 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,240 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [15]
2023-11-25 23:25:24,240 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 15
2023-11-25 23:25:24,240 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#15
2023-11-25 23:25:24,240 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#15
2023-11-25 23:25:24,240 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#15
2023-11-25 23:25:24,241 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#15] : 651582571
2023-11-25 23:25:24,241 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Industrial metal]
2023-11-25 23:25:24,241 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Rammstein]
2023-11-25 23:25:24,241 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [2]
2023-11-25 23:25:24,241 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1994]
2023-11-25 23:25:24,241 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#15
2023-11-25 23:25:24,241 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,241 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [16]
2023-11-25 23:25:24,242 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 16
2023-11-25 23:25:24,242 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#16
2023-11-25 23:25:24,242 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#16
2023-11-25 23:25:24,242 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#16
2023-11-25 23:25:24,242 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#16] : 1789605372
2023-11-25 23:25:24,242 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Ambient]
2023-11-25 23:25:24,242 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Enigma]
2023-11-25 23:25:24,242 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:25:24,242 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1990]
2023-11-25 23:25:24,242 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#16
2023-11-25 23:25:24,243 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,243 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [17]
2023-11-25 23:25:24,243 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 17
2023-11-25 23:25:24,243 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#17
2023-11-25 23:25:24,243 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#17
2023-11-25 23:25:24,243 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#17
2023-11-25 23:25:24,243 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#17] : 2016258189
2023-11-25 23:25:24,243 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [Alt metal]
2023-11-25 23:25:24,243 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [Deftones]
2023-11-25 23:25:24,243 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [4]
2023-11-25 23:25:24,243 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1988]
2023-11-25 23:25:24,243 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#17
2023-11-25 23:25:24,243 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,244 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [21]
2023-11-25 23:25:24,244 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 21
2023-11-25 23:25:24,244 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#21
2023-11-25 23:25:24,244 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#21
2023-11-25 23:25:24,244 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#21
2023-11-25 23:25:24,244 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#21] : 55224763
2023-11-25 23:25:24,244 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [апра]
2023-11-25 23:25:24,244 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [чавпва]
2023-11-25 23:25:24,245 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [5654]
2023-11-25 23:25:24,245 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [456]
2023-11-25 23:25:24,245 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#21
2023-11-25 23:25:24,246 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,246 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [22]
2023-11-25 23:25:24,246 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Hydrated EntityKey (Group(39770937186900)): 22
2023-11-25 23:25:24,246 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).listOfMembers#22
2023-11-25 23:25:24,247 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).repertoire#22
2023-11-25 23:25:24,247 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (SelectEagerCollectionInitializer) Current row collection key : Group(39770937186900).tours#22
2023-11-25 23:25:24,247 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Created new entity instance [Group(39770937186900)#22] : 2081593411
2023-11-25 23:25:24,247 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [sdfs]
2023-11-25 23:25:24,247 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [sdkfjlskdf]
2023-11-25 23:25:24,247 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [3]
2023-11-25 23:25:24,247 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [1965]
2023-11-25 23:25:24,248 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityResultInitializer) Done materializing entityInstance : Group(39770937186900)#22
2023-11-25 23:25:24,248 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2e0ac29a
2023-11-25 23:25:24,259 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,260 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,260 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,268 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,268 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1574269310 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,269 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@573307588 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,269 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1543412631 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,270 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,276 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#22]
2023-11-25 23:25:24,276 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,276 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,277 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,277 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,277 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@181755512 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,277 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@519992016 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,277 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1503517615 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,277 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,280 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#22]
2023-11-25 23:25:24,280 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,282 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,282 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,282 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,282 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1584735559 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,282 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@533108898 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,282 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@390602596 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,283 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,285 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#22]
2023-11-25 23:25:24,285 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,285 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,286 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,286 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,286 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1961912325 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,286 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@588573376 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,286 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@9555485 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,286 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,289 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#21]
2023-11-25 23:25:24,289 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,289 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,290 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,290 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,290 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1068922939 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,290 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@827963638 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,290 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1148101311 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,290 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,291 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#21]
2023-11-25 23:25:24,292 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,292 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,292 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,293 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,293 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@159489672 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,293 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@944483933 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,293 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@119512184 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,293 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,295 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#21]
2023-11-25 23:25:24,295 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,295 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,295 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,295 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,295 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@168549364 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,295 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1896639121 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,296 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@587275408 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,296 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,297 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#17]
2023-11-25 23:25:24,298 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,298 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,298 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,298 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,298 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@931535128 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,298 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@474511076 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,298 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@220605503 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,298 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,300 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#17]
2023-11-25 23:25:24,300 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,300 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,300 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,300 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,300 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@360531684 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,302 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@696702880 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,302 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1203703270 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,302 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,304 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#17]
2023-11-25 23:25:24,304 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,304 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,304 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,305 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,305 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@40249617 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,305 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1024050310 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,305 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1611887187 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,305 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,307 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#16]
2023-11-25 23:25:24,307 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,307 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,307 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,308 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,308 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@724532232 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,308 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1347752660 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,308 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1515644179 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,308 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,310 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#16]
2023-11-25 23:25:24,310 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,310 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,310 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,310 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,310 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@656800482 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,311 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1253506408 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,311 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1311120119 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,311 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,313 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#16]
2023-11-25 23:25:24,313 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,313 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,314 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,314 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,314 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@281698238 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,314 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1858408178 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,314 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@235304464 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,314 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,316 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#15]
2023-11-25 23:25:24,316 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,316 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,316 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,317 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,317 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@843298103 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,317 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@264823705 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,317 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@702861645 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,317 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,318 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#15]
2023-11-25 23:25:24,319 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,319 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,319 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,319 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,319 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@117194675 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,319 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@152955032 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,319 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1097228482 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,320 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,321 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#15]
2023-11-25 23:25:24,322 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,322 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,322 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,322 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,322 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@140094554 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,322 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2060168675 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,322 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1887006159 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,322 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,325 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#14]
2023-11-25 23:25:24,325 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,325 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,325 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,326 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1245424329 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1905766740 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,326 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1852742964 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,326 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,327 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#14]
2023-11-25 23:25:24,328 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,328 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,328 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,329 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,329 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@493121206 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,329 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@125425427 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,329 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1047930524 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,329 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,332 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#14]
2023-11-25 23:25:24,332 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,333 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,333 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,333 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,333 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@869811254 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,333 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1008059927 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,333 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@12616296 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,333 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,335 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#13]
2023-11-25 23:25:24,335 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,335 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,336 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,336 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,336 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@528119327 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,336 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@464348250 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,336 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1321812012 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,336 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,338 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#13]
2023-11-25 23:25:24,338 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,339 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,339 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,339 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,339 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@377470977 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,339 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@305343170 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,340 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@220061484 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,340 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,342 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#13]
2023-11-25 23:25:24,342 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,342 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,343 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,343 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,343 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@263986588 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,343 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1824217080 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,343 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@804801216 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,343 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,346 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#12]
2023-11-25 23:25:24,346 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,346 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,346 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,347 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,347 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1613142922 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,347 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@224748292 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,347 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1776892539 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,347 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,349 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#12]
2023-11-25 23:25:24,349 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,349 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,349 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,350 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,350 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1844387144 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,350 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1307953260 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,350 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@40258889 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,350 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,351 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#12]
2023-11-25 23:25:24,352 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,352 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,352 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,352 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,352 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@506334445 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,353 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@772933220 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,353 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@479171712 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,353 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,355 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#11]
2023-11-25 23:25:24,356 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,356 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,356 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,356 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,356 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1761970853 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,356 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@164509841 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,356 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1565132031 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,356 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,359 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#11]
2023-11-25 23:25:24,359 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,359 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,359 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,360 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,360 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1670138609 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,360 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1852626819 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,360 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1758613657 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,360 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,362 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#11]
2023-11-25 23:25:24,362 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,363 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,363 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,363 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,363 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@224338787 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,363 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2012478665 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,363 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@451549965 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,363 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,365 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#9]
2023-11-25 23:25:24,366 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,366 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,366 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,366 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,366 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@989364024 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,366 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1879062809 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,366 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@2067929589 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,366 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,368 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#9]
2023-11-25 23:25:24,368 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,368 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,369 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,369 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,369 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@257578788 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,369 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1681681035 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,369 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1023801623 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,369 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,372 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#9]
2023-11-25 23:25:24,372 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,372 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,372 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,373 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,373 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@39498123 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,373 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@277167510 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,373 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@321603092 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,373 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,375 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#8]
2023-11-25 23:25:24,376 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,376 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,377 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,377 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,377 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1471788855 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,377 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@510349362 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,377 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1682704471 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,377 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,380 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#8]
2023-11-25 23:25:24,380 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,381 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,381 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,381 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,381 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@516061792 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,381 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@449369951 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,381 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1747665403 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,382 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,384 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#8]
2023-11-25 23:25:24,384 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,385 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,386 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,386 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,386 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@26475083 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,386 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@855983899 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,386 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1830179236 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,386 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,388 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#7]
2023-11-25 23:25:24,389 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,389 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,389 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,389 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,390 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1518639984 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,390 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@88107765 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,390 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@651309666 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,390 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,392 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#7]
2023-11-25 23:25:24,393 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,393 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,393 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,393 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,394 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@470594833 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,394 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@729466320 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,394 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@782222293 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,394 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,396 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#7]
2023-11-25 23:25:24,396 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,396 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,396 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,396 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,396 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1536953386 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,396 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@189660647 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,396 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@274956909 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,396 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,399 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#6]
2023-11-25 23:25:24,399 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,400 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,400 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,400 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,400 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1091825253 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,400 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1307540672 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,400 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1241639763 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,400 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,402 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#6]
2023-11-25 23:25:24,403 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,403 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,403 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,404 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,404 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@733181379 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,404 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1848461461 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,404 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@941750974 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,404 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,406 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#6]
2023-11-25 23:25:24,407 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,407 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,407 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,407 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,407 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1896801097 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,407 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1187845084 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,407 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1934759222 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,407 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,411 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#5]
2023-11-25 23:25:24,411 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,411 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,412 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,412 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,412 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@890545959 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,412 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1443692310 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,412 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@376874759 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,412 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,414 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#5]
2023-11-25 23:25:24,414 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,415 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,415 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,415 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,415 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@1687672950 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,416 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1199179132 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,416 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@2083696080 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,416 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,418 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#5]
2023-11-25 23:25:24,418 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,418 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,418 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,418 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,418 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@2007166660 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,418 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@513249741 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,419 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2013068768 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,419 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,422 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#4]
2023-11-25 23:25:24,422 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,422 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,423 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,423 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,423 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@2011634984 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,423 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1743060425 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,423 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@363244254 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,423 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,426 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#4]
2023-11-25 23:25:24,426 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,426 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,427 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,427 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,427 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@687760227 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,427 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@145677560 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,427 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@56920825 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,427 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,430 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#4]
2023-11-25 23:25:24,430 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,430 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,431 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,431 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,431 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1746894750 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,431 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1326121766 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,431 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@933065669 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,431 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,434 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#3]
2023-11-25 23:25:24,434 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,435 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,435 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,435 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,435 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1691518771 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,435 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@948818743 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,435 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1714856303 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,435 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,438 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:25:24,439 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 1
2023-11-25 23:25:24,439 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,439 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:25:24,439 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,439 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#1] : 238351822
2023-11-25 23:25:24,441 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:25:24,441 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,441 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:25:24,441 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [100]
2023-11-25 23:25:24,441 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [lalala]
2023-11-25 23:25:24,442 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#1
2023-11-25 23:25:24,442 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:25:24,443 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@e8903a4
2023-11-25 23:25:24,443 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:25:24,443 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.repertoire.{element}): 2
2023-11-25 23:25:24,443 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,443 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.repertoire#3
2023-11-25 23:25:24,443 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,444 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.repertoire.{element}#2] : 1991607459
2023-11-25 23:25:24,444 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.repertoire#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:25:24,444 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.repertoire#3] : org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:25:24,444 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,444 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [test]
2023-11-25 23:25:24,444 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [150]
2023-11-25 23:25:24,444 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [kakaka]
2023-11-25 23:25:24,444 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.repertoire.{element}#2
2023-11-25 23:25:24,444 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.repertoire#3] -> org.hibernate.collection.spi.PersistentBag@256656563
2023-11-25 23:25:24,444 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@e8903a4
2023-11-25 23:25:24,444 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#3]
2023-11-25 23:25:24,445 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,445 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,445 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,445 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,445 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@383937299 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,445 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@765458467 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,446 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1800231447 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,446 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,448 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [1]
2023-11-25 23:25:24,448 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 1
2023-11-25 23:25:24,448 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,448 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:25:24,449 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,449 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#1] : 1714728133
2023-11-25 23:25:24,449 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:25:24,449 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,449 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [3]
2023-11-25 23:25:24,449 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname]
2023-11-25 23:25:24,449 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [guitar]
2023-11-25 23:25:24,449 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#1
2023-11-25 23:25:24,449 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:25:24,449 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6728cff6
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [1] - [2]
2023-11-25 23:25:24,450 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Hydrated EntityKey (Group.listOfMembers.{element}): 2
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,450 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Current row collection key : Group.listOfMembers#3
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,450 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Created new entity instance [Group.listOfMembers.{element}#2] : 1820253457
2023-11-25 23:25:24,450 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Found existing loading collection entry [Group.listOfMembers#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:25:24,450 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Responsible for loading collection [Group.listOfMembers#3] : org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [0] - [3]
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [2] - [5]
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [3] - [testname2]
2023-11-25 23:25:24,450 DEBUG o.h.o.results [JavaFX Application Thread] Extracted JDBC value [4] - [bass]
2023-11-25 23:25:24,451 DEBUG o.h.o.r.l.entity [JavaFX Application Thread] (EntityJoinedFetchInitializer) Done materializing entityInstance : Group.listOfMembers.{element}#2
2023-11-25 23:25:24,451 DEBUG o.h.o.r.l.o.h.o.r.l.collection [JavaFX Application Thread] (BagInitializer) Reading element from row for collection [Group.listOfMembers#3] -> org.hibernate.collection.spi.PersistentBag@1003947510
2023-11-25 23:25:24,451 DEBUG o.h.o.r.loading [JavaFX Application Thread] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6728cff6
2023-11-25 23:25:24,451 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#3]
2023-11-25 23:25:24,451 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,451 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,451 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,453 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,453 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@404144147 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,453 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@1527190864 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,453 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@2054239929 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,453 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,455 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#2]
2023-11-25 23:25:24,456 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,456 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,457 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,457 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,457 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@755735018 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,457 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1581032972 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,457 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1369143066 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,457 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,459 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#2]
2023-11-25 23:25:24,460 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,460 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,460 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,460 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,460 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@2029532689 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,461 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@1926344115 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,461 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@389068968 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,461 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,462 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#2]
2023-11-25 23:25:24,463 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.tours]

2023-11-25 23:25:24,463 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : Group.tours) {
          primaryTableReference : tours as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.tours.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,463 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,464 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,464 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element}.group -> EntitySelectFetchInitializer(Group.tours.{element}.group)@1842662431 (ToOneAttributeMapping(NavigableRole[Tour.group])@451061295)
2023-11-25 23:25:24,464 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours.{element} -> EntityJoinedFetchInitializer(Group.tours.{element})@2134101237 (EntityCollectionPart(Group.tours#{element})@769020370)
2023-11-25 23:25:24,464 DEBUG o.h.o.results [JavaFX Application Thread]     Group.tours -> BagInitializer(Group.tours)@1642819967 (PluralAttribute(Group.tours))
2023-11-25 23:25:24,464 DEBUG o.h.SQL [JavaFX Application Thread] select t1_0.group_id,t1_0.tour_id,t1_0.tour_date_of_beginning,t1_0.tour_date_of_end,t1_0.tour_name from tours t1_0 where t1_0.group_id=?
2023-11-25 23:25:24,466 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.tours#1]
2023-11-25 23:25:24,466 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.repertoire]

2023-11-25 23:25:24,467 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (r1 : Group.repertoire) {
          primaryTableReference : songs as r1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.repertoire.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,467 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,467 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,467 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element}.group -> EntitySelectFetchInitializer(Group.repertoire.{element}.group)@1671455443 (ToOneAttributeMapping(NavigableRole[Song.group])@1904330708)
2023-11-25 23:25:24,467 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire.{element} -> EntityJoinedFetchInitializer(Group.repertoire.{element})@1509594961 (EntityCollectionPart(Group.repertoire#{element})@2040228986)
2023-11-25 23:25:24,467 DEBUG o.h.o.results [JavaFX Application Thread]     Group.repertoire -> BagInitializer(Group.repertoire)@1180124563 (PluralAttribute(Group.repertoire))
2023-11-25 23:25:24,467 DEBUG o.h.SQL [JavaFX Application Thread] select r1_0.group_id,r1_0.song_id,r1_0.song_album,r1_0.song_duration,r1_0.song_name from songs r1_0 where r1_0.group_id=?
2023-11-25 23:25:24,469 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.repertoire#1]
2023-11-25 23:25:24,469 DEBUG o.h.o.r.g.AST [JavaFX Application Thread] DomainResult Graph:
 \-CollectionDomainResult [Group.listOfMembers]

2023-11-25 23:25:24,470 DEBUG o.h.o.s.a.tree [JavaFX Application Thread] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (l1 : Group.listOfMembers) {
          primaryTableReference : members as l1_0
          TableGroupJoins {
            left  join LazyTableGroup (g1 : Group.listOfMembers.{element}.group) {
            }
          }
        }
      }
    }

2023-11-25 23:25:24,470 DEBUG o.h.o.s.exec [JavaFX Application Thread] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-11-25 23:25:24,470 DEBUG o.h.o.results [JavaFX Application Thread] Initializer list
2023-11-25 23:25:24,470 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element}.group -> EntitySelectFetchInitializer(Group.listOfMembers.{element}.group)@56726886 (ToOneAttributeMapping(NavigableRole[GroupMember.group])@279401174)
2023-11-25 23:25:24,470 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers.{element} -> EntityJoinedFetchInitializer(Group.listOfMembers.{element})@2145792836 (EntityCollectionPart(Group.listOfMembers#{element})@1616924978)
2023-11-25 23:25:24,470 DEBUG o.h.o.results [JavaFX Application Thread]     Group.listOfMembers -> BagInitializer(Group.listOfMembers)@1165378673 (PluralAttribute(Group.listOfMembers))
2023-11-25 23:25:24,470 DEBUG o.h.SQL [JavaFX Application Thread] select l1_0.group_id,l1_0.member_id,l1_0.member_age,l1_0.member_name,l1_0.member_role from members l1_0 where l1_0.group_id=?
2023-11-25 23:25:24,473 DEBUG o.h.s.r.i.ResultsHelper [JavaFX Application Thread] Collection fully initialized: [Group.listOfMembers#1]
2023-11-25 23:25:24,473 DEBUG o.h.e.t.i.TransactionImpl [JavaFX Application Thread] committing
2023-11-25 23:25:24,474 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Processing flush-time cascades
2023-11-25 23:25:24,486 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Dirty checking collections
2023-11-25 23:25:24,494 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#1], was: [Group.listOfMembers#1] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#1], was: [Group.repertoire#1] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#1], was: [Group.tours#1] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#2], was: [Group.listOfMembers#2] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#2], was: [Group.repertoire#2] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#2], was: [Group.tours#2] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#3], was: [Group.listOfMembers#3] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#3], was: [Group.repertoire#3] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#3], was: [Group.tours#3] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#4], was: [Group.listOfMembers#4] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#4], was: [Group.repertoire#4] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#4], was: [Group.tours#4] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#5], was: [Group.listOfMembers#5] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#5], was: [Group.repertoire#5] (initialized)
2023-11-25 23:25:24,495 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#5], was: [Group.tours#5] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#6], was: [Group.listOfMembers#6] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#6], was: [Group.repertoire#6] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#6], was: [Group.tours#6] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#7], was: [Group.listOfMembers#7] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#7], was: [Group.repertoire#7] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#7], was: [Group.tours#7] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#8], was: [Group.listOfMembers#8] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#8], was: [Group.repertoire#8] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#8], was: [Group.tours#8] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#9], was: [Group.listOfMembers#9] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#9], was: [Group.repertoire#9] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#9], was: [Group.tours#9] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#11], was: [Group.listOfMembers#11] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#11], was: [Group.repertoire#11] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#11], was: [Group.tours#11] (initialized)
2023-11-25 23:25:24,496 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#12], was: [Group.listOfMembers#12] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#12], was: [Group.repertoire#12] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#12], was: [Group.tours#12] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#13], was: [Group.listOfMembers#13] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#13], was: [Group.repertoire#13] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#13], was: [Group.tours#13] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#14], was: [Group.listOfMembers#14] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#14], was: [Group.repertoire#14] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#14], was: [Group.tours#14] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#15], was: [Group.listOfMembers#15] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#15], was: [Group.repertoire#15] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#15], was: [Group.tours#15] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#16], was: [Group.listOfMembers#16] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#16], was: [Group.repertoire#16] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#16], was: [Group.tours#16] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#17], was: [Group.listOfMembers#17] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#17], was: [Group.repertoire#17] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#17], was: [Group.tours#17] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#21], was: [Group.listOfMembers#21] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#21], was: [Group.repertoire#21] (initialized)
2023-11-25 23:25:24,497 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#21], was: [Group.tours#21] (initialized)
2023-11-25 23:25:24,498 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.listOfMembers#22], was: [Group.listOfMembers#22] (initialized)
2023-11-25 23:25:24,498 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.repertoire#22], was: [Group.repertoire#22] (initialized)
2023-11-25 23:25:24,498 DEBUG o.h.e.i.Collections [JavaFX Application Thread] Collection found: [Group.tours#22], was: [Group.tours#22] (initialized)
2023-11-25 23:25:24,501 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
2023-11-25 23:25:24,502 DEBUG o.h.e.i.AbstractFlushingEventListener [JavaFX Application Thread] Flushed: 0 (re)creations, 0 updates, 0 removals to 54 collections
2023-11-25 23:25:24,503 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Listing entities:
2023-11-25 23:25:24,503 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=100, album=test, name=lalala, id=1, group=Group#3}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=4, yearOfFoundation=1988, name=Deftones, mainGenre=Alt metal, id=17, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1990, name=Enigma, mainGenre=Ambient, id=16, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1994, name=Rammstein, mainGenre=Industrial metal, id=15, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=Muse, mainGenre=Alt rock, id=14, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1968, name=King Crimson, mainGenre=Prog rock, id=13, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Song{duration=150, album=test, name=kakaka, id=2, group=Group#3}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=2006, name=Ghost, mainGenre=Hard rock, id=12, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1965, name=sdkfjlskdf, mainGenre=sdfs, id=22, repertoire=[], tours=[]}
2023-11-25 23:25:24,504 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5654, yearOfFoundation=456, name=чавпва, mainGenre=апра, id=21, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[GroupMember#1, GroupMember#2], placeInChart=2, yearOfFoundation=1978, name=Picnic, mainGenre=Rock, id=3, repertoire=[Song#1, Song#2], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=2, yearOfFoundation=1965, name=Pink Floyd, mainGenre=Rock, id=2, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=3, yearOfFoundation=1962, name=Rolling Stones, mainGenre=Rock, id=1, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=bass, name=testname2, id=2, age=5, group=Group#3}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=1, yearOfFoundation=1991, name=Katatonia, mainGenre=Doom metal, id=11, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=11, yearOfFoundation=1993, name=Ulver, mainGenre=Black metal, id=9, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=10, yearOfFoundation=1991, name=Burzum, mainGenre=Black metal, id=8, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] GroupMember{role=guitar, name=testname, id=1, age=3, group=Group#3}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=6, yearOfFoundation=1994, name=System Of a Down, mainGenre=Alt Metal, id=7, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=8, yearOfFoundation=1996, name=Linkin Park, mainGenre=Alt Rock, id=6, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] Group{listOfMembers=[], placeInChart=5, yearOfFoundation=1990, name=Tool, mainGenre=Prog rock, id=5, repertoire=[], tours=[]}
2023-11-25 23:25:24,505 DEBUG o.h.i.u.EntityPrinter [JavaFX Application Thread] More......
2023-11-25 23:25:24,507 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:25:24,508 DEBUG o.h.r.j.i.LogicalConnectionManagedImpl [JavaFX Application Thread] Initiating JDBC connection release from afterTransaction
2023-11-25 23:25:24,509 INFO mainLogger [JavaFX Application Thread] Fetching data from DB successful
2023-11-25 23:25:24,510 INFO mainLogger [JavaFX Application Thread] Table filled in
2023-11-25 23:25:24,511 INFO mainLogger [JavaFX Application Thread] System initialized
2023-11-25 23:25:36,864 INFO mainLogger [main] Application closed
